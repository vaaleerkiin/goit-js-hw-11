{"version":3,"file":"bootstrap-native.cjs","sources":["../node_modules/@thednp/event-listener/dist/event-listener.cjs","../node_modules/@thednp/shorty/dist/shorty.cjs","../src/strings/fadeClass.ts","../src/strings/showClass.ts","../src/strings/dataBsDismiss.ts","../src/strings/alertString.ts","../src/strings/alertComponent.ts","../src/version.ts","../src/components/base-component.ts","../src/components/alert.ts","../src/strings/activeClass.ts","../src/strings/dataBsToggle.ts","../src/strings/buttonString.ts","../src/strings/buttonComponent.ts","../src/components/button.ts","../src/strings/dataBsTarget.ts","../src/strings/carouselString.ts","../src/strings/carouselComponent.ts","../src/strings/dataBsParent.ts","../src/strings/dataBsContainer.ts","../src/util/getTargetElement.ts","../src/components/carousel.ts","../src/strings/collapsingClass.ts","../src/strings/collapseString.ts","../src/strings/collapseComponent.ts","../src/components/collapse.ts","../src/strings/dropdownClasses.ts","../src/strings/dropdownComponent.ts","../src/strings/dropdownMenuClass.ts","../src/util/isEmptyAnchor.ts","../src/components/dropdown.ts","../src/strings/modalString.ts","../src/strings/modalComponent.ts","../src/strings/offcanvasComponent.ts","../src/strings/fixedTopClass.ts","../src/strings/fixedBottomClass.ts","../src/strings/stickyTopClass.ts","../src/strings/positionStickyClass.ts","../src/util/scrollbar.ts","../src/strings/offcanvasString.ts","../src/util/popupContainer.ts","../src/util/backdrop.ts","../src/util/isVisible.ts","../src/components/modal.ts","../src/components/offcanvas.ts","../src/strings/popoverString.ts","../src/strings/popoverComponent.ts","../src/strings/tooltipString.ts","../src/util/getTipTemplate.ts","../src/util/tipClassPositions.ts","../src/util/styleTip.ts","../src/util/tooltipDefaults.ts","../src/strings/dataOriginalTitle.ts","../src/strings/tooltipComponent.ts","../src/util/setHtml.ts","../src/util/createTip.ts","../src/util/getElementContainer.ts","../src/components/tooltip.ts","../src/components/popover.ts","../src/strings/scrollspyString.ts","../src/strings/scrollspyComponent.ts","../src/components/scrollspy.ts","../src/strings/tabString.ts","../src/strings/tabComponent.ts","../src/components/tab.ts","../src/strings/toastString.ts","../src/strings/toastComponent.ts","../src/components/toast.ts","../src/util/init.ts"],"sourcesContent":["\"use strict\";Object.defineProperty(exports,Symbol.toStringTag,{value:\"Module\"});const r={},a=s=>{const{type:e,currentTarget:c}=s;[...r[e]].forEach(([n,o])=>{c===n&&[...o].forEach(([t,i])=>{t.apply(n,[s]),typeof i==\"object\"&&i.once&&f(n,e,t,i)})})},d=(s,e,c,n)=>{r[e]||(r[e]=new Map);const o=r[e];o.has(s)||o.set(s,new Map);const t=o.get(s),{size:i}=t;t.set(c,n),i||s.addEventListener(e,a,n)},f=(s,e,c,n)=>{const o=r[e],t=o&&o.get(s),i=t&&t.get(c),g=i!==void 0?i:n;t&&t.has(c)&&t.delete(c),o&&(!t||!t.size)&&o.delete(s),(!o||!o.size)&&delete r[e],(!t||!t.size)&&s.removeEventListener(e,a,g)},E=d,L=f;exports.addListener=d;exports.globalListener=a;exports.off=L;exports.on=E;exports.registry=r;exports.removeListener=f;\n//# sourceMappingURL=event-listener.cjs.map\n","\"use strict\";Object.defineProperty(exports,Symbol.toStringTag,{value:\"Module\"});const lt=\"aria-checked\",dt=\"aria-description\",mt=\"aria-describedby\",Et=\"aria-expanded\",vt=\"aria-haspopup\",pt=\"aria-hidden\",gt=\"aria-label\",ft=\"aria-labelledby\",bt=\"aria-modal\",yt=\"aria-pressed\",ht=\"aria-selected\",At=\"aria-valuemin\",wt=\"aria-valuemax\",kt=\"aria-valuenow\",St=\"aria-valuetext\",Q=\"abort\",q=\"beforeunload\",G=\"blur\",K=\"change\",J=\"contextmenu\",x=\"DOMContentLoaded\",X=\"DOMMouseScroll\",Y=\"error\",Z=\"focus\",$=\"focusin\",_=\"focusout\",ee=\"gesturechange\",te=\"gestureend\",ne=\"gesturestart\",oe=\"keydown\",se=\"keypress\",re=\"keyup\",ae=\"load\",ce=\"click\",ie=\"dblclick\",ue=\"mousedown\",le=\"mouseup\",de=\"hover\",me=\"mouseenter\",Ee=\"mouseleave\",ve=\"mousein\",pe=\"mouseout\",ge=\"mouseover\",fe=\"mousemove\",be=\"mousewheel\",ye=\"move\",he=\"orientationchange\",Ae=\"pointercancel\",we=\"pointerdown\",ke=\"pointerleave\",Se=\"pointermove\",De=\"pointerup\",Me=\"readystatechange\",Ne=\"reset\",Te=\"resize\",Ce=\"select\",Le=\"selectend\",Oe=\"selectstart\",Ie=\"scroll\",ze=\"submit\",xe=\"touchstart\",He=\"touchmove\",Be=\"touchcancel\",Ve=\"touchend\",Pe=\"unload\",Dt={DOMContentLoaded:x,DOMMouseScroll:X,abort:Q,beforeunload:q,blur:G,change:K,click:ce,contextmenu:J,dblclick:ie,error:Y,focus:Z,focusin:$,focusout:_,gesturechange:ee,gestureend:te,gesturestart:ne,hover:de,keydown:oe,keypress:se,keyup:re,load:ae,mousedown:ue,mousemove:fe,mousein:ve,mouseout:pe,mouseenter:me,mouseleave:Ee,mouseover:ge,mouseup:le,mousewheel:be,move:ye,orientationchange:he,pointercancel:Ae,pointerdown:we,pointerleave:ke,pointermove:Se,pointerup:De,readystatechange:Me,reset:Ne,resize:Te,scroll:Ie,select:Ce,selectend:Le,selectstart:Oe,submit:ze,touchcancel:Be,touchend:Ve,touchmove:He,touchstart:xe,unload:Pe},Mt=\"drag\",Nt=\"dragstart\",Tt=\"dragenter\",Ct=\"dragleave\",Lt=\"dragover\",Ot=\"dragend\",It=\"loadstart\",zt={start:\"mousedown\",end:\"mouseup\",move:\"mousemove\",cancel:\"mouseleave\"},xt={down:\"mousedown\",up:\"mouseup\"},Ht=\"onmouseleave\"in document?[\"mouseenter\",\"mouseleave\"]:[\"mouseover\",\"mouseout\"],Bt={start:\"touchstart\",end:\"touchend\",move:\"touchmove\",cancel:\"touchcancel\"},Vt={in:\"focusin\",out:\"focusout\"},Pt={Backspace:\"Backspace\",Tab:\"Tab\",Enter:\"Enter\",Shift:\"Shift\",Control:\"Control\",Alt:\"Alt\",Pause:\"Pause\",CapsLock:\"CapsLock\",Escape:\"Escape\",Scape:\"Space\",ArrowLeft:\"ArrowLeft\",ArrowUp:\"ArrowUp\",ArrowRight:\"ArrowRight\",ArrowDown:\"ArrowDown\",Insert:\"Insert\",Delete:\"Delete\",Meta:\"Meta\",ContextMenu:\"ContextMenu\",ScrollLock:\"ScrollLock\"},Ft=\"Alt\",Rt=\"ArrowDown\",Wt=\"ArrowUp\",Ut=\"ArrowLeft\",jt=\"ArrowRight\",Qt=\"Backspace\",qt=\"CapsLock\",Gt=\"Control\",Kt=\"Delete\",Jt=\"Enter\",Xt=\"Escape\",Yt=\"Insert\",Zt=\"Meta\",$t=\"Pause\",_t=\"ScrollLock\",en=\"Shift\",tn=\"Space\",nn=\"Tab\",Fe=\"animationDuration\",Re=\"animationDelay\",H=\"animationName\",T=\"animationend\",We=\"transitionDuration\",Ue=\"transitionDelay\",C=\"transitionend\",B=\"transitionProperty\",on=\"addEventListener\",sn=\"removeEventListener\",rn={linear:\"linear\",easingSinusoidalIn:\"cubic-bezier(0.47,0,0.745,0.715)\",easingSinusoidalOut:\"cubic-bezier(0.39,0.575,0.565,1)\",easingSinusoidalInOut:\"cubic-bezier(0.445,0.05,0.55,0.95)\",easingQuadraticIn:\"cubic-bezier(0.550,0.085,0.680,0.530)\",easingQuadraticOut:\"cubic-bezier(0.250,0.460,0.450,0.940)\",easingQuadraticInOut:\"cubic-bezier(0.455,0.030,0.515,0.955)\",easingCubicIn:\"cubic-bezier(0.55,0.055,0.675,0.19)\",easingCubicOut:\"cubic-bezier(0.215,0.61,0.355,1)\",easingCubicInOut:\"cubic-bezier(0.645,0.045,0.355,1)\",easingQuarticIn:\"cubic-bezier(0.895,0.03,0.685,0.22)\",easingQuarticOut:\"cubic-bezier(0.165,0.84,0.44,1)\",easingQuarticInOut:\"cubic-bezier(0.77,0,0.175,1)\",easingQuinticIn:\"cubic-bezier(0.755,0.05,0.855,0.06)\",easingQuinticOut:\"cubic-bezier(0.23,1,0.32,1)\",easingQuinticInOut:\"cubic-bezier(0.86,0,0.07,1)\",easingExponentialIn:\"cubic-bezier(0.95,0.05,0.795,0.035)\",easingExponentialOut:\"cubic-bezier(0.19,1,0.22,1)\",easingExponentialInOut:\"cubic-bezier(1,0,0,1)\",easingCircularIn:\"cubic-bezier(0.6,0.04,0.98,0.335)\",easingCircularOut:\"cubic-bezier(0.075,0.82,0.165,1)\",easingCircularInOut:\"cubic-bezier(0.785,0.135,0.15,0.86)\",easingBackIn:\"cubic-bezier(0.6,-0.28,0.735,0.045)\",easingBackOut:\"cubic-bezier(0.175,0.885,0.32,1.275)\",easingBackInOut:\"cubic-bezier(0.68,-0.55,0.265,1.55)\"},an=\"offsetHeight\",cn=\"offsetWidth\",un=\"scrollHeight\",ln=\"scrollWidth\",dn=\"tabindex\",mn=navigator.userAgentData,A=mn,{userAgent:En}=navigator,w=En,R=/iPhone|iPad|iPod|Android/i;let I=!1;A?I=A.brands.some(e=>R.test(e.brand)):I=R.test(w);const vn=I,W=/(iPhone|iPod|iPad)/,pn=A?A.brands.some(e=>W.test(e.brand)):W.test(w),gn=w?w.includes(\"Firefox\"):!1,{head:k}=document,fn=[\"webkitPerspective\",\"perspective\"].some(e=>e in k.style),je=(e,t,n,o)=>{const s=o||!1;e.addEventListener(t,n,s)},Qe=(e,t,n,o)=>{const s=o||!1;e.removeEventListener(t,n,s)},qe=(e,t,n,o)=>{const s=a=>{(a.target===e||a.currentTarget===e)&&(n.apply(e,[a]),Qe(e,t,s,o))};je(e,t,s,o)},Ge=()=>{},bn=(()=>{let e=!1;try{const t=Object.defineProperty({},\"passive\",{get:()=>(e=!0,e)});qe(document,x,Ge,t)}catch{}return e})(),yn=[\"webkitTransform\",\"transform\"].some(e=>e in k.style),hn=\"ontouchstart\"in window||\"msMaxTouchPoints\"in navigator,An=[\"webkitAnimation\",\"animation\"].some(e=>e in k.style),wn=[\"webkitTransition\",\"transition\"].some(e=>e in k.style),Ke=(e,t)=>e.getAttribute(t),kn=(e,t,n)=>t.getAttributeNS(e,n),Sn=(e,t)=>e.hasAttribute(t),Dn=(e,t,n)=>t.hasAttributeNS(e,n),Mn=(e,t,n)=>e.setAttribute(t,n),Nn=(e,t,n,o)=>t.setAttributeNS(e,n,o),Tn=(e,t)=>e.removeAttribute(t),Cn=(e,t,n)=>t.removeAttributeNS(e,n),Ln=(e,...t)=>{e.classList.add(...t)},On=(e,...t)=>{e.classList.remove(...t)},In=(e,t)=>e.classList.contains(t),{body:zn}=document,{documentElement:xn}=document,Hn=e=>Array.from(e),E=e=>e!=null&&typeof e==\"object\"||!1,c=e=>E(e)&&typeof e.nodeType==\"number\"&&[1,2,3,4,5,6,7,8,9,10,11].some(t=>e.nodeType===t)||!1,u=e=>c(e)&&e.nodeType===1||!1,y=new Map,L={set:(e,t,n)=>{if(!u(e))return;y.has(t)||y.set(t,new Map),y.get(t).set(e,n)},getAllFor:e=>y.get(e)||null,get:(e,t)=>{if(!u(e)||!t)return null;const n=L.getAllFor(t);return e&&n&&n.get(e)||null},remove:(e,t)=>{const n=L.getAllFor(t);!n||!u(e)||(n.delete(e),n.size===0&&y.delete(t))}},Bn=(e,t)=>L.get(e,t),S=e=>typeof e==\"string\"||!1,V=e=>E(e)&&e.constructor.name===\"Window\"||!1,P=e=>c(e)&&e.nodeType===9||!1,d=e=>V(e)?e.document:P(e)?e:c(e)?e.ownerDocument:window.document,D=(e,...t)=>Object.assign(e,...t),Je=e=>{if(!e)return;if(S(e))return d().createElement(e);const{tagName:t}=e,n=Je(t);if(!n)return;const o={...e};return delete o.tagName,D(n,o)},Xe=(e,t)=>{if(!e||!t)return;if(S(t))return d().createElementNS(e,t);const{tagName:n}=t,o=Xe(e,n);if(!o)return;const s={...t};return delete s.tagName,D(o,s)},F=(e,t)=>e.dispatchEvent(t),Vn=(e,t,n)=>n.indexOf(e)===t,m=(e,t)=>{const n=getComputedStyle(e),o=t.replace(\"webkit\",\"Webkit\").replace(/([A-Z])/g,\"-$1\").toLowerCase();return n.getPropertyValue(o)},Ye=e=>{const t=m(e,H),n=m(e,Re),o=n.includes(\"ms\")?1:1e3,s=t&&t!==\"none\"?parseFloat(n)*o:0;return Number.isNaN(s)?0:s},Ze=e=>{const t=m(e,H),n=m(e,Fe),o=n.includes(\"ms\")?1:1e3,s=t&&t!==\"none\"?parseFloat(n)*o:0;return Number.isNaN(s)?0:s},Pn=(e,t)=>{let n=0;const o=new Event(T),s=Ze(e),a=Ye(e);if(s){const i=l=>{l.target===e&&(t.apply(e,[l]),e.removeEventListener(T,i),n=1)};e.addEventListener(T,i),setTimeout(()=>{n||F(e,o)},s+a+17)}else t.apply(e,[o])},$e=e=>{const t=m(e,B),n=m(e,Ue),o=n.includes(\"ms\")?1:1e3,s=t&&t!==\"none\"?parseFloat(n)*o:0;return Number.isNaN(s)?0:s},_e=e=>{const t=m(e,B),n=m(e,We),o=n.includes(\"ms\")?1:1e3,s=t&&t!==\"none\"?parseFloat(n)*o:0;return Number.isNaN(s)?0:s},Fn=(e,t)=>{let n=0;const o=new Event(C),s=_e(e),a=$e(e);if(s){const i=l=>{l.target===e&&(t.apply(e,[l]),e.removeEventListener(C,i),n=1)};e.addEventListener(C,i),setTimeout(()=>{n||F(e,o)},s+a+17)}else t.apply(e,[o])},Rn=e=>Float32Array.from(Array.from(e)),Wn=e=>Float64Array.from(Array.from(e)),Un=(e,t)=>e.focus(t),z=e=>[\"true\",!0].includes(e)?!0:[\"false\",!1].includes(e)?!1:[\"null\",\"\",null,void 0].includes(e)?null:e!==\"\"&&!Number.isNaN(+e)?+e:e,h=e=>Object.entries(e),et=e=>e.toLowerCase(),jn=(e,t,n,o)=>{const s={...n},a={...e.dataset},i={...t},l={},v=\"title\";return h(a).forEach(([r,p])=>{const N=o&&typeof r==\"string\"&&r.includes(o)?r.replace(o,\"\").replace(/[A-Z]/g,ut=>et(ut)):r;l[N]=z(p)}),h(s).forEach(([r,p])=>{s[r]=z(p)}),h(t).forEach(([r,p])=>{r in s?i[r]=s[r]:r in l?i[r]=l[r]:i[r]=r===v?Ke(e,v):p}),i},Qn=(e,t)=>E(e)&&(Object.hasOwn(e,t)||t in e),qn=e=>Object.keys(e),Gn=e=>Object.values(e),Kn=(e,t)=>{const n=new CustomEvent(e,{cancelable:!0,bubbles:!0});return E(t)&&D(n,t),n},Jn={passive:!0},Xn=e=>e.offsetHeight,Yn=(e,t)=>{h(t).forEach(([n,o])=>{if(o&&S(n)&&n.includes(\"--\"))e.style.setProperty(n,o);else{const s={};s[n]=o,D(e.style,s)}})},O=e=>E(e)&&e.constructor.name===\"Map\"||!1,tt=e=>typeof e==\"number\"||!1,g=new Map,Zn={set:(e,t,n,o)=>{u(e)&&(o&&o.length?(g.has(e)||g.set(e,new Map),g.get(e).set(o,setTimeout(t,n))):g.set(e,setTimeout(t,n)))},get:(e,t)=>{if(!u(e))return null;const n=g.get(e);return t&&n&&O(n)?n.get(t)||null:tt(n)?n:null},clear:(e,t)=>{if(!u(e))return;const n=g.get(e);t&&t.length&&O(n)?(clearTimeout(n.get(t)),n.delete(t),n.size===0&&g.delete(e)):(clearTimeout(n),g.delete(e))}},$n=e=>e.toUpperCase(),b=(e,t)=>{const{width:n,height:o,top:s,right:a,bottom:i,left:l}=e.getBoundingClientRect();let v=1,r=1;if(t&&u(e)){const{offsetWidth:p,offsetHeight:N}=e;v=p>0?Math.round(n)/p:1,r=N>0?Math.round(o)/N:1}return{width:n/v,height:o/r,top:s/r,right:a/v,bottom:i/r,left:l/v,x:l/v,y:s/r}},_n=e=>d(e).body,M=e=>d(e).documentElement,eo=e=>d(e).head,to=e=>{const t=V(e),n=t?e.scrollX:e.scrollLeft,o=t?e.scrollY:e.scrollTop;return{x:n,y:o}},nt=e=>c(e)&&e.constructor.name===\"ShadowRoot\"||!1,no=e=>e.nodeName===\"HTML\"?e:u(e)&&e.assignedSlot||c(e)&&e.parentNode||nt(e)&&e.host||M(e),ot=e=>{if(!u(e))return!1;const{width:t,height:n}=b(e),{offsetWidth:o,offsetHeight:s}=e;return Math.round(t)!==o||Math.round(n)!==s},oo=(e,t,n)=>{const o=u(t),s=b(e,o&&ot(t)),a={x:0,y:0};if(o){const i=b(t,!0);a.x=i.x+t.clientLeft,a.y=i.y+t.clientTop}return{x:s.left+n.x-a.x,y:s.top+n.y-a.y,width:s.width,height:s.height}};let U=0,j=0;const f=new Map,st=(e,t)=>{let n=t?U:j;if(t){const o=st(e),s=f.get(o)||new Map;f.has(o)||f.set(o,s),O(s)&&!s.has(t)?(s.set(t,n),U+=1):n=s.get(t)}else{const o=e.id||e;f.has(o)?n=f.get(o):(f.set(o,n),j+=1)}return n},so=e=>e?P(e)?e.defaultView:c(e)?e?.ownerDocument?.defaultView:e:window,rt=e=>Array.isArray(e)||!1,ro=e=>c(e)&&e.nodeName===\"CANVAS\"||!1,at=e=>u(e)&&!!e.shadowRoot||!1,ao=e=>c(e)&&[1,2,3,4,5,6,7,8].some(t=>e.nodeType===t)||!1,co=e=>{if(!c(e))return!1;const{top:t,bottom:n}=b(e),{clientHeight:o}=M(e);return t<=o&&n>=0},io=e=>{if(!c(e))return!1;const{clientWidth:t,clientHeight:n}=M(e),{top:o,left:s,bottom:a,right:i}=b(e,!0);return o>=0&&s>=0&&a<=n&&i<=t},uo=e=>rt(e)&&e.every(u)||!1,lo=e=>typeof e==\"function\"||!1,mo=e=>E(e)&&e.constructor.name===\"HTMLCollection\"||!1,Eo=e=>u(e)&&e.tagName===\"IMG\"||!1,vo=e=>{if(!S(e))return!1;try{JSON.parse(e)}catch{return!1}return!0},po=e=>E(e)&&e.constructor.name===\"WeakMap\"||!1,go=e=>c(e)&&[\"SVG\",\"Image\",\"Video\",\"Canvas\"].some(t=>e.constructor.name.includes(t))||!1,fo=e=>E(e)&&e.constructor.name===\"NodeList\"||!1,bo=e=>M(e).dir===\"rtl\",yo=e=>c(e)&&e.constructor.name.includes(\"SVG\")||!1,ho=e=>c(e)&&[\"TABLE\",\"TD\",\"TH\"].includes(e.nodeName)||!1,ct=(e,t)=>e?e.closest(t)||ct(e.getRootNode().host,t):null,Ao=(e,t)=>u(e)?e:(c(t)?t:d()).querySelector(e),it=(e,t)=>(c(t)?t:d()).getElementsByTagName(e),wo=e=>[...it(\"*\",e)].filter(at),ko=(e,t)=>d(t).getElementById(e)||null,So=(e,t)=>(c(t)?t:d()).querySelectorAll(e),Do=(e,t)=>(t&&c(t)?t:d()).getElementsByClassName(e),Mo=(e,t)=>e.matches(t),No=\"2.0.0alpha12\";exports.ArrayFrom=Hn;exports.DOMContentLoadedEvent=x;exports.DOMMouseScrollEvent=X;exports.Data=L;exports.Float32ArrayFrom=Rn;exports.Float64ArrayFrom=Wn;exports.ObjectAssign=D;exports.ObjectEntries=h;exports.ObjectHasOwn=Qn;exports.ObjectKeys=qn;exports.ObjectValues=Gn;exports.Timer=Zn;exports.abortEvent=Q;exports.addClass=Ln;exports.addEventListener=on;exports.animationDelay=Re;exports.animationDuration=Fe;exports.animationEndEvent=T;exports.animationName=H;exports.ariaChecked=lt;exports.ariaDescribedBy=mt;exports.ariaDescription=dt;exports.ariaExpanded=Et;exports.ariaHasPopup=vt;exports.ariaHidden=pt;exports.ariaLabel=gt;exports.ariaLabelledBy=ft;exports.ariaModal=bt;exports.ariaPressed=yt;exports.ariaSelected=ht;exports.ariaValueMax=wt;exports.ariaValueMin=At;exports.ariaValueNow=kt;exports.ariaValueText=St;exports.beforeunloadEvent=q;exports.bezierEasings=rn;exports.blurEvent=G;exports.changeEvent=K;exports.closest=ct;exports.contextmenuEvent=J;exports.createCustomEvent=Kn;exports.createElement=Je;exports.createElementNS=Xe;exports.dispatchEvent=F;exports.distinct=Vn;exports.documentBody=zn;exports.documentElement=xn;exports.documentHead=k;exports.dragEvent=Mt;exports.dragendEvent=Ot;exports.dragenterEvent=Tt;exports.dragleaveEvent=Ct;exports.dragoverEvent=Lt;exports.dragstartEvent=Nt;exports.emulateAnimationEnd=Pn;exports.emulateTransitionEnd=Fn;exports.errorEvent=Y;exports.focus=Un;exports.focusEvent=Z;exports.focusEvents=Vt;exports.focusinEvent=$;exports.focusoutEvent=_;exports.gesturechangeEvent=ee;exports.gestureendEvent=te;exports.gesturestartEvent=ne;exports.getAttribute=Ke;exports.getAttributeNS=kn;exports.getBoundingClientRect=b;exports.getCustomElements=wo;exports.getDocument=d;exports.getDocumentBody=_n;exports.getDocumentElement=M;exports.getDocumentHead=eo;exports.getElementAnimationDelay=Ye;exports.getElementAnimationDuration=Ze;exports.getElementById=ko;exports.getElementStyle=m;exports.getElementTransitionDelay=$e;exports.getElementTransitionDuration=_e;exports.getElementsByClassName=Do;exports.getElementsByTagName=it;exports.getInstance=Bn;exports.getNodeScroll=to;exports.getParentNode=no;exports.getRectRelativeToOffsetParent=oo;exports.getUID=st;exports.getWindow=so;exports.hasAttribute=Sn;exports.hasAttributeNS=Dn;exports.hasClass=In;exports.isApple=pn;exports.isArray=rt;exports.isCanvas=ro;exports.isCustomElement=at;exports.isDocument=P;exports.isElement=ao;exports.isElementInScrollRange=co;exports.isElementInViewport=io;exports.isElementsArray=uo;exports.isFirefox=gn;exports.isFunction=lo;exports.isHTMLCollection=mo;exports.isHTMLElement=u;exports.isHTMLImageElement=Eo;exports.isJSON=vo;exports.isMap=O;exports.isMedia=go;exports.isMobile=vn;exports.isNode=c;exports.isNodeList=fo;exports.isNumber=tt;exports.isObject=E;exports.isRTL=bo;exports.isSVGElement=yo;exports.isScaledElement=ot;exports.isShadowRoot=nt;exports.isString=S;exports.isTableElement=ho;exports.isWeakMap=po;exports.isWindow=V;exports.keyAlt=Ft;exports.keyArrowDown=Rt;exports.keyArrowLeft=Ut;exports.keyArrowRight=jt;exports.keyArrowUp=Wt;exports.keyBackspace=Qt;exports.keyCapsLock=qt;exports.keyControl=Gt;exports.keyDelete=Kt;exports.keyEnter=Jt;exports.keyEscape=Xt;exports.keyInsert=Yt;exports.keyMeta=Zt;exports.keyPause=$t;exports.keyScrollLock=_t;exports.keyShift=en;exports.keySpace=tn;exports.keyTab=nn;exports.keyboardEventKeys=Pt;exports.keydownEvent=oe;exports.keypressEvent=se;exports.keyupEvent=re;exports.loadEvent=ae;exports.loadstartEvent=It;exports.matches=Mo;exports.mouseClickEvents=xt;exports.mouseHoverEvents=Ht;exports.mouseSwipeEvents=zt;exports.mouseclickEvent=ce;exports.mousedblclickEvent=ie;exports.mousedownEvent=ue;exports.mouseenterEvent=me;exports.mousehoverEvent=de;exports.mouseinEvent=ve;exports.mouseleaveEvent=Ee;exports.mousemoveEvent=fe;exports.mouseoutEvent=pe;exports.mouseoverEvent=ge;exports.mouseupEvent=le;exports.mousewheelEvent=be;exports.moveEvent=ye;exports.nativeEvents=Dt;exports.noop=Ge;exports.normalizeOptions=jn;exports.normalizeValue=z;exports.off=Qe;exports.offsetHeight=an;exports.offsetWidth=cn;exports.on=je;exports.one=qe;exports.orientationchangeEvent=he;exports.passiveHandler=Jn;exports.pointercancelEvent=Ae;exports.pointerdownEvent=we;exports.pointerleaveEvent=ke;exports.pointermoveEvent=Se;exports.pointerupEvent=De;exports.querySelector=Ao;exports.querySelectorAll=So;exports.readystatechangeEvent=Me;exports.reflow=Xn;exports.removeAttribute=Tn;exports.removeAttributeNS=Cn;exports.removeClass=On;exports.removeEventListener=sn;exports.resetEvent=Ne;exports.resizeEvent=Te;exports.scrollEvent=Ie;exports.scrollHeight=un;exports.scrollWidth=ln;exports.selectEvent=Ce;exports.selectendEvent=Le;exports.selectstartEvent=Oe;exports.setAttribute=Mn;exports.setAttributeNS=Nn;exports.setElementStyle=Yn;exports.submitEvent=ze;exports.support3DTransform=fn;exports.supportAnimation=An;exports.supportPassive=bn;exports.supportTouch=hn;exports.supportTransform=yn;exports.supportTransition=wn;exports.tabindex=dn;exports.toLowerCase=et;exports.toUpperCase=$n;exports.touchEvents=Bt;exports.touchcancelEvent=Be;exports.touchendEvent=Ve;exports.touchmoveEvent=He;exports.touchstartEvent=xe;exports.transitionDelay=Ue;exports.transitionDuration=We;exports.transitionEndEvent=C;exports.transitionProperty=B;exports.unloadEvent=Pe;exports.userAgent=w;exports.userAgentData=A;exports.version=No;\n//# sourceMappingURL=shorty.cjs.map\n","/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = 'fade';\nexport default fadeClass;\n","/**\n * Global namespace for most components `show` class.\n */\nconst showClass = 'show';\nexport default showClass;\n","/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = 'data-bs-dismiss';\nexport default dataBsDismiss;\n","/** @type {string} */\nconst alertString = 'alert';\nexport default alertString;\n","/** @type {string} */\nconst alertComponent = 'Alert';\nexport default alertComponent;\n","import { version } from '../package.json';\n\nconst Version = version;\n\nexport default Version;\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport { querySelector, normalizeOptions, Data, ObjectKeys, isString } from '@thednp/shorty';\n\nimport type { BaseOptions } from '../interface/baseComponent';\nimport Version from '../version';\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  element: HTMLElement;\n  options?: BaseOptions;\n\n  /**\n   * @param target `HTMLElement` or selector string\n   * @param config component instance options\n   */\n  constructor(target: HTMLElement | string, config?: BaseOptions) {\n    const element = querySelector(target);\n\n    if (!element) {\n      if (isString(target)) {\n        throw Error(`${this.name} Error: \"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`${this.name} Error: your target is not an instance of HTMLElement.`);\n      }\n    }\n\n    const prevInstance = Data.get<this>(element, this.name);\n    if (prevInstance) prevInstance.dispose();\n\n    this.element = element;\n\n    /* istanbul ignore else */\n    if (this.defaults && ObjectKeys(this.defaults).length) {\n      this.options = normalizeOptions(element, this.defaults, config || {}, 'bs');\n    }\n\n    Data.set(element, this.name, this);\n  }\n\n  /* istanbul ignore next */\n  get version() {\n    return Version;\n  }\n\n  /* istanbul ignore next */\n  get name() {\n    return 'BaseComponent';\n  }\n\n  /* istanbul ignore next */\n  get defaults() {\n    return {};\n  }\n\n  /**\n   * Removes component from target element;\n   */\n  dispose() {\n    Data.remove(this.element, this.name);\n    ObjectKeys(this).forEach(prop => {\n      delete this[prop];\n    });\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\nimport {\n  emulateTransitionEnd,\n  mouseclickEvent,\n  getInstance,\n  querySelector,\n  // closest,\n  // ObjectAssign,\n  hasClass,\n  removeClass,\n  dispatchEvent,\n  createCustomEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport alertString from '../strings/alertString';\nimport alertComponent from '../strings/alertComponent';\nimport type { AlertEvent } from '../interface/alert';\n\nimport BaseComponent from './base-component';\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n *\n */\nconst getAlertInstance = (element: HTMLElement) => getInstance<Alert>(element, alertComponent);\n\n/**\n * An `Alert` initialization callback.\n */\nconst alertInitCallback = <T>(element: HTMLElement) => new Alert(element) as T;\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = createCustomEvent<AlertEvent>(`close.bs.${alertString}`);\nconst closedAlertEvent = createCustomEvent<AlertEvent>(`closed.bs.${alertString}`);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n *\n * @param that target Alert instance\n */\nconst alertTransitionEnd = (that: Alert) => {\n  const { element } = that;\n  toggleAlertHandler(that);\n\n  dispatchEvent(element, closedAlertEvent);\n\n  that.dispose();\n  element.remove();\n};\n\n// ALERT PRIVATE METHOD\n// ====================\n/**\n * Toggle on / off the `click` event listener.\n *\n * @param that the target alert instance\n * @param add when `true`, event listener is added\n */\nconst toggleAlertHandler = (that: Alert, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { dismiss, close } = that;\n  /* istanbul ignore else */\n  if (dismiss) action(dismiss, mouseclickEvent, close);\n};\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nexport default class Alert extends BaseComponent {\n  static selector = alertSelector;\n  static init = alertInitCallback;\n  static getInstance = getAlertInstance;\n  dismiss: HTMLElement | null;\n\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // the dismiss button\n    this.dismiss = querySelector(alertDismissSelector, this.element);\n\n    // add event listener\n    toggleAlertHandler(this, true);\n  }\n\n  /** Returns component name string. */\n  get name() {\n    return alertComponent;\n  }\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   */\n  close = () => {\n    const { element } = this;\n\n    /* istanbul ignore else */\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n      if (closeAlertEvent.defaultPrevented) return;\n\n      removeClass(element, showClass);\n\n      if (hasClass(element, fadeClass)) {\n        emulateTransitionEnd(element, () => alertTransitionEnd(this));\n      } else alertTransitionEnd(this);\n    }\n  };\n\n  /** Remove the component from target element. */\n  dispose() {\n    toggleAlertHandler(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components active class.\n */\nconst activeClass = 'active';\nexport default activeClass;\n","/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = 'data-bs-toggle';\nexport default dataBsToggle;\n","/** @type {string} */\nconst buttonString = 'button';\nexport default buttonString;\n","/** @type {string} */\nconst buttonComponent = 'Button';\nexport default buttonComponent;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  getInstance,\n  removeClass,\n  hasClass,\n  addClass,\n  setAttribute,\n  mouseclickEvent,\n  ariaPressed,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport buttonString from '../strings/buttonString';\nimport buttonComponent from '../strings/buttonComponent';\n\nimport BaseComponent from './base-component';\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: HTMLElement) => getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: HTMLElement) => new Button(element);\n\n// BUTTON PRIVATE METHOD\n// =====================\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Button` instance\n * @param add when `true`, event listener is added\n */\nconst toggleButtonHandler = (self: Button, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, self.toggle);\n};\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  isActive = false;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    toggleButtonHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle = (e: Event) => {\n    if (e) e.preventDefault();\n\n    const { element, isActive } = this;\n    if (hasClass(element, 'disabled')) return;\n\n    const action = isActive ? removeClass : addClass;\n    action(element, activeClass);\n    setAttribute(element, ariaPressed, isActive ? 'false' : 'true');\n    this.isActive = hasClass(element, activeClass);\n  };\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    toggleButtonHandler(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = 'data-bs-target';\nexport default dataBsTarget;\n","/** @type {string} */\nconst carouselString = 'carousel';\nexport default carouselString;\n","/** @type {string} */\nconst carouselComponent = 'Carousel';\nexport default carouselComponent;\n","/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = 'data-bs-parent';\nexport default dataBsParent;\n","/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = 'data-bs-container';\nexport default dataBsContainer;\n","import { getDocument, getAttribute, closest, querySelector } from '@thednp/shorty';\n\nimport dataBsTarget from '../strings/dataBsTarget';\nimport dataBsParent from '../strings/dataBsParent';\nimport dataBsContainer from '../strings/dataBsContainer';\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst getTargetElement = (element: HTMLElement) => {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, 'href'];\n  const doc = getDocument(element);\n\n  return targetAttr\n    .map(att => {\n      const attValue = getAttribute(element, att);\n      if (attValue) {\n        return att === dataBsParent ? closest(element, attValue) : querySelector(attValue, doc);\n      }\n      return null;\n    })\n    .filter(x => x)[0];\n};\n\nexport default getTargetElement;\n","/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\nimport {\n  createCustomEvent,\n  getInstance,\n  dispatchEvent,\n  ObjectAssign,\n  emulateTransitionEnd,\n  passiveHandler,\n  reflow,\n  Timer,\n  getAttribute,\n  getElementsByClassName,\n  querySelectorAll,\n  querySelector,\n  closest,\n  isHTMLElement,\n  isRTL,\n  isElementInScrollRange,\n  getElementTransitionDuration,\n  getDocument,\n  pointerupEvent,\n  pointermoveEvent,\n  pointerdownEvent,\n  keyArrowRight,\n  keyArrowLeft,\n  keydownEvent,\n  mouseclickEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  touchstartEvent,\n  dragstartEvent,\n  addClass,\n  hasClass,\n  removeClass,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsTarget from '../strings/dataBsTarget';\nimport carouselString from '../strings/carouselString';\nimport carouselComponent from '../strings/carouselComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CarouselEvent, CarouselOptions } from '../interface/carousel';\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = 'data-bs-slide-to';\nconst dataBsSlide = 'data-bs-slide';\nconst pausedClass = 'paused';\n\nconst carouselDefaults: CarouselOptions = {\n  pause: 'hover',\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n */\nconst getCarouselInstance = (element: HTMLElement) => getInstance<Carousel>(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n */\nconst carouselInitCallback = (element: HTMLElement) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = createCustomEvent<CarouselEvent>(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = createCustomEvent<CarouselEvent>(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n *\n * @param self the `Carousel` instance\n */\nconst carouselTransitionEndHandler = (self: Carousel) => {\n  const { index, direction, element, slides, options } = self;\n\n  // discontinue disposed instances\n  /* istanbul ignore else */\n  if (self.isAnimating && getCarouselInstance(element)) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // check for element, might have been disposed\n    if (!getDocument(element).hidden && options.interval && !self.isPaused) {\n      self.cycle();\n    }\n  }\n};\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselPauseHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && !self.isPaused && !Timer.get(this, pausedClass)) {\n    addClass(this, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n *\n */\nfunction carouselResumeHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && self.isPaused && !Timer.get(this, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @param e the `Event` object\n */\nfunction carouselIndicatorHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  // const indicator = this;\n  const element = (closest(this, carouselSelector) || getTargetElement(this)) as HTMLElement;\n  const self = getCarouselInstance(element);\n\n  if (!self || self.isAnimating) return;\n\n  const newIndex = +(getAttribute(this, dataBsSlideTo) || /* istanbul ignore next */ 0);\n\n  if (\n    this &&\n    !hasClass(this, activeClass) && // event target is not active\n    !Number.isNaN(newIndex)\n  ) {\n    // AND has the specific attribute\n    self.to(newIndex); // do the slide\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @param e the `Event` object\n */\nfunction carouselControlsHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  // const control = this;\n  const element = closest(this, carouselSelector) || (getTargetElement(this) as HTMLElement);\n  const self = getCarouselInstance(element);\n\n  if (!self || self.isAnimating) return;\n  const orientation = getAttribute(this, dataBsSlide);\n\n  /* istanbul ignore else */\n  if (orientation === 'next') {\n    self.next();\n  } else if (orientation === 'prev') {\n    self.prev();\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param e the `Event` object\n */\nconst carouselKeyHandler = ({ code, target }: KeyboardEvent & { target: Node }) => {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll(carouselSelector, doc)].filter(x => isElementInScrollRange(x));\n  const self = getCarouselInstance(element);\n\n  /* istanbul ignore next */\n  if (!self || self.isAnimating || /textarea|input/i.test(target.nodeName)) return;\n  const RTL = isRTL(element);\n  const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n  const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n  /* istanbul ignore else */\n  if (code === arrowKeyPrev) self.prev();\n  else if (code === arrowKeyNext) self.next();\n};\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Prevents the `touchstart` and `dragstart` events for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselDragHandler(this: HTMLElement, e: DragEvent | TouchEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  /* istanbul ignore next */\n  if (\n    self &&\n    self.isTouch &&\n    ((self.indicator && !self.indicator.contains(target as Node)) || !self.controls.includes(target as HTMLElement))\n  ) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    e.preventDefault();\n  }\n}\n\n// CAROUSEL POINTER HANDLERS\n// =========================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselPointerDownHandler(this: HTMLElement, e: PointerEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  if (!self || self.isAnimating || self.isTouch) {\n    return;\n  }\n\n  // filter pointer event on controls & indicators\n  const { controls, indicators } = self;\n  if ([...controls, ...indicators].some(el => el === target || el.contains(target as Node))) {\n    return;\n  }\n\n  startX = e.pageX;\n\n  /* istanbul ignore else */\n  if (this.contains(target as Node)) {\n    self.isTouch = true;\n    toggleCarouselTouchHandlers(self, true);\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerMoveHandler = (e: PointerEvent) => {\n  currentX = e.pageX;\n};\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerUpHandler = (e: PointerEvent) => {\n  const { target } = e;\n  const doc = getDocument(target as Node);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map(c => getCarouselInstance(c) as Carousel)\n    .find(i => i.isTouch) as Carousel;\n\n  // impossible to satisfy\n  /* istanbul ignore next */\n  if (!self) {\n    return;\n  }\n\n  const { element, index } = self;\n  const RTL = isRTL(element);\n\n  self.isTouch = false;\n  toggleCarouselTouchHandlers(self);\n\n  if (doc.getSelection()?.toString().length) {\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n    return;\n  }\n\n  endX = e.pageX;\n\n  // the event target is outside the carousel context\n  // OR swipe distance is less than 120px\n  /* istanbul ignore else */\n  if (!element.contains(target as HTMLElement) || Math.abs(startX - endX) < 120) {\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n    return;\n  }\n  // OR determine next index to slide to\n  /* istanbul ignore else */\n  if (currentX < startX) {\n    self.to(index + (RTL ? -1 : 1));\n  } else if (currentX > startX) {\n    self.to(index + (RTL ? 1 : -1));\n  }\n  // reset pointer position\n  startX = 0;\n  currentX = 0;\n  endX = 0;\n};\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param pageIndex the index of the new active indicator\n */\nconst activateCarouselIndicator = (self: Carousel, pageIndex: number) => {\n  const { indicators } = self;\n  [...indicators].forEach(x => removeClass(x, activeClass));\n\n  /* istanbul ignore else */\n  if (self.indicators[pageIndex]) addClass(indicators[pageIndex], activeClass);\n};\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselTouchHandlers = (self: Carousel, add?: boolean) => {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(getDocument(element), pointermoveEvent, carouselPointerMoveHandler as EventListener, passiveHandler);\n  action(getDocument(element), pointerupEvent, carouselPointerUpHandler as EventListener, passiveHandler);\n};\n\n/**\n * Toggles all event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselHandlers = (self: Carousel, add?: boolean) => {\n  const { element, options, slides, controls, indicators } = self;\n  const { touch, pause, interval, keyboard } = options;\n  const action = add ? addListener : removeListener;\n\n  if (pause && interval) {\n    action(element, mouseenterEvent, carouselPauseHandler);\n    action(element, mouseleaveEvent, carouselResumeHandler);\n  }\n\n  if (touch && slides.length > 2) {\n    action(element, pointerdownEvent, carouselPointerDownHandler as EventListener, passiveHandler);\n    action(element, touchstartEvent, carouselDragHandler as unknown as EventListener, { passive: false });\n    action(element, dragstartEvent, carouselDragHandler as unknown as EventListener, { passive: false });\n  }\n\n  /* istanbul ignore else */\n  if (controls.length) {\n    controls.forEach(arrow => {\n      /* istanbul ignore else */\n      if (arrow) action(arrow, mouseclickEvent, carouselControlsHandler as EventListener);\n    });\n  }\n\n  /* istanbul ignore else */\n  if (indicators.length) {\n    indicators.forEach(indicator => {\n      action(indicator, mouseclickEvent, carouselIndicatorHandler as EventListener);\n    });\n  }\n\n  if (keyboard) action(getDocument(element), keydownEvent, carouselKeyHandler as EventListener);\n};\n\n/**\n * Returns the index of the current active item.\n *\n * @param self the `Carousel` instance\n * @returns the query result\n */\nconst getActiveIndex = (self: Carousel) => {\n  const { slides, element } = self;\n  const activeItem = querySelector(`.${carouselItem}.${activeClass}`, element);\n  return isHTMLElement(activeItem) ? [...slides].indexOf(activeItem) : -1;\n};\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nexport default class Carousel extends BaseComponent {\n  static selector = carouselSelector;\n  static init = carouselInitCallback;\n  static getInstance = getCarouselInstance;\n  declare options: CarouselOptions;\n  declare direction: 'right' | 'left';\n  declare index: number;\n  declare isTouch: boolean;\n  declare slides: HTMLCollectionOf<HTMLElement>;\n  declare controls: HTMLElement[];\n  declare indicator: HTMLElement | null;\n  declare indicators: HTMLElement[];\n\n  /**\n   * @param target mostly a `.carousel` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CarouselOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element } = this;\n\n    // additional properties\n    this.direction = isRTL(element) ? 'right' : 'left';\n    this.index = 0;\n    this.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    this.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = this;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length < 2) {\n      return;\n    }\n    // external controls must be within same document context\n    const doc = getDocument(element);\n\n    this.controls = [\n      ...querySelectorAll(`[${dataBsSlide}]`, element),\n      ...querySelectorAll(`[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n    ];\n\n    this.indicator = querySelector(`.${carouselString}-indicators`, element);\n\n    // a LIVE collection is prefferable\n    this.indicators = [\n      ...(this.indicator ? querySelectorAll(`[${dataBsSlideTo}]`, this.indicator) : []),\n      ...querySelectorAll(`[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n    ];\n\n    // set JavaScript and DATA API options\n    const { options } = this;\n\n    // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n    this.options.interval = options.interval === true ? carouselDefaults.interval : options.interval;\n\n    // set first slide active if none\n    /* istanbul ignore else */\n    if (getActiveIndex(this) < 0) {\n      addClass(slides[0], activeClass);\n      /* istanbul ignore else */\n      if (this.indicators.length) activateCarouselIndicator(this, 0);\n    }\n\n    // attach event handlers\n    toggleCarouselHandlers(this, true);\n\n    // start to cycle if interval is set\n    if (options.interval) this.cycle();\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return carouselComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return carouselDefaults;\n  }\n\n  /**\n   * Check if instance is paused.\n   */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   */\n  get isAnimating() {\n    return querySelector(`.${carouselItem}-next,.${carouselItem}-prev`, this.element) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const { element, options, isPaused, index } = this;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(\n      element,\n      () => {\n        // it's very important to check self.element\n        // where instance might have been disposed\n        /* istanbul ignore else */\n        if (this.element && !this.isPaused && !this.isTouch && isElementInScrollRange(element)) {\n          this.to(index + 1);\n        }\n      },\n      options.interval as number,\n      carouselString,\n    );\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const { element, options } = this;\n    /* istanbul ignore else */\n    if (!this.isPaused && options.interval) {\n      addClass(element, pausedClass);\n      Timer.set(\n        element,\n        () => {\n          /* ESLint is now happy */\n        },\n        1,\n        pausedClass,\n      );\n    }\n  }\n\n  /** Slide to the next item. */\n  next() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index + 1);\n    }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index - 1);\n    }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   *\n   * @param idx the index of the item to jump to\n   */\n  to(idx: number) {\n    const { element, slides, options } = this;\n    const activeItem = getActiveIndex(this);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (this.isAnimating || activeItem === next || Timer.get(element, dataBsSlide)) return;\n\n    // determine transition direction\n    /* istanbul ignore else */\n    if (activeItem < next || (activeItem === 0 && next === slides.length - 1)) {\n      this.direction = RTL ? 'right' : 'left'; // next\n    } else if (activeItem > next || (activeItem === slides.length - 1 && next === 0)) {\n      this.direction = RTL ? 'left' : 'right'; // prev\n    }\n    const { direction } = this;\n\n    // find the right next index\n    if (next < 0) {\n      next = slides.length - 1;\n    } else if (next >= slides.length) {\n      next = 0;\n    }\n\n    // orientation, class name, eventProperties\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    const eventProperties = {\n      relatedTarget: slides[next],\n      from: activeItem,\n      to: next,\n      direction,\n    };\n\n    // update event properties\n    ObjectAssign(carouselSlideEvent, eventProperties);\n    ObjectAssign(carouselSlidEvent, eventProperties);\n\n    // discontinue when prevented\n    dispatchEvent(element, carouselSlideEvent);\n    if (carouselSlideEvent.defaultPrevented) return;\n\n    // update index\n    this.index = next;\n    activateCarouselIndicator(this, next);\n\n    if (getElementTransitionDuration(slides[next]) && hasClass(element, 'slide')) {\n      Timer.set(\n        element,\n        () => {\n          addClass(slides[next], `${carouselItem}-${orientation}`);\n          reflow(slides[next]);\n          addClass(slides[next], `${carouselItem}-${directionClass}`);\n          addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n          emulateTransitionEnd(slides[next], () => carouselTransitionEndHandler(this));\n        },\n        0,\n        dataBsSlide,\n      );\n    } else {\n      addClass(slides[next], activeClass);\n      removeClass(slides[activeItem], activeClass);\n\n      Timer.set(\n        element,\n        () => {\n          Timer.clear(element, dataBsSlide);\n          // check for element, might have been disposed\n          /* istanbul ignore else */\n          if (element && options.interval && !this.isPaused) {\n            this.cycle();\n          }\n\n          dispatchEvent(element, carouselSlidEvent);\n        },\n        0,\n        dataBsSlide,\n      );\n    }\n  }\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const { slides } = this;\n    const itemClasses = ['start', 'end', 'prev', 'next'];\n\n    [...slides].forEach((slide, idx) => {\n      if (hasClass(slide, activeClass)) activateCarouselIndicator(this, idx);\n      itemClasses.forEach(c => removeClass(slide, `${carouselItem}-${c}`));\n    });\n\n    toggleCarouselHandlers(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = 'collapsing';\nexport default collapsingClass;\n","/** @type {string} */\nconst collapseString = 'collapse';\nexport default collapseString;\n","/** @type {string} */\nconst collapseComponent = 'Collapse';\nexport default collapseComponent;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  getInstance,\n  setAttribute,\n  getDocument,\n  closest,\n  querySelector,\n  querySelectorAll,\n  addClass,\n  hasClass,\n  removeClass,\n  mouseclickEvent,\n  ariaExpanded,\n  emulateTransitionEnd,\n  reflow,\n  dispatchEvent,\n  setElementStyle,\n  Timer,\n  createCustomEvent,\n  noop,\n  isHTMLElement,\n  isString,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport collapsingClass from '../strings/collapsingClass';\nimport showClass from '../strings/showClass';\nimport collapseString from '../strings/collapseString';\nimport collapseComponent from '../strings/collapseComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CollapseEvent, CollapseOptions } from '../interface/collapse';\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: HTMLElement) => getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: HTMLElement) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<CollapseEvent>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<CollapseEvent>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<CollapseEvent>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<CollapseEvent>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (showCollapseEvent.defaultPrevented) return;\n\n  Timer.set(element, noop, 17);\n  if (parent) Timer.set(parent, noop, 17);\n\n  addClass(element, collapsingClass);\n  removeClass(element, collapseString);\n\n  setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n  emulateTransitionEnd(element, () => {\n    Timer.clear(element);\n    if (parent) Timer.clear(parent);\n\n    triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'true'));\n\n    removeClass(element, collapsingClass);\n    addClass(element, collapseString);\n    addClass(element, showClass);\n\n    setElementStyle(element, { height: '' });\n\n    dispatchEvent(element, shownCollapseEvent);\n  });\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (hideCollapseEvent.defaultPrevented) return;\n\n  Timer.set(element, noop, 17);\n  if (parent) Timer.set(parent, noop, 17);\n\n  setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n  removeClass(element, collapseString);\n  removeClass(element, showClass);\n  addClass(element, collapsingClass);\n\n  reflow(element);\n  setElementStyle(element, { height: '0px' });\n\n  emulateTransitionEnd(element, () => {\n    Timer.clear(element);\n    /* istanbul ignore else */\n    if (parent) Timer.clear(parent);\n\n    triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'false'));\n\n    removeClass(element, collapsingClass);\n    addClass(element, collapseString);\n\n    setElementStyle(element, { height: '' });\n\n    dispatchEvent(element, hiddenCollapseEvent);\n  });\n};\n\n/**\n * Toggles on/off the event listener(s) of the `Collapse` instance.\n *\n * @param self the `Collapse` instance\n * @param add when `true`, the event listener is added\n */\nconst toggleCollapseHandler = (self: Collapse, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, collapseClickHandler as EventListener));\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target && closest(target as HTMLElement, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  /* istanbul ignore else */\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare options: CollapseOptions;\n  declare parent: HTMLElement | null;\n  declare triggers: HTMLElement[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(btn => getTargetElement(btn) === element);\n\n    // set parent accordion\n    this.parent = isHTMLElement(options.parent)\n      ? options.parent\n      : isString(options.parent)\n      ? getTargetElement(element) || querySelector(options.parent as string, doc)\n      : null;\n\n    // add event listeners\n    toggleCollapseHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    if (Timer.get(element)) return;\n\n    collapseContent(this);\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach(btn => addClass(btn, `${collapseString}d`));\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [...querySelectorAll(`.${collapseString}.${showClass}`, parent)].find(i =>\n        getCollapseInstance(i),\n      );\n      activeCollapseInstance = activeCollapse && getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach(btn => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    toggleCollapseHandler(this);\n\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = ['dropdown', 'dropup', 'dropstart', 'dropend'];\nexport default dropdownMenuClasses;\n","/** @type {string} */\nconst dropdownComponent = 'Dropdown';\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = 'dropdown-menu';\nexport default dropdownMenuClass;\n","import { hasAttribute, closest } from '@thednp/shorty';\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, 'A');\n  return (\n    (element.tagName === 'A' &&\n      // anchor href starts with #\n      hasAttribute(element, 'href') &&\n      (element as HTMLAnchorElement).href.slice(-1) === '#') ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor && hasAttribute(parentAnchor, 'href') && (parentAnchor as HTMLAnchorElement).href.slice(-1) === '#')\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  ariaExpanded,\n  focusEvent,\n  keydownEvent,\n  setAttribute,\n  keyEscape,\n  keyArrowDown,\n  keyArrowUp,\n  mouseclickEvent,\n  resizeEvent,\n  scrollEvent,\n  keyupEvent,\n  dispatchEvent,\n  setElementStyle,\n  getInstance,\n  ObjectAssign,\n  passiveHandler,\n  getElementsByClassName,\n  querySelector,\n  closest,\n  getAttribute,\n  getDocument,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  createCustomEvent,\n  focus,\n  getWindow,\n  CSS4Declaration,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport showClass from '../strings/showClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dropdownComponent from '../strings/dropdownComponent';\nimport dropdownMenuClass from '../strings/dropdownMenuClass';\n\nimport isEmptyAnchor from '../util/isEmptyAnchor';\nimport BaseComponent from './base-component';\nimport type { DropdownEvent, DropdownOptions } from '../interface/dropdown';\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] = dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"],[${dataBsToggle}=\"${dropupString}\"],[${dataBsToggle}=\"${dropendString}\"],[${dataBsToggle}=\"${dropstartString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) => getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = ['A', 'BUTTON'];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: 'dynamic', // [dynamic|static]\n};\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEvent>(`show.bs.${dropdownString}`);\nconst shownDropdownEvent = createCustomEvent<DropdownEvent>(`shown.bs.${dropdownString}`);\nconst hideDropdownEvent = createCustomEvent<DropdownEvent>(`hide.bs.${dropdownString}`);\nconst hiddenDropdownEvent = createCustomEvent<DropdownEvent>(`hidden.bs.${dropdownString}`);\nconst updatedDropdownEvent = createCustomEvent<DropdownEvent>(`updated.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  /* istanbul ignore next: this test requires a navbar */\n  if (getElementStyle(menu, 'position') === 'static') return;\n\n  const RTL = isRTL(element);\n  // const menuStart = hasClass(menu, dropdownMenuStartClass);\n  const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n  // reset menu offset and position\n  const resetProps = ['margin', 'top', 'bottom', 'left', 'right'];\n  resetProps.forEach(p => {\n    // menu.style[p] = '';\n    const style: { [key: string]: string } = {};\n    style[p] = '';\n    setElementStyle(menu, style);\n  });\n\n  // set initial position class\n  // take into account .btn-group parent as .dropdown\n  // this requires navbar/btn-group/input-group\n  let positionClass =\n    dropdownClasses.find(c => hasClass(parentElement, c)) ||\n    /* istanbul ignore next: fallback position */ dropdownString;\n\n  const dropdownMargin: { [key: string]: number[] } = {\n    dropdown: [offset, 0, 0],\n    dropup: [0, 0, offset],\n    dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n    dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n  };\n\n  const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n    dropdown: { top: '100%' },\n    dropup: { top: 'auto', bottom: '100%' },\n    dropstart: RTL ? { left: '100%', right: 'auto' } : { left: 'auto', right: '100%' },\n    dropend: RTL ? { left: 'auto', right: '100%' } : { left: '100%', right: 'auto' },\n    menuStart: RTL ? { right: '0', left: 'auto' } : { right: 'auto', left: '0' },\n    menuEnd: RTL ? { right: 'auto', left: '0' } : { right: '0', left: 'auto' },\n  };\n\n  const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n  const { clientWidth, clientHeight } = getDocumentElement(element);\n  const { left: targetLeft, top: targetTop, width: targetWidth, height: targetHeight } = getBoundingClientRect(element);\n\n  // dropstart | dropend\n  const leftFullExceed = targetLeft - menuWidth - offset < 0;\n  // dropend\n  const rightFullExceed = targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n  // dropstart | dropend\n  const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n  // dropdown\n  const bottomFullExceed = targetTop + menuHeight + targetHeight + offset >= clientHeight;\n  // dropup\n  const topExceed = targetTop - menuHeight - offset < 0;\n  // dropdown / dropup\n  const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) && targetLeft + targetWidth - menuWidth < 0;\n  const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) && targetLeft + menuWidth >= clientWidth;\n\n  // recompute position\n  // handle RTL as well\n  if (horizontalClass.includes(positionClass) && leftFullExceed && rightFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropstartString && (!RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropendString;\n  }\n  if (positionClass === dropendString && (RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropstartString;\n  }\n  if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n    positionClass = dropupString;\n  }\n\n  // override position for horizontal classes\n  if (horizontalClass.includes(positionClass) && bottomExceed) {\n    ObjectAssign(dropdownPosition[positionClass], {\n      top: 'auto',\n      bottom: 0,\n    });\n  }\n\n  // override position for vertical classes\n  if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n    // don't realign when menu is wider than window\n    // in both RTL and non-RTL readability is KING\n    let posAjust: { left: 'auto' | number; right: 'auto' | number } | undefined = { left: 'auto', right: 'auto' };\n    if (!leftExceed && rightExceed && !RTL) posAjust = { left: 'auto', right: 0 };\n    if (leftExceed && !rightExceed && RTL) posAjust = { left: 0, right: 'auto' };\n    if (posAjust) ObjectAssign(dropdownPosition[positionClass], posAjust);\n  }\n\n  const margins: number[] = dropdownMargin[positionClass];\n  setElementStyle(menu, {\n    ...dropdownPosition[positionClass],\n    margin: `${margins.map(x => (x ? `${x}px` : x)).join(' ')}`,\n  });\n\n  // override dropdown-menu-start | dropdown-menu-end\n  if (verticalClass.includes(positionClass) && menuEnd) {\n    /* istanbul ignore else */\n    if (menuEnd) {\n      const endAdjust =\n        (!RTL && leftExceed) || (RTL && rightExceed) ? 'menuStart' : /* istanbul ignore next */ 'menuEnd';\n      setElementStyle(menu, dropdownPosition[endAdjust]);\n    }\n  }\n  // trigger updated event\n  dispatchEvent(parentElement, updatedDropdownEvent);\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map(c => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (firstElementChild && menuFocusTags.includes(firstElementChild.tagName)) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter(c => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler as EventListener);\n  action(doc, focusEvent, dropdownDismissHandler as EventListener);\n  action(doc, keydownEvent, dropdownPreventScroll as EventListener);\n  action(doc, keyupEvent, dropdownKeyHandler as EventListener);\n\n  /* istanbul ignore else */\n  if (options.display === 'dynamic') {\n    [scrollEvent, resizeEvent].forEach(ev => {\n      action(getWindow(element), ev, dropdownLayoutHandler, passiveHandler);\n    });\n  }\n};\n\n/**\n * Toggles on/off the `click` event listener of the `Dropdown`.\n *\n * @param self the `Dropdown` instance\n * @param add when `true`, it will add the event listener\n */\nconst toggleDropdownHandler = (self: Dropdown, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, dropdownClickHandler as EventListener);\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (element: HTMLElement): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, 'btn-group', 'input-group']\n    .map(c => getElementsByClassName(`${c} ${showClass}`, getDocument(element)))\n    .find(x => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)].find(x =>\n      dropdownClasses.some(c => c === getAttribute(x, dataBsToggle)),\n    );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  /* istanbul ignore next: impossible to satisfy */\n  if (!target || !(target as HTMLElement).closest) return; // some weird FF bug #409\n\n  const element = getCurrentOpenDropdown(target as HTMLElement);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore next */\n  if (!self) return;\n\n  const { parentElement, menu } = self;\n\n  const hasData = closest(target as HTMLElement, dropdownSelector) !== null;\n  const isForm =\n    parentElement &&\n    parentElement.contains(target as HTMLElement) &&\n    ((target as HTMLElement).tagName === 'form' || closest(target as HTMLElement, 'form') !== null);\n\n  if (type === mouseclickEvent && isEmptyAnchor(target as HTMLElement)) {\n    e.preventDefault();\n  }\n  if (type === focusEvent && (target === element || target === menu || menu.contains(target as HTMLElement))) {\n    return;\n  }\n\n  /* istanbul ignore next */\n  if (isForm || hasData) {\n    // smile to ESLint\n  } else if (self) {\n    self.hide();\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.stopImmediatePropagation();\n    self.toggle();\n    /* istanbul ignore else */\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  /* istanbul ignore else */\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n  /* istanbul ignore next: impossible to satisfy */\n  if (!self || !activeElement) return;\n  const { menu, open } = self;\n  const menuItems = getMenuItems(menu);\n\n  // arrow up & down\n  if (menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)) {\n    let idx = menuItems.indexOf(activeElement);\n    /* istanbul ignore else */\n    if (activeElement === element) {\n      idx = 0;\n    } else if (code === keyArrowUp) {\n      idx = idx > 1 ? idx - 1 : 0;\n    } else if (code === keyArrowDown) {\n      idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n    }\n    /* istanbul ignore else */\n    if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n  }\n\n  if (keyEscape === code && open) {\n    self.toggle();\n    focus(element);\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownLayoutHandler(this: HTMLElement) {\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n    const menu = querySelector(`.${dropdownMenuClass}`, parentElement as ParentNode);\n\n    // invalidate when dropdown-menu is missing\n    if (!menu) return;\n\n    // set targets\n    this.parentElement = parentElement as HTMLElement;\n    this.menu = menu;\n\n    // add event listener\n    toggleDropdownHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore next */\n    if (open) return;\n\n    const currentElement = getCurrentOpenDropdown(element);\n    const currentInstance = currentElement && getDropdownInstance(currentElement);\n    if (currentInstance) currentInstance.hide();\n\n    // dispatch event\n    [showDropdownEvent, shownDropdownEvent, updatedDropdownEvent].forEach(e => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, showDropdownEvent);\n    if (showDropdownEvent.defaultPrevented) return;\n\n    addClass(menu, showClass);\n    addClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'true');\n\n    // change menu position\n    styleDropdown(this);\n\n    this.open = !open;\n\n    focus(element); // focus the element\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, shownDropdownEvent);\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore next */\n    if (!open) return;\n\n    [hideDropdownEvent, hiddenDropdownEvent].forEach(e => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, hideDropdownEvent);\n    if (hideDropdownEvent.defaultPrevented) return;\n\n    removeClass(menu, showClass);\n    removeClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'false');\n\n    this.open = !open;\n    // only re-attach handler if the instance is not disposed\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, hiddenDropdownEvent);\n  }\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    toggleDropdownHandler(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst modalString = 'modal';\nexport default modalString;\n","/** @type {string} */\nconst modalComponent = 'Modal';\nexport default modalComponent;\n","/** @type {string} */\nconst offcanvasComponent = 'Offcanvas';\nexport default offcanvasComponent;\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = 'fixed-top';\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = 'fixed-bottom';\nexport default fixedBottomClass;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = 'sticky-top';\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = 'position-sticky';\nexport default positionStickyClass;\n","import {\n  getWindow,\n  getDocumentElement,\n  getElementStyle,\n  getDocumentBody,\n  hasClass,\n  setElementStyle,\n  getElementsByClassName,\n} from '@thednp/shorty';\n\nimport fixedTopClass from '../strings/fixedTopClass';\nimport fixedBottomClass from '../strings/fixedBottomClass';\nimport stickyTopClass from '../strings/stickyTopClass';\nimport positionStickyClass from '../strings/positionStickyClass';\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName(fixedTopClass, parent),\n  ...getElementsByClassName(fixedBottomClass, parent),\n  ...getElementsByClassName(stickyTopClass, parent),\n  ...getElementsByClassName(positionStickyClass, parent),\n  ...getElementsByClassName('is-fixed', parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: HTMLElement) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: '',\n    overflow: '',\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  if (fixedItems.length) {\n    fixedItems.forEach(fixed => {\n      setElementStyle(fixed, {\n        paddingRight: '',\n        marginRight: '',\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: HTMLElement) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: HTMLElement, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, 'paddingRight'), 10);\n  const isOpen = getElementStyle(bd, 'overflow') === 'hidden';\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  /* istanbul ignore else */\n  if (overflow) {\n    setElementStyle(bd, {\n      overflow: 'hidden',\n      paddingRight: `${bodyPad + sbWidth}px`,\n    });\n\n    /* istanbul ignore else */\n    if (fixedItems.length) {\n      fixedItems.forEach(fixed => {\n        const itemPadValue = getElementStyle(fixed, 'paddingRight');\n        fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n        /* istanbul ignore else */\n        if ([stickyTopClass, positionStickyClass].some(c => hasClass(fixed, c))) {\n          const itemMValue = getElementStyle(fixed, 'marginRight');\n          fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n        }\n      });\n    }\n  }\n};\n","/** @type {string} */\nconst offcanvasString = 'offcanvas';\nexport default offcanvasString;\n","import { getDocumentBody, isNode, createElement } from '@thednp/shorty';\n\n// the default container for Modal, Offcanvas, Popover and Tooltip\nconst popupContainer = createElement({ tagName: 'div', className: 'popup-container' }) as HTMLElement;\n\nconst appendPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n  const BODY = containerIsBody ? customContainer : getDocumentBody(target);\n\n  if (isNode(target)) {\n    if (lookup === popupContainer) {\n      BODY.append(popupContainer);\n    }\n    lookup.append(target);\n  }\n};\n\nconst removePopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n\n  if (isNode(target)) {\n    target.remove();\n\n    if (lookup === popupContainer && !popupContainer.children.length) {\n      popupContainer.remove();\n    }\n  }\n};\n\nconst hasPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const lookup = isNode(customContainer) && customContainer.nodeName !== 'BODY' ? customContainer : popupContainer;\n  return isNode(target) && lookup.contains(target);\n};\n\nexport { popupContainer, appendPopup, removePopup, hasPopup };\n","import {\n  createElement,\n  getDocument,\n  reflow,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getDocumentBody,\n} from '@thednp/shorty';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\nimport { resetScrollbar } from './scrollbar';\nimport { appendPopup, removePopup } from './popupContainer';\n\nconst backdropString = 'backdrop';\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement('div') as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: HTMLElement): HTMLElement | null => {\n  return querySelector(`${modalActiveSelector},${offcanvasActiveSelector}`, getDocument(element));\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach(c => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param element\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (element: HTMLElement, hasFade: boolean, isModal?: boolean) => {\n  toggleOverlayType(isModal);\n  appendPopup(overlay, getDocumentBody(element));\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param element\n */\nconst removeOverlay = (element?: HTMLElement): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    removePopup(overlay, getDocumentBody(element));\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  overlay,\n  offcanvasBackdropClass,\n  modalBackdropClass,\n  modalActiveSelector,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n};\n","import { isHTMLElement, getElementStyle } from '@thednp/shorty';\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) && getElementStyle(element, 'visibility') !== 'hidden' && element.offsetParent !== null;\n};\nexport default isVisible;\n","/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\nimport {\n  keyEscape,\n  getElementTransitionDuration,\n  removeAttribute,\n  setAttribute,\n  keydownEvent,\n  mouseclickEvent,\n  resizeEvent,\n  ariaModal,\n  ariaHidden,\n  getInstance,\n  isHTMLElement,\n  isRTL,\n  isFunction,\n  removeClass,\n  hasClass,\n  addClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  getDocumentElement,\n  getDocumentBody,\n  getDocument,\n  getWindow,\n  CSS4Declaration,\n  setElementStyle,\n  createCustomEvent,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  focus,\n  Timer,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport modalComponent from '../strings/modalComponent';\nimport offcanvasComponent from '../strings/offcanvasComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport { setScrollbar, measureScrollbar } from '../util/scrollbar';\nimport {\n  overlay,\n  modalActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport isVisible from '../util/isVisible';\nimport BaseComponent from './base-component';\nimport { ModalOptions, ModalEvent } from '../interface/modal';\nimport { hasPopup } from '../util/popupContainer';\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true,\n  keyboard: true,\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n */\nconst getModalInstance = (element: HTMLElement) => getInstance<Modal>(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n */\nconst modalInitCallback = (element: HTMLElement) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = createCustomEvent<ModalEvent>(`show.bs.${modalString}`);\nconst shownModalEvent = createCustomEvent<ModalEvent>(`shown.bs.${modalString}`);\nconst hideModalEvent = createCustomEvent<ModalEvent>(`hide.bs.${modalString}`);\nconst hiddenModalEvent = createCustomEvent<ModalEvent>(`hidden.bs.${modalString}`);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst setModalScrollbar = (self: Modal) => {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } = element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  /* istanbul ignore else */\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element) ? 'paddingRight' : /* istanbul ignore next */ 'paddingLeft';\n    const padStyle = {} as Partial<CSS4Declaration>;\n    padStyle[pad] = `${scrollbarWidth}px`;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, modalOverflow || clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleModalDismiss = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, update } = self;\n  action(element, mouseclickEvent, modalDismissHandler as EventListener);\n  action(getWindow(element), resizeEvent, update, passiveHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler as EventListener);\n};\n\n/**\n * Toggles on/off the `click` event listener of the `Modal` instance.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listener is added\n */\nconst toggleModalHandler = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, modalClickHandler as EventListener));\n  }\n};\n\n/**\n * Executes after a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n * @param callback the `Modal` instance\n */\nconst afterModalHide = (self: Modal, callback?: () => void) => {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: '', display: '' });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (focusElement) focus(focusElement as HTMLElement);\n\n  /* istanbul ignore else */\n  if (isFunction(callback)) callback();\n\n  hiddenModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, hiddenModalEvent);\n};\n\n/**\n * Executes after a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalShow = (self: Modal) => {\n  const { element, relatedTarget } = self;\n  focus(element);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, shownModalEvent);\n};\n\n/**\n * Executes before a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalShow = (self: Modal) => {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: 'block' });\n\n  setModalScrollbar(self);\n  /* istanbul ignore else */\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n};\n\n/**\n * Executes before a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n * @param callback when `true` skip animation\n */\nconst beforeModalHide = (self: Modal, callback?: () => void) => {\n  const { element, options, hasFade } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (options.backdrop && !callback && hasFade && hasClass(overlay, showClass) && !getCurrentOpen(element)) {\n    // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self, callback);\n  }\n};\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n *\n * @param e the `Event` object\n */\nconst modalClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore next */\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n  self.relatedTarget = trigger;\n  self.toggle();\n};\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst modalKeyHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(modalActiveSelector, getDocument(target as Node));\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore next */\n  if (!self) return;\n\n  const { options } = self;\n  /* istanbul ignore else */\n  if (\n    options.keyboard &&\n    code === keyEscape && // the keyboard option is enabled and the key is 27\n    hasClass(element, showClass)\n  ) {\n    // the modal is not visible\n    self.relatedTarget = null;\n    self.hide();\n  }\n};\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @param e the `Event` object\n */\nfunction modalDismissHandler(this: HTMLElement, e: MouseEvent) {\n  const self = getModalInstance(this);\n\n  // this timer is needed\n  /* istanbul ignore next: must have a filter */\n  if (!self || Timer.get(this)) return;\n\n  const { options, isStatic, modalDialog } = self;\n  const { backdrop } = options;\n  const { target } = e;\n\n  const selectedText = getDocument(this)?.getSelection()?.toString().length;\n  const targetInsideDialog = modalDialog?.contains(target as HTMLElement);\n  const dismiss = target && closest(target as HTMLElement, modalDismissSelector);\n\n  /* istanbul ignore else */\n  if (isStatic && !targetInsideDialog) {\n    Timer.set(\n      this,\n      () => {\n        addClass(this, modalStaticClass);\n        emulateTransitionEnd(modalDialog as HTMLElement, () => staticTransitionEnd(self));\n      },\n      17,\n    );\n  } else if (dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)) {\n    self.relatedTarget = dismiss || null;\n    self.hide();\n    e.preventDefault();\n  }\n}\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param self the `Modal` instance\n */\nconst staticTransitionEnd = (self: Modal) => {\n  const { element, modalDialog } = self;\n  const duration =\n    (isHTMLElement(modalDialog) ? getElementTransitionDuration(modalDialog) : /* istanbul ignore next */ 0) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n};\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nexport default class Modal extends BaseComponent {\n  static selector = modalSelector;\n  static init = modalInitCallback;\n  static getInstance = getModalInstance;\n  declare options: ModalOptions;\n  declare modalDialog: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare isStatic: boolean;\n  declare hasFade: boolean;\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually the `.modal` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ModalOptions>) {\n    super(target, config);\n\n    // the modal\n    const { element } = this;\n\n    // the modal-dialog\n    this.modalDialog = querySelector(`.${modalString}-dialog`, element);\n\n    // modal can have multiple triggering elements\n    this.triggers = [...querySelectorAll(modalToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // additional internals\n    this.isStatic = this.options.backdrop === 'static';\n    this.hasFade = hasClass(element, fadeClass);\n    this.relatedTarget = null;\n\n    // attach event listeners\n    toggleModalHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return modalComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return modalDefaults;\n  }\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const { element, options, hasFade, relatedTarget } = this;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) return;\n\n    showModalEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, showModalEvent);\n    if (showModalEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n\n    if (currentOpen && currentOpen !== element) {\n      const that =\n        getModalInstance(currentOpen) ||\n        /* istanbul ignore next */\n        getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, offcanvasComponent);\n      if (that) that.hide();\n    }\n    if (backdrop) {\n      if (!hasPopup(overlay)) {\n        appendOverlay(element, hasFade, true);\n      } else {\n        toggleOverlayType(true);\n      }\n\n      overlayDelay = getElementTransitionDuration(overlay);\n      showOverlay();\n      setTimeout(() => beforeModalShow(this), overlayDelay);\n    } else {\n      beforeModalShow(this);\n      /* istanbul ignore else */\n      if (currentOpen && hasClass(overlay, showClass)) {\n        hideOverlay();\n      }\n    }\n  }\n\n  /**\n   * Hide the modal from the user.\n   *\n   * @param callback when defined it will skip animation\n   */\n  hide(callback?: () => void) {\n    const { element, hasFade, relatedTarget } = this;\n\n    if (!hasClass(element, showClass)) return;\n\n    hideModalEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, hideModalEvent);\n    if (hideModalEvent.defaultPrevented) return;\n    removeClass(element, showClass);\n    setAttribute(element, ariaHidden, 'true');\n    removeAttribute(element, ariaModal);\n\n    // if (hasFade && callback) {\n    /* istanbul ignore else */\n    if (hasFade) {\n      emulateTransitionEnd(element, () => beforeModalHide(this, callback));\n    } else {\n      beforeModalHide(this, callback);\n    }\n  }\n\n  /**\n   * Updates the modal layout.\n   */\n  update = () => {\n    /* istanbul ignore else */\n    if (hasClass(this.element, showClass)) setModalScrollbar(this);\n  };\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    toggleModalHandler(this);\n    // use callback\n    this.hide(() => super.dispose());\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\nimport {\n  ariaHidden,\n  addClass,\n  hasClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  removeAttribute,\n  isFunction,\n  setAttribute,\n  keyEscape,\n  keydownEvent,\n  mouseclickEvent,\n  ariaModal,\n  emulateTransitionEnd,\n  dispatchEvent,\n  getElementTransitionDuration,\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  removeClass,\n  setElementStyle,\n  createCustomEvent,\n  focus,\n  getInstance,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport showClass from '../strings/showClass';\nimport offcanvasString from '../strings/offcanvasString';\nimport offcanvasComponent from '../strings/offcanvasComponent';\nimport modalComponent from '../strings/modalComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport isVisible from '../util/isVisible';\nimport { setScrollbar } from '../util/scrollbar';\nimport { hasPopup } from '../util/popupContainer';\nimport {\n  overlay,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport BaseComponent from './base-component';\nimport { OffcanvasOptions, OffcanvasEvent } from '../interface/offcanvas';\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n */\nconst getOffcanvasInstance = (element: HTMLElement) => getInstance<Offcanvas>(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n */\nconst offcanvasInitCallback = (element: HTMLElement) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param self the `Offcanvas` instance\n */\nconst setOffCanvasScrollbar = (self: Offcanvas) => {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the `click` event listeners.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true*, listeners are added\n */\nconst toggleOffcanvasEvents = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  self.triggers.forEach(btn => action(btn, mouseclickEvent, offcanvasTriggerHandler as EventListener));\n};\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true* listeners are added\n */\nconst toggleOffCanvasDismiss = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler as EventListener);\n  action(doc, mouseclickEvent, offcanvasDismissHandler as EventListener);\n};\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasShow = (self: Offcanvas) => {\n  const { element, options } = self;\n\n  /* istanbul ignore else */\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: 'visible' });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n};\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param callback the hide callback\n */\nconst beforeOffcanvasHide = (self: Offcanvas, callback?: () => void) => {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  element.blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => hideOffcanvasComplete(self, callback));\n  } else hideOffcanvasComplete(self, callback);\n};\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @param e the `Event` object\n */\nconst offcanvasTriggerHandler = (e: MouseEvent) => {\n  const trigger = closest(e.target as HTMLElement, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    self.relatedTarget = trigger;\n    self.toggle();\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param e the `Event` object\n */\nconst offcanvasDismissHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const offCanvasDismiss = querySelector(offcanvasDismissSelector, element as HTMLElement | undefined);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore next: must have a filter */\n  if (!self) return;\n\n  const { options, triggers } = self;\n  const { backdrop } = options;\n  const trigger = closest(target as HTMLElement, offcanvasToggleSelector);\n  const selection = getDocument(element).getSelection();\n\n  /* istanbul ignore next: a filter is required here */\n  if (overlay.contains(target as HTMLElement) && backdrop === 'static') return;\n\n  /* istanbul ignore else */\n  if (\n    !(selection && selection.toString().length) &&\n    ((!element.contains(target as HTMLElement) &&\n      backdrop &&\n      /* istanbul ignore next */ (!trigger || triggers.includes(target as HTMLElement))) ||\n      (offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement)))\n  ) {\n    self.relatedTarget = offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement) ? offCanvasDismiss : null;\n    self.hide();\n  }\n\n  /* istanbul ignore next */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst offcanvasKeyDismissHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore next: must filter */\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (self.options.keyboard && code === keyEscape) {\n    self.relatedTarget = null;\n    self.hide();\n  }\n};\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst showOffcanvasComplete = (self: Offcanvas) => {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n  setAttribute(element, 'role', 'dialog');\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n};\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param callback the hide callback\n */\nconst hideOffcanvasComplete = (self: Offcanvas, callback?: () => void) => {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, 'true');\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, 'role');\n  setElementStyle(element, { visibility: '' });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (visibleTrigger) focus(visibleTrigger as HTMLElement);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n  // callback\n  if (isFunction(callback)) callback();\n};\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nexport default class Offcanvas extends BaseComponent {\n  static selector = offcanvasSelector;\n  static init = offcanvasInitCallback;\n  static getInstance = getOffcanvasInstance;\n  declare options: OffcanvasOptions;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually an `.offcanvas` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<OffcanvasOptions>) {\n    super(target, config);\n\n    // instance element\n    const { element } = this;\n\n    // all the triggering buttons\n    this.triggers = [...querySelectorAll(offcanvasToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // additional instance property\n    this.relatedTarget = null;\n\n    // attach event listeners\n    toggleOffcanvasEvents(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return offcanvasComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return offcanvasDefaults;\n  }\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const { element, options, relatedTarget } = this;\n    let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) return;\n\n    showOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    shownOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, showOffcanvasEvent);\n    if (showOffcanvasEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n    if (currentOpen && currentOpen !== element) {\n      const that =\n        getOffcanvasInstance(currentOpen) ||\n        /* istanbul ignore next */\n        getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, modalComponent);\n      if (that) that.hide();\n    }\n\n    if (options.backdrop) {\n      if (!hasPopup(overlay)) {\n        appendOverlay(element, true);\n      } else {\n        toggleOverlayType();\n      }\n\n      overlayDelay = getElementTransitionDuration(overlay);\n      showOverlay();\n\n      setTimeout(() => beforeOffcanvasShow(this), overlayDelay);\n    } else {\n      beforeOffcanvasShow(this);\n      /* istanbul ignore else */\n      if (currentOpen && hasClass(overlay, showClass)) {\n        hideOverlay();\n      }\n    }\n  }\n\n  /**\n   * Hides the offcanvas from the user.\n   *\n   * @param callback when `true` it will skip animation\n   */\n  hide(callback?: () => void) {\n    const { element, relatedTarget } = this;\n\n    if (!hasClass(element, showClass)) return;\n\n    hideOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    hiddenOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, hideOffcanvasEvent);\n    if (hideOffcanvasEvent.defaultPrevented) return;\n\n    addClass(element, offcanvasTogglingClass);\n    removeClass(element, showClass);\n\n    if (!callback) {\n      emulateTransitionEnd(element, () => beforeOffcanvasHide(this, callback));\n    } else beforeOffcanvasHide(this, callback);\n  }\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    toggleOffcanvasEvents(this);\n    this.hide(() => super.dispose());\n  }\n}\n","/** @type {string} */\nconst popoverString = 'popover';\nexport default popoverString;\n","/** @type {string} */\nconst popoverComponent = 'Popover';\nexport default popoverComponent;\n","/** @type {string} */\nconst tooltipString = 'tooltip';\nexport default tooltipString;\n","import tooltipString from '../strings/tooltipString';\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param tipType the expected markup type\n * @returns the template markup\n */\nconst getTipTemplate = (tipType: string) => {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : '';\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${header + arrow + body}</div>`;\n};\n\nexport default getTipTemplate;\n","const tipClassPositions = {\n  top: 'top',\n  bottom: 'bottom',\n  left: 'start',\n  right: 'end',\n};\n\nexport default tipClassPositions;\n","import {\n  isHTMLElement,\n  setElementStyle,\n  getDocumentElement,\n  getBoundingClientRect,\n  getElementStyle,\n  isRTL,\n  toLowerCase,\n  createCustomEvent,\n  dispatchEvent,\n} from '@thednp/shorty';\n\nimport popoverComponent from '../strings/popoverComponent';\nimport tipClassPositions from './tipClassPositions';\nimport Tooltip from '../components/tooltip';\nimport type { TooltipEvent } from '../interface/tooltip';\nimport type { PopoverEvent } from '../interface/popover';\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n */\nconst styleTip = <T extends Tooltip>(self: T) => {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const { element, tooltip, container, options, arrow } = self;\n  /* istanbul ignore next */\n  if (!tooltip) return;\n  const tipPositions = { ...tipClassPositions };\n  const RTL = isRTL(element);\n\n  // reset tooltip style (top: 0, left: 0 works best)\n  setElementStyle(tooltip, {\n    // top: '0px', left: '0px', right: '', bottom: '',\n    top: '',\n    left: '',\n    right: '',\n    bottom: '',\n  });\n  const isPopover = self.name === popoverComponent;\n  const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n  const { clientWidth: htmlcw, clientHeight: htmlch, offsetWidth: htmlow } = getDocumentElement(element);\n  let { placement } = options;\n  const { clientWidth: parentCWidth, offsetWidth: parentOWidth } = container as HTMLElement;\n  const parentPosition = getElementStyle(container as HTMLElement, 'position');\n  const fixedParent = parentPosition === 'fixed';\n  const scrollbarWidth = fixedParent ? Math.abs(parentCWidth - parentOWidth) : Math.abs(htmlcw - htmlow);\n  const leftBoundry = RTL && fixedParent ? /* istanbul ignore next */ scrollbarWidth : 0;\n  const rightBoundry = htmlcw - (!RTL ? scrollbarWidth : 0) - 1;\n  const {\n    width: elemWidth,\n    height: elemHeight,\n    left: elemRectLeft,\n    right: elemRectRight,\n    top: elemRectTop,\n  } = getBoundingClientRect(element, true);\n  const { x, y } = {\n    x: elemRectLeft,\n    y: elemRectTop,\n  };\n  // reset arrow style\n  setElementStyle(arrow as HTMLElement, {\n    top: '',\n    left: '',\n    right: '',\n    bottom: '',\n  });\n  let topPosition: number | string = 0;\n  let bottomPosition: number | string = '';\n  let leftPosition: number | string = 0;\n  let rightPosition: number | string = '';\n  let arrowTop: number | string = '';\n  let arrowLeft: number | string = '';\n  let arrowRight: number | string = '';\n\n  const arrowWidth = (arrow as HTMLElement).offsetWidth || 0;\n  const arrowHeight = (arrow as HTMLElement).offsetHeight || 0;\n  const arrowAdjust = arrowWidth / 2;\n\n  // check placement\n  let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n  let bottomExceed = elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n  let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n  let rightExceed = elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n  const horizontals = ['left', 'right'];\n  const verticals = ['top', 'bottom'];\n\n  topExceed = horizontals.includes(placement)\n    ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n    : topExceed;\n  bottomExceed = horizontals.includes(placement)\n    ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n    : bottomExceed;\n  leftExceed = verticals.includes(placement) ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry : leftExceed;\n  rightExceed = verticals.includes(placement)\n    ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n    : rightExceed;\n\n  // first remove side positions if both left and right limits are exceeded\n  // we usually fall back to top|bottom\n  placement = horizontals.includes(placement) && leftExceed && rightExceed ? 'top' : placement;\n  // recompute placement\n  placement = placement === 'top' && topExceed ? 'bottom' : placement;\n  placement = placement === 'bottom' && bottomExceed ? 'top' : placement;\n  placement = placement === 'left' && leftExceed ? 'right' : placement;\n  placement = placement === 'right' && rightExceed ? 'left' : placement;\n\n  // update tooltip/popover class\n  if (!tooltip.className.includes(placement)) {\n    tooltip.className = tooltip.className.replace(tipClasses, tipPositions[placement]);\n  }\n\n  // compute tooltip / popover coordinates\n  /* istanbul ignore else */\n  if (horizontals.includes(placement)) {\n    // secondary|side positions\n    if (placement === 'left') {\n      // LEFT\n      leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n    } else {\n      // RIGHT\n      leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n    }\n\n    // adjust top and arrow\n    if (topExceed && bottomExceed) {\n      topPosition = 0;\n      bottomPosition = 0;\n      arrowTop = elemRectTop + elemHeight / 2 - arrowHeight / 2;\n    } else if (topExceed) {\n      topPosition = y;\n      bottomPosition = '';\n      arrowTop = elemHeight / 2 - arrowWidth;\n    } else if (bottomExceed) {\n      topPosition = y - tipHeight + elemHeight;\n      bottomPosition = '';\n      arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n    } else {\n      topPosition = y - tipHeight / 2 + elemHeight / 2;\n      arrowTop = tipHeight / 2 - arrowHeight / 2;\n    }\n  } else if (verticals.includes(placement)) {\n    if (placement === 'top') {\n      topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n    } else {\n      // BOTTOM\n      topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n    }\n\n    // adjust left | right and also the arrow\n    if (leftExceed) {\n      leftPosition = 0;\n      arrowLeft = x + elemWidth / 2 - arrowAdjust;\n    } else if (rightExceed) {\n      leftPosition = 'auto';\n      rightPosition = 0;\n      arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n    } else {\n      leftPosition = x - tipWidth / 2 + elemWidth / 2;\n      arrowLeft = tipWidth / 2 - arrowAdjust;\n    }\n  }\n\n  // apply style to tooltip/popover\n  setElementStyle(tooltip, {\n    top: `${topPosition}px`,\n    bottom: bottomPosition === '' ? '' : `${bottomPosition}px`,\n    left: leftPosition === 'auto' ? leftPosition : `${leftPosition}px`,\n    right: rightPosition !== '' ? `${rightPosition}px` : '',\n  });\n\n  // update arrow placement\n  /* istanbul ignore else */\n  if (isHTMLElement(arrow)) {\n    if (arrowTop !== '') {\n      arrow.style.top = `${arrowTop}px`;\n    }\n    if (arrowLeft !== '') {\n      arrow.style.left = `${arrowLeft}px`;\n    } else if (arrowRight !== '') {\n      arrow.style.right = `${arrowRight}px`;\n    }\n  }\n  const updatedTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`updated.bs.${toLowerCase(self.name)}`);\n  dispatchEvent(element, updatedTooltipEvent);\n};\n\nexport default styleTip;\n","import getTipTemplate from './getTipTemplate';\nimport tooltipString from '../strings/tooltipString';\nimport { TooltipOptions } from '../interface/tooltip';\n\nconst tooltipDefaults: TooltipOptions = {\n  template: getTipTemplate(tooltipString),\n  title: '',\n  customClass: '',\n  trigger: 'hover focus',\n  placement: 'top',\n  sanitizeFn: undefined,\n  animation: true,\n  delay: 200,\n  container: document.body,\n  content: '',\n  dismissible: false,\n  btnClose: '',\n};\nexport default tooltipDefaults;\n","/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = 'data-original-title';\nexport default dataOriginalTitle;\n","/** @type {string} */\nconst tooltipComponent = 'Tooltip';\nexport default tooltipComponent;\n","import { isNode, isArray, isFunction, isString, isNodeList, isHTMLElement } from '@thednp/shorty';\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param element target\n * @param content the `Element` to append / string\n * @param sanitizeFn a function to sanitize string content\n */\nconst setHtml = (element: Node, content: Node[] | Node | string, sanitizeFn?: (s: string) => string) => {\n  /* istanbul ignore next */\n  if (!isHTMLElement(element) || (isString(content) && !content.length)) return;\n\n  /* istanbul ignore else */\n  if (isString(content)) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    const domParser = new DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, 'text/html');\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (isNodeList(content) || (isArray(content) && content.every(isNode))) {\n    element.append(...[...content]);\n  }\n};\nexport default setHtml;\n","import { createElement, addClass, hasClass, setAttribute, querySelector, isRTL, isHTMLElement } from '@thednp/shorty';\n\nimport tooltipComponent from '../strings/tooltipComponent';\nimport tooltipString from '../strings/tooltipString';\nimport popoverString from '../strings/popoverString';\nimport fadeClass from '../strings/fadeClass';\nimport tipClassPositions from './tipClassPositions';\nimport setHtml from './setHtml';\nimport Tooltip from '../components/tooltip';\nimport Popover from '../components/popover';\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param self the `Tooltip` / `Popover` instance\n */\nconst createTip = (self: Tooltip | Popover) => {\n  const isTooltip = self.name === tooltipComponent;\n\n  const { id, element, options } = self;\n  const { title, placement, template, animation, customClass, sanitizeFn, dismissible, content, btnClose } = options;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts: Node[] = [];\n  let contentParts: Node[] = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  let tooltipTemplate: Node | string;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement('div') as HTMLElement;\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild as HTMLElement;\n  }\n\n  // set popover markup\n  self.tooltip = isHTMLElement(tooltipTemplate)\n    ? (tooltipTemplate.cloneNode(true) as HTMLElement)\n    : /* istanbul ignore next */ undefined;\n\n  const { tooltip } = self;\n  /* istanbul ignore next */\n  if (!tooltip) return;\n\n  // set id and role attributes\n  setAttribute(tooltip, 'id', id);\n  setAttribute(tooltip, 'role', tooltipString);\n\n  const bodyClass = isTooltip ? `${tooltipString}-inner` : `${popoverString}-body`;\n  const tooltipHeader = isTooltip ? null : querySelector(`.${popoverString}-header`, tooltip);\n  const tooltipBody = querySelector(`.${bodyClass}`, tooltip);\n\n  // set arrow and enable access for styleTip\n  self.arrow = querySelector(`.${tipString}-arrow`, tooltip) as HTMLElement;\n  const { arrow } = self;\n\n  if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n  else {\n    const tempTitle = createElement('div') as Node;\n    setHtml(tempTitle, title, sanitizeFn);\n    titleParts = [...[...tempTitle.childNodes]];\n  }\n\n  if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n  else {\n    const tempContent = createElement('div') as Node;\n    setHtml(tempContent, content, sanitizeFn);\n    contentParts = [...[...tempContent.childNodes]];\n  }\n\n  // set dismissible button\n  if (dismissible) {\n    if (title) {\n      if (isHTMLElement(btnClose)) titleParts = [...titleParts, btnClose.cloneNode(true)];\n      else {\n        const tempBtn = createElement('div') as Node;\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        titleParts = [...titleParts, tempBtn.firstChild as Node];\n      }\n    } else {\n      /* istanbul ignore else */\n      if (tooltipHeader) tooltipHeader.remove();\n      if (isHTMLElement(btnClose)) contentParts = [...contentParts, btnClose.cloneNode(true)];\n      else {\n        const tempBtn = createElement('div') as Node;\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        contentParts = [...contentParts, tempBtn.firstChild as Node];\n      }\n    }\n  }\n\n  // fill the template with content from options / data attributes\n  // also sanitize title && content\n  /* istanbul ignore else */\n  if (!isTooltip) {\n    /* istanbul ignore else */\n    if (title && tooltipHeader) setHtml(tooltipHeader, titleParts, sanitizeFn);\n    /* istanbul ignore else */\n    if (content && tooltipBody) setHtml(tooltipBody, contentParts, sanitizeFn);\n    // set btn\n    self.btn = querySelector('.btn-close', tooltip) || undefined;\n  } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n  // Bootstrap 5.2.x\n  // addClass(tooltip, 'position-absolute');\n  addClass(tooltip, 'position-fixed');\n  addClass(arrow, 'position-absolute');\n\n  // set popover animation and placement\n  /* istanbul ignore else */\n  if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n  /* istanbul ignore else */\n  if (animation && !hasClass(tooltip, fadeClass)) addClass(tooltip, fadeClass);\n  /* istanbul ignore else */\n  if (customClass && !hasClass(tooltip, customClass)) {\n    addClass(tooltip, customClass);\n  }\n  /* istanbul ignore else */\n  if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n};\n\nexport default createTip;\n","import { getDocument, isShadowRoot, isTableElement, getParentNode, getElementStyle } from '@thednp/shorty';\n\n/**\n * Returns an `HTMLElement` to be used as default value for *options.container*\n * for `Tooltip` / `Popover` components.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element the target\n * @returns the query result\n */\nconst getElementContainer = (element: HTMLElement): ParentNode => {\n  const majorBlockTags = ['HTML', 'BODY'];\n  const containers: ParentNode[] = [];\n  let { parentNode } = element as Node;\n\n  while (parentNode && !majorBlockTags.includes(parentNode.nodeName)) {\n    parentNode = getParentNode(parentNode) as ParentNode;\n    /* istanbul ignore else */\n    if (!(isShadowRoot(parentNode) || isTableElement(parentNode))) {\n      containers.push(parentNode);\n    }\n  }\n\n  return (\n    containers.find((c, i) => {\n      if (\n        getElementStyle(c as HTMLElement, 'position') !== 'relative' &&\n        containers.slice(i + 1).every(r => getElementStyle(r as HTMLElement, 'position') === 'static')\n      ) {\n        return c;\n      }\n      return null;\n    }) || /* istanbul ignore next: optional guard */ getDocument(element).body\n  );\n};\n\nexport default getElementContainer;\n","/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\nimport {\n  ariaDescribedBy,\n  focusoutEvent,\n  focusinEvent,\n  focusEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  mousedownEvent,\n  mouseclickEvent,\n  closest,\n  getUID,\n  getDocument,\n  getWindow,\n  removeAttribute,\n  getAttribute,\n  setAttribute,\n  hasAttribute,\n  touchstartEvent,\n  resizeEvent,\n  scrollEvent,\n  mousehoverEvent,\n  toLowerCase,\n  focus,\n  Timer,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  isApple,\n  isFunction,\n  getInstance,\n  ObjectAssign,\n  createCustomEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementStyle,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataOriginalTitle from '../strings/dataOriginalTitle';\nimport showClass from '../strings/showClass';\nimport tooltipString from '../strings/tooltipString';\nimport tooltipComponent from '../strings/tooltipComponent';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\n\nimport styleTip from '../util/styleTip';\nimport createTip from '../util/createTip';\nimport { appendPopup, removePopup, hasPopup } from '../util/popupContainer';\nimport getElementContainer from '../util/getElementContainer';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport BaseComponent from './base-component';\nimport { TooltipOptions, TooltipEvent } from '../interface/tooltip';\nimport { PopoverOptions, PopoverEvent } from '../interface/popover';\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector = `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = 'title';\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n *\n */\nlet getTooltipInstance = (element: HTMLElement) => getInstance<Tooltip>(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n */\nconst tooltipInitCallback = (element: HTMLElement) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param self the `Tooltip` instance\n */\nconst removeTooltip = (self: Tooltip) => {\n  const { element, tooltip, container, offsetParent } = self;\n  removeAttribute(element, ariaDescribedBy);\n  removePopup(tooltip as HTMLElement, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param self the `Tooltip` instance\n * @param callback the parent dispose callback\n */\nconst disposeTooltipComplete = (self: Tooltip, callback?: () => void) => {\n  const { element } = self;\n  toggleTooltipHandlers(self);\n\n  /* istanbul ignore else */\n  if (hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent) {\n    toggleTooltipTitle(self);\n  }\n  /* istanbul ignore else */\n  if (callback) callback();\n};\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipAction = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(getDocument(element), touchstartEvent, self.handleTouch as EventListener, passiveHandler);\n\n  [scrollEvent, resizeEvent].forEach(ev => {\n    action(getWindow(element), ev, self.update, passiveHandler);\n  });\n};\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipShownAction = (self: Tooltip) => {\n  const { element } = self;\n  const shownTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`shown.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, 'in');\n};\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipHiddenAction = (self: Tooltip) => {\n  const { element, onHideComplete } = self;\n  const hiddenTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hidden.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n  if (isFunction(onHideComplete)) {\n    onHideComplete();\n    self.onHideComplete = undefined;\n  }\n  Timer.clear(element, 'out');\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  // btn is only for dismissible popover\n  const { element, options, btn } = self;\n  const { trigger } = options;\n  const isPopover = self.name !== tooltipComponent;\n  const dismissible = isPopover && (options as PopoverOptions).dismissible ? true : false;\n\n  if (trigger.includes('manual')) return;\n\n  self.enabled = !!add;\n\n  const triggerOptions = trigger.split(' ');\n\n  triggerOptions.forEach(tr => {\n    /* istanbul ignore else */\n    if (tr === mousehoverEvent) {\n      action(element, mousedownEvent, self.show);\n      action(element, mouseenterEvent, self.show);\n\n      /* istanbul ignore else */\n      if (dismissible && btn) {\n        action(btn, mouseclickEvent, self.hide);\n      } else {\n        action(element, mouseleaveEvent, self.hide);\n        action(getDocument(element), touchstartEvent, self.handleTouch as EventListener, passiveHandler);\n      }\n    } else if (tr === mouseclickEvent) {\n      action(element, tr, !dismissible ? self.toggle : self.show);\n    } else if (tr === focusEvent) {\n      action(element, focusinEvent, self.show);\n      /* istanbul ignore else */\n      if (!dismissible) action(element, focusoutEvent, self.hide);\n      /* istanbul ignore else */\n      if (isApple) {\n        action(element, mouseclickEvent, () => focus(element));\n      }\n    }\n  });\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipOpenHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, container, offsetParent } = self;\n  const { offsetHeight, scrollHeight } = container as HTMLElement;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  /* istanbul ignore else */\n  const win = getWindow(element);\n  const overflow = offsetHeight !== scrollHeight;\n  const scrollTarget = container === offsetParent && overflow ? container : win;\n  action(scrollTarget, resizeEvent, self.update, passiveHandler);\n  action(scrollTarget, scrollEvent, self.update, passiveHandler);\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) action(parentModal, `hide.bs.${modalString}`, self.hide);\n  if (parentOffcanvas) action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.hide);\n};\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param self the `Tooltip` instance\n * @param content when `true`, event listeners are added\n */\nconst toggleTooltipTitle = (self: Tooltip, content?: string) => {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(\n    element,\n    titleAtt[content ? 0 : 1],\n    content || getAttribute(element, titleAtt[0]) || /* istanbul ignore next */ '',\n  );\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n};\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nexport default class Tooltip extends BaseComponent {\n  static selector = tooltipSelector;\n  static init = tooltipInitCallback;\n  static getInstance = getTooltipInstance;\n  static styleTip = styleTip;\n  declare options: TooltipOptions;\n  declare btn?: HTMLElement;\n  declare tooltip?: HTMLElement;\n  declare container: ParentNode;\n  declare arrow?: HTMLElement;\n  declare offsetParent?: HTMLElement;\n  declare enabled: boolean;\n  declare id: string;\n  declare onHideComplete?: () => void;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<TooltipOptions>) {\n    super(target, config);\n\n    const { element } = this;\n    const isTooltip = this.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    /* istanbul ignore next: this is to set Popover too */\n    getTooltipInstance = <T extends Tooltip>(elem: HTMLElement) => getInstance<T>(elem, tipComponent);\n\n    // additional properties\n    this.enabled = true;\n    /** Set unique ID for `aria-describedby`. */\n    this.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = this;\n\n    // invalidate\n    if ((!options.title && isTooltip) || (!isTooltip && !options.content)) {\n      // throw Error(`${this.name} Error: target has no content set.`);\n      return;\n    }\n\n    // reset default options\n    ObjectAssign(tooltipDefaults, { titleAttr: '' });\n\n    // set title attributes and add event listeners\n    /* istanbul ignore else */\n    if (hasAttribute(element, titleAttr) && isTooltip && typeof options.title === 'string') {\n      toggleTooltipTitle(this, options.title);\n    }\n\n    // set containers\n    this.container = getElementContainer(element);\n    this.offsetParent = ['sticky', 'fixed'].some(\n      position => getElementStyle(this.container as HTMLElement, 'position') === position,\n    )\n      ? (this.container as HTMLElement)\n      : getDocument(this.element).body;\n\n    // create tooltip here\n    createTip(this);\n\n    // attach events\n    toggleTooltipHandlers(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tooltipComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return tooltipDefaults;\n  }\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /** Shows the tooltip. */\n  show = () => this._show();\n  _show() {\n    const { options, tooltip, element, container, offsetParent, id } = this;\n    const { animation } = options;\n    const outTimer = Timer.get(element, 'out');\n    const tipContainer = container === offsetParent ? container : offsetParent;\n\n    Timer.clear(element, 'out');\n\n    if (tooltip && !outTimer && !hasPopup(tooltip, tipContainer)) {\n      Timer.set(\n        element,\n        () => {\n          const showTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`show.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, showTooltipEvent);\n          if (showTooltipEvent.defaultPrevented) return;\n\n          // append to container\n          appendPopup(tooltip, tipContainer);\n\n          setAttribute(element, ariaDescribedBy, `#${id}`);\n\n          this.update();\n          toggleTooltipOpenHandlers(this, true);\n\n          /* istanbul ignore else */\n          if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n          /* istanbul ignore else */\n          if (animation) emulateTransitionEnd(tooltip, () => tooltipShownAction(this));\n          else tooltipShownAction(this);\n        },\n        17,\n        'in',\n      );\n    }\n  }\n\n  /** Hides the tooltip. */\n  hide = () => {\n    const { options, tooltip, element, container, offsetParent } = this;\n    const { animation, delay } = options;\n\n    Timer.clear(element, 'in');\n\n    /* istanbul ignore else */\n    if (tooltip && hasPopup(tooltip, container === offsetParent ? container : offsetParent)) {\n      Timer.set(\n        element,\n        () => {\n          const hideTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hide.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, hideTooltipEvent);\n\n          if (hideTooltipEvent.defaultPrevented) return;\n\n          this.update();\n          removeClass(tooltip, showClass);\n          toggleTooltipOpenHandlers(this);\n\n          /* istanbul ignore else */\n          if (animation) emulateTransitionEnd(tooltip, () => tooltipHiddenAction(this));\n          else tooltipHiddenAction(this);\n        },\n        delay + 17,\n        'out',\n      );\n    }\n  };\n\n  /** Updates the tooltip position. */\n  update = () => {\n    styleTip<Tooltip>(this);\n  };\n\n  /** Toggles the tooltip visibility. */\n  toggle = () => {\n    const { tooltip, container, offsetParent } = this;\n\n    if (tooltip && !hasPopup(tooltip, container === offsetParent ? container : offsetParent)) this.show();\n    else this.hide();\n  };\n\n  /** Enables the tooltip. */\n  enable() {\n    const { enabled } = this;\n    /* istanbul ignore else */\n    if (!enabled) {\n      toggleTooltipHandlers(this, true);\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const { tooltip, container, offsetParent, options, enabled } = this;\n    const { animation } = options;\n    /* istanbul ignore else */\n    if (enabled) {\n      if (tooltip && hasPopup(tooltip, container === offsetParent ? container : offsetParent) && animation) {\n        this.onHideComplete = () => toggleTooltipHandlers(this);\n        this.hide();\n      } else {\n        toggleTooltipHandlers(this);\n      }\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    if (!this.enabled) this.enable();\n    else this.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   *\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch = ({ target }: TouchEvent) => {\n    const { tooltip, element } = this;\n\n    /* istanbul ignore next */\n    if (\n      (tooltip && tooltip.contains(target as HTMLElement)) ||\n      target === element ||\n      (target && element.contains(target as HTMLElement))\n    ) {\n      // smile for ESLint\n    } else {\n      this.hide();\n    }\n  };\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const { tooltip, container, offsetParent, options } = this;\n    const callback = () => disposeTooltipComplete(this, () => super.dispose());\n\n    if (options.animation && tooltip && hasPopup(tooltip, container === offsetParent ? container : offsetParent)) {\n      this.options.delay = 0; // reset delay\n      this.onHideComplete = callback;\n      this.hide();\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\nimport { getInstance, ObjectAssign, focus } from '@thednp/shorty';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\n\nimport getTipTemplate from '../util/getTipTemplate';\nimport styleTip from '../util/styleTip';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport Tooltip from './tooltip';\n\nimport type { PopoverOptions /* , PopoverEvent */ } from '../interface/popover';\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector = `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults: PopoverOptions = ObjectAssign({}, tooltipDefaults, {\n  template: getTipTemplate(popoverString),\n  content: '',\n  dismissible: false,\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n});\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n *\n */\nconst getPopoverInstance = (element: HTMLElement) => getInstance<Popover>(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n */\nconst popoverInitCallback = (element: HTMLElement) => new Popover(element);\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nexport default class Popover extends Tooltip {\n  static selector = popoverSelector;\n  static init = popoverInitCallback;\n  static getInstance = getPopoverInstance;\n  static styleTip = styleTip;\n  declare options: PopoverOptions;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<PopoverOptions>) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return popoverComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return popoverDefaults;\n  }\n\n  /* extend original `show()` */\n  show = () => {\n    super._show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    /* istanbul ignore else */\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  };\n}\n","/** @type {string} */\nconst scrollspyString = 'scrollspy';\nexport default scrollspyString;\n","/** @type {string} */\nconst scrollspyComponent = 'ScrollSpy';\nexport default scrollspyComponent;\n","/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\nimport {\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  getWindow,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementsByTagName,\n  getAttribute,\n  querySelector,\n  isHTMLElement,\n  isWindow,\n  createCustomEvent,\n  getInstance,\n  scrollEvent,\n  // ObjectAssign,\n  passiveHandler,\n  dispatchEvent,\n  getBoundingClientRect,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport scrollspyString from '../strings/scrollspyString';\nimport scrollspyComponent from '../strings/scrollspyComponent';\n\nimport BaseComponent from './base-component';\nimport { ScrollSpyOptions, ScrollSpyEvent } from '../interface/scrollspy';\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults: ScrollSpyOptions = {\n  offset: 10,\n  target: null,\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n */\nconst getScrollSpyInstance = (element: HTMLElement) => getInstance<ScrollSpy>(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n */\nconst scrollspyInitCallback = (element: HTMLElement) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = createCustomEvent<ScrollSpyEvent>(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n *\n * @param self the `ScrollSpy` instance\n */\nconst updateSpyTargets = (self: ScrollSpy) => {\n  const { target, scrollTarget, options, itemsLength, scrollHeight, element } = self;\n  const { offset } = options;\n  const isWin = isWindow(scrollTarget as Node | Window);\n\n  const links = target && getElementsByTagName('A', target);\n  const scrollHEIGHT = scrollTarget ? getScrollHeight(scrollTarget) : /* istanbul ignore next */ scrollHeight;\n\n  self.scrollTop = isWin ? (scrollTarget as Window).scrollY : (scrollTarget as HTMLElement).scrollTop;\n\n  // only update items/offsets once or with each mutation\n  /* istanbul ignore else */\n  if (links && (scrollHEIGHT !== scrollHeight || itemsLength !== links.length)) {\n    let href;\n    let targetItem;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    [...links].forEach(link => {\n      href = getAttribute(link, 'href');\n      targetItem =\n        href && href.charAt(0) === '#' && href.slice(-1) !== '#' && querySelector(href, getDocument(element));\n\n      if (targetItem) {\n        self.items.push(link);\n        rect = getBoundingClientRect(targetItem);\n        self.offsets.push((isWin ? rect.top + self.scrollTop : targetItem.offsetTop) - offset);\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n};\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n *\n * @param scrollTarget the `ScrollSpy` instance\n * @return `scrollTarget` height\n */\nconst getScrollHeight = (scrollTarget: Node | Window) => {\n  return isHTMLElement(scrollTarget as Node)\n    ? (scrollTarget as HTMLElement).scrollHeight\n    : getDocumentElement(scrollTarget as Node).scrollHeight;\n};\n\n/**\n * Returns the height property of the scrolling element.\n *\n * @param params the `ScrollSpy` instance\n */\nconst getOffsetHeight = ({ element, scrollTarget }: ScrollSpy) => {\n  return isWindow(scrollTarget as Node) ? (scrollTarget as Window).innerHeight : getBoundingClientRect(element).height;\n};\n\n/**\n * Clear all items of the target.\n *\n * @param target a single item\n */\nconst clear = (target: HTMLElement) => {\n  [...getElementsByTagName('A', target)].forEach(item => {\n    if (hasClass(item, activeClass)) removeClass(item, activeClass);\n  });\n};\n\n/**\n * Activates a new item.\n *\n * @param self the `ScrollSpy` instance\n * @param item a single item\n */\nconst activate = (self: ScrollSpy, item: HTMLElement) => {\n  const { target, element } = self;\n  if (isHTMLElement(target)) clear(target);\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents: HTMLElement[] = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement as HTMLElement;\n    if (hasClass(parentItem, 'nav') || hasClass(parentItem, 'dropdown-menu')) parents.push(parentItem);\n  }\n\n  parents.forEach(menuItem => {\n    const parentLink = menuItem.previousElementSibling as HTMLElement | null;\n\n    /* istanbul ignore else */\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n};\n\n/**\n * Toggles on/off the component event listener.\n *\n * @param self the `ScrollSpy` instance\n * @param add when `true`, listener is added\n */\nconst toggleSpyHandlers = (self: ScrollSpy, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.scrollTarget as EventTarget, scrollEvent, self.refresh, passiveHandler);\n};\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nexport default class ScrollSpy extends BaseComponent {\n  static selector = scrollspySelector;\n  static init = scrollspyInitCallback;\n  static getInstance = getScrollSpyInstance;\n  declare options: ScrollSpyOptions;\n  declare target: HTMLElement | null;\n  declare scrollTarget: HTMLElement | Window;\n  declare scrollTop: number;\n  declare maxScroll: number;\n  declare scrollHeight: number;\n  declare activeItem: HTMLElement | null;\n  declare items: HTMLElement[];\n  declare itemsLength: number;\n  declare offsets: number[];\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ScrollSpyOptions>) {\n    super(target, config);\n\n    // initialization element & options\n    const { element, options } = this;\n\n    // additional properties\n    this.target = querySelector(options.target as HTMLElement | string, getDocument(element));\n\n    // invalidate\n    if (!this.target) return;\n\n    // set initial state\n    this.scrollTarget = element.clientHeight < element.scrollHeight ? element : getWindow(element);\n    this.scrollHeight = getScrollHeight(this.scrollTarget);\n\n    // add event handlers\n    toggleSpyHandlers(this, true);\n\n    this.refresh();\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return scrollspyComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return scrollspyDefaults;\n  }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh = () => {\n    const { target } = this;\n\n    // check if target is visible and invalidate\n    /* istanbul ignore next */\n    if (target?.offsetHeight === 0) return;\n\n    updateSpyTargets(this);\n\n    const { scrollTop, maxScroll, itemsLength, items, activeItem } = this;\n\n    if (scrollTop >= maxScroll) {\n      const newActiveItem = items[itemsLength - 1];\n\n      /* istanbul ignore else */\n      if (activeItem !== newActiveItem) {\n        activate(this, newActiveItem);\n      }\n      return;\n    }\n\n    const { offsets } = this;\n\n    if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n      this.activeItem = null;\n      if (target) clear(target);\n      return;\n    }\n\n    items.forEach((item, i) => {\n      if (\n        activeItem !== item &&\n        scrollTop >= offsets[i] &&\n        (typeof offsets[i + 1] === 'undefined' || scrollTop < offsets[i + 1])\n      ) {\n        activate(this, item);\n      }\n    });\n  };\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    toggleSpyHandlers(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabString = 'tab';\nexport default tabString;\n","/** @type {string} */\nconst tabComponent = 'Tab';\nexport default tabComponent;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  emulateTransitionEnd,\n  dispatchEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getElementsByClassName,\n  closest,\n  setAttribute,\n  mouseclickEvent,\n  createCustomEvent,\n  Timer,\n  getInstance,\n  ariaSelected,\n  // ObjectAssign,\n  reflow,\n  isHTMLElement,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport collapsingClass from '../strings/collapsingClass';\nimport activeClass from '../strings/activeClass';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport tabString from '../strings/tabString';\nimport tabComponent from '../strings/tabComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { /* TabOptions, */ TabEvent } from '../interface/tab';\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: HTMLElement) => getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: HTMLElement) => new Tab(element);\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEvent>(`show.bs.${tabString}`);\nconst shownTabEvent = createCustomEvent<TabEvent>(`shown.bs.${tabString}`);\nconst hideTabEvent = createCustomEvent<TabEvent>(`hide.bs.${tabString}`);\nconst hiddenTabEvent = createCustomEvent<TabEvent>(`hidden.bs.${tabString}`);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = '';\n    removeClass(tabContent, collapsingClass);\n  }\n\n  /* istanbul ignore else */\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null };\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) || /* istanbul ignore next */ {\n      currentHeight: 0,\n      nextHeight: 0,\n    };\n    if (currentHeight === nextHeight) {\n      triggerTabEnd(self);\n    } else {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null, content: null };\n  let currentHeight = 0;\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach(c => {\n      if (isHTMLElement(c)) addClass(c, 'overflow-hidden');\n    });\n    currentHeight = isHTMLElement(content) ? content.scrollHeight : /* istanbul ignore next */ 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n  if (showTabEvent.defaultPrevented) return;\n\n  if (nextContent) addClass(nextContent, activeClass);\n  if (content) removeClass(content, activeClass);\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const nextHeight = nextContent.scrollHeight;\n    tabPrivate.set(element, { currentHeight, nextHeight, tab: null, content: null });\n\n    addClass(tabContent, collapsingClass);\n    tabContent.style.height = `${currentHeight}px`;\n    reflow(tabContent);\n    [content, nextContent].forEach(c => {\n      if (c) removeClass(c, 'overflow-hidden');\n    });\n  }\n\n  if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n    setTimeout(() => {\n      addClass(nextContent, showClass);\n      emulateTransitionEnd(nextContent, () => {\n        triggerTabShow(self);\n      });\n    }, 1);\n  } else {\n    if (nextContent) addClass(nextContent, showClass);\n    triggerTabShow(self);\n  }\n\n  if (tab) dispatchEvent(tab, hiddenTabEvent);\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (self: Tab): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  /* istanbul ignore next */\n  if (!isHTMLElement(nav as HTMLElement | undefined)) return { tab: null, content: null };\n\n  const activeTabs = getElementsByClassName(activeClass, nav as HTMLElement);\n  let tab: HTMLElement | null = null;\n  /* istanbul ignore else */\n  if (activeTabs.length === 1 && !dropdownClasses.some(c => hasClass(activeTabs[0].parentElement as HTMLElement, c))) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab as HTMLElement) ? getTargetElement(tab as HTMLElement) : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement): HTMLElement | null => {\n  /* istanbul ignore next */\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(',.')}`);\n  return dropdown ? querySelector(`.${dropdownClasses[0]}-toggle`, dropdown) : null;\n};\n\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Tab` instance\n * @param add when `true`, event listener is added\n */\nconst toggleTabHandler = (self: Tab, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, tabClickHandler);\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: Event) => {\n  const self = getTabInstance(e.target as HTMLElement);\n  /* istanbul ignore next: must filter */\n  if (!self) return;\n  e.preventDefault();\n\n  self.show();\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    if (!content) return;\n\n    const nav = closest(element, '.nav');\n    const container = closest(content, '.tab-content');\n\n    this.nav = nav;\n    this.content = content;\n    this.tabContent = container;\n\n    // event targets\n    this.dropdown = getParentDropdown(element);\n\n    // show first Tab instance of none is shown\n    // suggested on #432\n    const { tab } = getActiveTab(this);\n    if (nav && !tab) {\n      const firstTab = querySelector(tabSelector, nav);\n      const firstTabContent = firstTab && getTargetElement(firstTab);\n\n      /* istanbul ignore else */\n      if (firstTabContent) {\n        addClass(firstTab, activeClass);\n        addClass(firstTabContent, showClass);\n        addClass(firstTabContent, activeClass);\n        setAttribute(element, ariaSelected, 'true');\n      }\n    }\n\n    // add event listener\n    toggleTabHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    /* istanbul ignore else */\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(this);\n\n      /* istanbul ignore else */\n      if (nav) tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      if (isHTMLElement(tab as Node)) dispatchEvent(tab as EventTarget, hideTabEvent);\n      if (hideTabEvent.defaultPrevented) return;\n\n      addClass(element, activeClass);\n      setAttribute(element, ariaSelected, 'true');\n\n      const activeDropdown = isHTMLElement(tab as HTMLElement) && getParentDropdown(tab as HTMLElement);\n      if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n        removeClass(activeDropdown, activeClass);\n      }\n\n      /* istanbul ignore else */\n      if (nav) {\n        const toggleTab = () => {\n          if (tab) {\n            removeClass(tab, activeClass);\n            setAttribute(tab, ariaSelected, 'false');\n          }\n          if (dropdown && !hasClass(dropdown, activeClass)) addClass(dropdown, activeClass);\n        };\n\n        if (content && (hasClass(content, fadeClass) || (nextContent && hasClass(nextContent, fadeClass)))) {\n          Timer.set(nav, toggleTab, 1);\n        } else toggleTab();\n      }\n\n      if (content) {\n        removeClass(content, showClass);\n        if (hasClass(content, fadeClass)) {\n          emulateTransitionEnd(content, () => triggerTabHide(this));\n        } else {\n          triggerTabHide(this);\n        }\n      }\n    }\n  }\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    toggleTabHandler(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst toastString = 'toast';\nexport default toastString;\n","/** @type {string} */\nconst toastComponent = 'Toast';\nexport default toastComponent;\n","/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\nimport {\n  mouseclickEvent,\n  closest,\n  removeClass,\n  hasClass,\n  addClass,\n  focusoutEvent,\n  focusinEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  createCustomEvent,\n  getDocument,\n  Timer,\n  getInstance,\n  reflow,\n  // ObjectAssign,\n  emulateTransitionEnd,\n  dispatchEvent,\n  querySelectorAll,\n  querySelector,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport toastString from '../strings/toastString';\nimport toastComponent from '../strings/toastComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport { ToastOptions, ToastEvent } from '../interface/toast';\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = 'showing';\n/** @deprecated */\nconst hideClass = 'hide';\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n */\nconst getToastInstance = (element: HTMLElement) => getInstance<Toast>(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n */\nconst toastInitCallback = (element: HTMLElement) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = createCustomEvent<ToastEvent>(`show.bs.${toastString}`);\nconst shownToastEvent = createCustomEvent<ToastEvent>(`shown.bs.${toastString}`);\nconst hideToastEvent = createCustomEvent<ToastEvent>(`hide.bs.${toastString}`);\nconst hiddenToastEvent = createCustomEvent<ToastEvent>(`hidden.bs.${toastString}`);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n *\n * @param self the `Toast` instance\n */\nconst showToastComplete = (self: Toast) => {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  /* istanbul ignore else */\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n};\n\n/**\n * Executes after the toast is hidden to the user.\n *\n * @param self the `Toast` instance\n */\nconst hideToastComplete = (self: Toast) => {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n};\n\n/**\n * Executes before hiding the toast.\n *\n * @param self the `Toast` instance\n */\nconst hideToast = (self: Toast) => {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n};\n\n/**\n * Executes before showing the toast.\n *\n * @param self the `Toast` instance\n */\nconst showToast = (self: Toast) => {\n  const { element, options } = self;\n  Timer.set(\n    element,\n    () => {\n      removeClass(element, hideClass); // B/C\n      reflow(element);\n      addClass(element, showClass);\n      addClass(element, showingClass);\n\n      if (options.animation) {\n        emulateTransitionEnd(element, () => showToastComplete(self));\n      } else {\n        showToastComplete(self);\n      }\n    },\n    17,\n    showingClass,\n  );\n};\n\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Toast` instance\n * @param add when `true`, it will add the listener\n */\nconst toggleToastHandlers = (self: Toast, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, triggers, dismiss, options, hide } = self;\n\n  /* istanbul ignore else */\n  if (dismiss) {\n    action(dismiss, mouseclickEvent, hide);\n  }\n\n  /* istanbul ignore else */\n  if (options.autohide) {\n    [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent].forEach(e =>\n      action(element, e, interactiveToastHandler as EventListener),\n    );\n  }\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, toastClickHandler));\n  }\n};\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Executes after the instance has been disposed.\n *\n * @param {Toast} self the `Toast` instance\n */\nconst completeDisposeToast = (self: Toast) => {\n  Timer.clear(self.element, toastString);\n  toggleToastHandlers(self);\n};\n\n/**\n * Handles the `click` event listener for toast.\n *\n * @param e the `Event` object\n */\nconst toastClickHandler = (e: Event) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n  /* istanbul ignore next */\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n  self.relatedTarget = trigger;\n  self.show();\n};\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @param e the `Toast` instance\n */\nconst interactiveToastHandler = (e: MouseEvent) => {\n  const element = e.target as HTMLElement;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  /* istanbul ignore next: a solid filter is required */\n  if (!self || element === relatedTarget || element.contains(relatedTarget as Node)) return;\n\n  if ([mouseenterEvent, focusinEvent].includes(type)) {\n    Timer.clear(element, toastString);\n  } else {\n    Timer.set(element, () => self.hide(), self.options.delay, toastString);\n  }\n};\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nexport default class Toast extends BaseComponent {\n  static selector = toastSelector;\n  static init = toastInitCallback;\n  static getInstance = getToastInstance;\n  declare options: ToastOptions;\n  declare dismiss: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target the target `.toast` element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ToastOptions>) {\n    super(target, config);\n    const { element, options } = this;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) addClass(element, fadeClass);\n    else if (!options.animation && hasClass(element, fadeClass)) removeClass(element, fadeClass);\n\n    // dismiss button\n    this.dismiss = querySelector(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    this.triggers = [...querySelectorAll(toastToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // add event listener\n    toggleToastHandlers(this, true);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return toastComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return toastDefaults;\n  }\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() {\n    return hasClass(this.element, showClass);\n  }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show = () => {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && !isShown) {\n      dispatchEvent(element, showToastEvent);\n      if (showToastEvent.defaultPrevented) return;\n\n      showToast(this);\n    }\n  };\n\n  /** Hides the toast. */\n  hide = () => {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && isShown) {\n      dispatchEvent(element, hideToastEvent);\n      if (hideToastEvent.defaultPrevented) return;\n      hideToast(this);\n    }\n  };\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (isShown) {\n      removeClass(element, showClass);\n    }\n\n    completeDisposeToast(this);\n\n    super.dispose();\n  }\n}\n","import { Data, getElementsByTagName, matches } from '@thednp/shorty';\n\nimport { addListener } from '@thednp/event-listener';\n\nimport Alert from '../components/alert';\nimport Button from '../components/button';\nimport Carousel from '../components/carousel';\nimport Collapse from '../components/collapse';\nimport Dropdown from '../components/dropdown';\nimport Modal from '../components/modal';\nimport Offcanvas from '../components/offcanvas';\nimport Popover from '../components/popover';\nimport ScrollSpy from '../components/scrollspy';\nimport Tab from '../components/tab';\nimport Toast from '../components/toast';\nimport Tooltip from '../components/tooltip';\n\nconst componentsList = new Map<\n  string,\n  | typeof Alert\n  | typeof Button\n  | typeof Carousel\n  | typeof Collapse\n  | typeof Dropdown\n  | typeof Modal\n  | typeof Offcanvas\n  | typeof Popover\n  | typeof ScrollSpy\n  | typeof Tab\n  | typeof Toast\n  | typeof Tooltip\n>();\n\n[Alert, Button, Carousel, Collapse, Dropdown, Modal, Offcanvas, Popover, ScrollSpy, Tab, Toast, Tooltip].forEach(c =>\n  componentsList.set(c.prototype.name, c),\n);\n\n/**\n * Initialize all matched `Element`s for one component.\n *\n * @param callback\n * @param collection\n */\nconst initComponentDataAPI = <T>(\n  callback: (el: HTMLElement, ops?: Record<string, unknown>) => T,\n  collection: HTMLCollectionOf<HTMLElement> | HTMLElement[],\n) => {\n  [...collection].forEach(x => callback(x));\n};\n\n/**\n * Remove one component from a target container element or all in the page.\n *\n * @param component the component name\n * @param context parent `Node`\n */\nconst removeComponentDataAPI = <T>(component: string, context: ParentNode) => {\n  const compData = Data.getAllFor(component) as Map<HTMLElement, T>;\n\n  if (compData) {\n    [...compData].forEach(([element, instance]) => {\n      if (context.contains(element)) (instance as T & { dispose: () => void }).dispose();\n    });\n  }\n};\n\n/**\n * Initialize all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const initCallback = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName('*', lookUp)];\n\n  componentsList.forEach(cs => {\n    const { init, selector } = cs;\n    initComponentDataAPI(\n      init,\n      elemCollection.filter(item => matches(item, selector)),\n    );\n  });\n};\n\n/**\n * Remove all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const removeDataAPI = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n\n  componentsList.forEach(comp => {\n    removeComponentDataAPI(comp.prototype.name, lookUp);\n  });\n};\n\n// Bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, 'DOMContentLoaded', () => initCallback(), { once: true });\n}\n"],"names":["exports","r","a","s","e","c","n","o","t","i","f","d","g","E","L","lt","dt","mt","Et","vt","pt","gt","ft","bt","yt","ht","At","wt","kt","St","Q","q","G","J","x","X","Y","Z","$","_","ee","te","ne","se","re","ae","ce","ie","ue","le","de","me","Ee","ve","pe","ge","fe","be","ye","he","Ae","we","ke","Se","De","Me","Ne","Te","Ce","Le","Oe","Ie","ze","xe","He","Be","Ve","Pe","Dt","Mt","Nt","Tt","Ct","Lt","Ot","It","zt","xt","Ht","Bt","Vt","Pt","Ft","Rt","Wt","Ut","jt","Qt","qt","Gt","Kt","Jt","Xt","Yt","Zt","$t","_t","en","tn","nn","Fe","Re","H","T","We","Ue","C","B","on","sn","rn","an","cn","un","ln","dn","mn","A","En","w","R","I","vn","W","pn","gn","k","fn","je","Qe","qe","Ge","bn","yn","hn","An","wn","Ke","kn","Sn","Dn","Mn","Nn","Tn","Cn","Ln","On","In","zn","xn","Hn","u","y","Bn","S","V","P","D","Je","Xe","F","Vn","m","Ye","Ze","Pn","l","$e","_e","Fn","Rn","Wn","Un","z","h","et","jn","v","p","N","ut","Qn","qn","Gn","Kn","Jn","Xn","Yn","O","tt","Zn","$n","b","_n","M","eo","to","nt","no","ot","oo","U","j","st","so","_a","rt","ro","at","ao","co","io","uo","lo","mo","Eo","vo","po","go","fo","bo","yo","ho","ct","Ao","it","wo","ko","So","Do","Mo","No","fadeClass","showClass","dataBsDismiss","alertString","alertComponent","Version","version","BaseComponent","target","config","__publicField","element","querySelector","isString","prevInstance","Data","ObjectKeys","normalizeOptions","prop","alertSelector","alertDismissSelector","getAlertInstance","getInstance","alertInitCallback","Alert","closeAlertEvent","createCustomEvent","closedAlertEvent","alertTransitionEnd","that","toggleAlertHandler","dispatchEvent","add","action","addListener","removeListener","dismiss","close","mouseclickEvent","hasClass","removeClass","emulateTransitionEnd","activeClass","dataBsToggle","buttonString","buttonComponent","buttonSelector","getButtonInstance","buttonInitCallback","Button","toggleButtonHandler","self","isActive","addClass","setAttribute","ariaPressed","dataBsTarget","carouselString","carouselComponent","dataBsParent","dataBsContainer","getTargetElement","targetAttr","doc","getDocument","att","attValue","getAttribute","closest","carouselSelector","carouselItem","dataBsSlideTo","dataBsSlide","pausedClass","carouselDefaults","getCarouselInstance","carouselInitCallback","Carousel","startX","currentX","endX","carouselSlideEvent","carouselSlidEvent","carouselTransitionEndHandler","index","direction","slides","options","activeItem","getActiveIndex","orientation","directionClass","Timer","carouselPauseHandler","carouselResumeHandler","carouselIndicatorHandler","newIndex","carouselControlsHandler","carouselKeyHandler","code","querySelectorAll","isElementInScrollRange","RTL","isRTL","arrowKeyNext","keyArrowLeft","keyArrowRight","arrowKeyPrev","carouselDragHandler","carouselPointerDownHandler","controls","indicators","el","toggleCarouselTouchHandlers","carouselPointerMoveHandler","carouselPointerUpHandler","activateCarouselIndicator","pageIndex","pointermoveEvent","passiveHandler","pointerupEvent","toggleCarouselHandlers","touch","pause","interval","keyboard","mouseenterEvent","mouseleaveEvent","pointerdownEvent","touchstartEvent","dragstartEvent","arrow","indicator","keydownEvent","isHTMLElement","getElementsByClassName","isPaused","idx","next","eventProperties","ObjectAssign","getElementTransitionDuration","reflow","itemClasses","slide","collapsingClass","collapseString","collapseComponent","collapseSelector","collapseToggleSelector","collapseDefaults","getCollapseInstance","collapseInitCallback","Collapse","showCollapseEvent","shownCollapseEvent","hideCollapseEvent","hiddenCollapseEvent","expandCollapse","parent","triggers","noop","setElementStyle","btn","ariaExpanded","collapseContent","toggleCollapseHandler","collapseClickHandler","trigger","activeCollapse","activeCollapseInstance","dropdownMenuClasses","dropdownComponent","dropdownMenuClass","isEmptyAnchor","parentAnchor","hasAttribute","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","getDropdownInstance","dropdownInitCallback","Dropdown","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","showDropdownEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","updatedDropdownEvent","styleDropdown","menu","parentElement","offset","getElementStyle","menuEnd","style","positionClass","dropdownMargin","dropdownPosition","menuWidth","menuHeight","clientWidth","clientHeight","getDocumentElement","targetLeft","targetTop","targetWidth","targetHeight","getBoundingClientRect","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","posAjust","margins","endAdjust","getMenuItems","firstElementChild","toggleDropdownDismiss","dropdownDismissHandler","focusEvent","dropdownPreventScroll","keyupEvent","dropdownKeyHandler","scrollEvent","resizeEvent","ev","getWindow","dropdownLayoutHandler","toggleDropdownHandler","dropdownClickHandler","getCurrentOpenDropdown","currentParent","type","hasData","isForm","keyArrowDown","keyArrowUp","activeElement","open","menuItems","focus","keyEscape","currentElement","currentInstance","modalString","modalComponent","offcanvasComponent","fixedTopClass","fixedBottomClass","stickyTopClass","positionStickyClass","getFixedItems","resetScrollbar","bd","getDocumentBody","fixedItems","fixed","measureScrollbar","innerWidth","setScrollbar","overflow","bodyPad","sbWidth","itemPadValue","itemMValue","offcanvasString","popupContainer","createElement","appendPopup","customContainer","containerIsBody","isNode","lookup","BODY","removePopup","hasPopup","backdropString","modalBackdropClass","offcanvasBackdropClass","modalActiveSelector","offcanvasActiveSelector","overlay","getCurrentOpen","toggleOverlayType","isModal","targetClass","appendOverlay","hasFade","showOverlay","hideOverlay","removeOverlay","isVisible","modalSelector","modalToggleSelector","modalDismissSelector","modalStaticClass","modalDefaults","getModalInstance","modalInitCallback","Modal","showModalEvent","shownModalEvent","hideModalEvent","hiddenModalEvent","setModalScrollbar","scrollbarWidth","scrollHeight","modalHeight","modalScrollHeight","modalOverflow","pad","padStyle","toggleModalDismiss","update","modalDismissHandler","modalKeyHandler","toggleModalHandler","modalClickHandler","afterModalHide","callback","relatedTarget","focusElement","isFunction","afterModalShow","beforeModalShow","removeAttribute","ariaHidden","ariaModal","beforeModalHide","isStatic","modalDialog","backdrop","selectedText","targetInsideDialog","staticTransitionEnd","duration","overlayDelay","currentOpen","offcanvasSelector","offcanvasToggleSelector","offcanvasDismissSelector","offcanvasTogglingClass","offcanvasDefaults","getOffcanvasInstance","offcanvasInitCallback","Offcanvas","showOffcanvasEvent","shownOffcanvasEvent","hideOffcanvasEvent","hiddenOffcanvasEvent","setOffCanvasScrollbar","toggleOffcanvasEvents","offcanvasTriggerHandler","toggleOffCanvasDismiss","offcanvasKeyDismissHandler","offcanvasDismissHandler","beforeOffcanvasShow","showOffcanvasComplete","beforeOffcanvasHide","hideOffcanvasComplete","offCanvasDismiss","selection","visibleTrigger","popoverString","popoverComponent","tooltipString","getTipTemplate","tipType","isTooltip","bodyClass","header","body","tipClassPositions","styleTip","tipClasses","tooltip","container","tipPositions","isPopover","tipWidth","tipHeight","htmlcw","htmlch","htmlow","placement","parentCWidth","parentOWidth","fixedParent","leftBoundry","rightBoundry","elemWidth","elemHeight","elemRectLeft","elemRectRight","elemRectTop","topPosition","bottomPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","horizontals","verticals","updatedTooltipEvent","toLowerCase","tooltipDefaults","dataOriginalTitle","tooltipComponent","setHtml","content","sanitizeFn","dirty","tempDocument","isNodeList","isArray","createTip","id","title","template","animation","customClass","dismissible","btnClose","tipString","titleParts","contentParts","placementClass","tooltipTemplate","htmlMarkup","tooltipHeader","tooltipBody","tempTitle","tempContent","tempBtn","getElementContainer","majorBlockTags","containers","parentNode","getParentNode","isShadowRoot","isTableElement","tooltipSelector","titleAttr","getTooltipInstance","tooltipInitCallback","Tooltip","removeTooltip","offsetParent","ariaDescribedBy","disposeTooltipComplete","toggleTooltipHandlers","toggleTooltipTitle","toggleTooltipAction","tooltipShownAction","shownTooltipEvent","tooltipHiddenAction","onHideComplete","hiddenTooltipEvent","tr","mousehoverEvent","mousedownEvent","focusinEvent","focusoutEvent","isApple","toggleTooltipOpenHandlers","offsetHeight","parentModal","parentOffcanvas","win","scrollTarget","titleAtt","delay","hideTooltipEvent","tipComponent","elem","getUID","position","outTimer","tipContainer","showTooltipEvent","enabled","popoverSelector","popoverDefaults","getPopoverInstance","popoverInitCallback","Popover","scrollspyString","scrollspyComponent","scrollspySelector","scrollspyDefaults","getScrollSpyInstance","scrollspyInitCallback","ScrollSpy","activateScrollSpy","updateSpyTargets","itemsLength","isWin","isWindow","links","getElementsByTagName","scrollHEIGHT","getScrollHeight","href","targetItem","rect","getOffsetHeight","link","clear","item","activate","parents","parentItem","menuItem","parentLink","toggleSpyHandlers","scrollTop","maxScroll","items","newActiveItem","offsets","tabString","tabComponent","tabSelector","getTabInstance","tabInitCallback","Tab","showTabEvent","shownTabEvent","hideTabEvent","hiddenTabEvent","tabPrivate","triggerTabEnd","tabContent","nav","triggerTabShow","nextContent","tab","currentHeight","nextHeight","triggerTabHide","getActiveTab","activeTabs","getParentDropdown","dropdown","toggleTabHandler","tabClickHandler","firstTab","firstTabContent","ariaSelected","activeDropdown","toggleTab","toastString","toastComponent","toastSelector","toastDismissSelector","toastToggleSelector","showingClass","hideClass","toastDefaults","getToastInstance","toastInitCallback","Toast","showToastEvent","shownToastEvent","hideToastEvent","hiddenToastEvent","showToastComplete","hideToastComplete","hideToast","showToast","toggleToastHandlers","hide","interactiveToastHandler","toastClickHandler","completeDisposeToast","isShown","componentsList","initComponentDataAPI","collection","removeComponentDataAPI","component","context","compData","instance","initCallback","lookUp","elemCollection","cs","init","selector","matches","removeDataAPI","comp"],"mappings":"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"}