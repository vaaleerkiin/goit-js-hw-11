{"version":3,"file":"bootstrap-native.mjs","sources":["../node_modules/@thednp/event-listener/dist/event-listener.cjs","../node_modules/@thednp/shorty/dist/shorty.cjs","../src/strings/fadeClass.ts","../src/strings/showClass.ts","../src/strings/dataBsDismiss.ts","../src/strings/alertString.ts","../src/strings/alertComponent.ts","../src/version.ts","../src/components/base-component.ts","../src/components/alert.ts","../src/strings/activeClass.ts","../src/strings/dataBsToggle.ts","../src/strings/buttonString.ts","../src/strings/buttonComponent.ts","../src/components/button.ts","../src/strings/dataBsTarget.ts","../src/strings/carouselString.ts","../src/strings/carouselComponent.ts","../src/strings/dataBsParent.ts","../src/strings/dataBsContainer.ts","../src/util/getTargetElement.ts","../src/components/carousel.ts","../src/strings/collapsingClass.ts","../src/strings/collapseString.ts","../src/strings/collapseComponent.ts","../src/components/collapse.ts","../src/strings/dropdownClasses.ts","../src/strings/dropdownComponent.ts","../src/strings/dropdownMenuClass.ts","../src/util/isEmptyAnchor.ts","../src/components/dropdown.ts","../src/strings/modalString.ts","../src/strings/modalComponent.ts","../src/strings/offcanvasComponent.ts","../src/strings/fixedTopClass.ts","../src/strings/fixedBottomClass.ts","../src/strings/stickyTopClass.ts","../src/strings/positionStickyClass.ts","../src/util/scrollbar.ts","../src/strings/offcanvasString.ts","../src/util/popupContainer.ts","../src/util/backdrop.ts","../src/util/isVisible.ts","../src/components/modal.ts","../src/components/offcanvas.ts","../src/strings/popoverString.ts","../src/strings/popoverComponent.ts","../src/strings/tooltipString.ts","../src/util/getTipTemplate.ts","../src/util/tipClassPositions.ts","../src/util/styleTip.ts","../src/util/tooltipDefaults.ts","../src/strings/dataOriginalTitle.ts","../src/strings/tooltipComponent.ts","../src/util/setHtml.ts","../src/util/createTip.ts","../src/util/getElementContainer.ts","../src/components/tooltip.ts","../src/components/popover.ts","../src/strings/scrollspyString.ts","../src/strings/scrollspyComponent.ts","../src/components/scrollspy.ts","../src/strings/tabString.ts","../src/strings/tabComponent.ts","../src/components/tab.ts","../src/strings/toastString.ts","../src/strings/toastComponent.ts","../src/components/toast.ts","../src/util/init.ts"],"sourcesContent":["\"use strict\";Object.defineProperty(exports,Symbol.toStringTag,{value:\"Module\"});const r={},a=s=>{const{type:e,currentTarget:c}=s;[...r[e]].forEach(([n,o])=>{c===n&&[...o].forEach(([t,i])=>{t.apply(n,[s]),typeof i==\"object\"&&i.once&&f(n,e,t,i)})})},d=(s,e,c,n)=>{r[e]||(r[e]=new Map);const o=r[e];o.has(s)||o.set(s,new Map);const t=o.get(s),{size:i}=t;t.set(c,n),i||s.addEventListener(e,a,n)},f=(s,e,c,n)=>{const o=r[e],t=o&&o.get(s),i=t&&t.get(c),g=i!==void 0?i:n;t&&t.has(c)&&t.delete(c),o&&(!t||!t.size)&&o.delete(s),(!o||!o.size)&&delete r[e],(!t||!t.size)&&s.removeEventListener(e,a,g)},E=d,L=f;exports.addListener=d;exports.globalListener=a;exports.off=L;exports.on=E;exports.registry=r;exports.removeListener=f;\n//# sourceMappingURL=event-listener.cjs.map\n","\"use strict\";Object.defineProperty(exports,Symbol.toStringTag,{value:\"Module\"});const lt=\"aria-checked\",dt=\"aria-description\",mt=\"aria-describedby\",Et=\"aria-expanded\",vt=\"aria-haspopup\",pt=\"aria-hidden\",gt=\"aria-label\",ft=\"aria-labelledby\",bt=\"aria-modal\",yt=\"aria-pressed\",ht=\"aria-selected\",At=\"aria-valuemin\",wt=\"aria-valuemax\",kt=\"aria-valuenow\",St=\"aria-valuetext\",Q=\"abort\",q=\"beforeunload\",G=\"blur\",K=\"change\",J=\"contextmenu\",x=\"DOMContentLoaded\",X=\"DOMMouseScroll\",Y=\"error\",Z=\"focus\",$=\"focusin\",_=\"focusout\",ee=\"gesturechange\",te=\"gestureend\",ne=\"gesturestart\",oe=\"keydown\",se=\"keypress\",re=\"keyup\",ae=\"load\",ce=\"click\",ie=\"dblclick\",ue=\"mousedown\",le=\"mouseup\",de=\"hover\",me=\"mouseenter\",Ee=\"mouseleave\",ve=\"mousein\",pe=\"mouseout\",ge=\"mouseover\",fe=\"mousemove\",be=\"mousewheel\",ye=\"move\",he=\"orientationchange\",Ae=\"pointercancel\",we=\"pointerdown\",ke=\"pointerleave\",Se=\"pointermove\",De=\"pointerup\",Me=\"readystatechange\",Ne=\"reset\",Te=\"resize\",Ce=\"select\",Le=\"selectend\",Oe=\"selectstart\",Ie=\"scroll\",ze=\"submit\",xe=\"touchstart\",He=\"touchmove\",Be=\"touchcancel\",Ve=\"touchend\",Pe=\"unload\",Dt={DOMContentLoaded:x,DOMMouseScroll:X,abort:Q,beforeunload:q,blur:G,change:K,click:ce,contextmenu:J,dblclick:ie,error:Y,focus:Z,focusin:$,focusout:_,gesturechange:ee,gestureend:te,gesturestart:ne,hover:de,keydown:oe,keypress:se,keyup:re,load:ae,mousedown:ue,mousemove:fe,mousein:ve,mouseout:pe,mouseenter:me,mouseleave:Ee,mouseover:ge,mouseup:le,mousewheel:be,move:ye,orientationchange:he,pointercancel:Ae,pointerdown:we,pointerleave:ke,pointermove:Se,pointerup:De,readystatechange:Me,reset:Ne,resize:Te,scroll:Ie,select:Ce,selectend:Le,selectstart:Oe,submit:ze,touchcancel:Be,touchend:Ve,touchmove:He,touchstart:xe,unload:Pe},Mt=\"drag\",Nt=\"dragstart\",Tt=\"dragenter\",Ct=\"dragleave\",Lt=\"dragover\",Ot=\"dragend\",It=\"loadstart\",zt={start:\"mousedown\",end:\"mouseup\",move:\"mousemove\",cancel:\"mouseleave\"},xt={down:\"mousedown\",up:\"mouseup\"},Ht=\"onmouseleave\"in document?[\"mouseenter\",\"mouseleave\"]:[\"mouseover\",\"mouseout\"],Bt={start:\"touchstart\",end:\"touchend\",move:\"touchmove\",cancel:\"touchcancel\"},Vt={in:\"focusin\",out:\"focusout\"},Pt={Backspace:\"Backspace\",Tab:\"Tab\",Enter:\"Enter\",Shift:\"Shift\",Control:\"Control\",Alt:\"Alt\",Pause:\"Pause\",CapsLock:\"CapsLock\",Escape:\"Escape\",Scape:\"Space\",ArrowLeft:\"ArrowLeft\",ArrowUp:\"ArrowUp\",ArrowRight:\"ArrowRight\",ArrowDown:\"ArrowDown\",Insert:\"Insert\",Delete:\"Delete\",Meta:\"Meta\",ContextMenu:\"ContextMenu\",ScrollLock:\"ScrollLock\"},Ft=\"Alt\",Rt=\"ArrowDown\",Wt=\"ArrowUp\",Ut=\"ArrowLeft\",jt=\"ArrowRight\",Qt=\"Backspace\",qt=\"CapsLock\",Gt=\"Control\",Kt=\"Delete\",Jt=\"Enter\",Xt=\"Escape\",Yt=\"Insert\",Zt=\"Meta\",$t=\"Pause\",_t=\"ScrollLock\",en=\"Shift\",tn=\"Space\",nn=\"Tab\",Fe=\"animationDuration\",Re=\"animationDelay\",H=\"animationName\",T=\"animationend\",We=\"transitionDuration\",Ue=\"transitionDelay\",C=\"transitionend\",B=\"transitionProperty\",on=\"addEventListener\",sn=\"removeEventListener\",rn={linear:\"linear\",easingSinusoidalIn:\"cubic-bezier(0.47,0,0.745,0.715)\",easingSinusoidalOut:\"cubic-bezier(0.39,0.575,0.565,1)\",easingSinusoidalInOut:\"cubic-bezier(0.445,0.05,0.55,0.95)\",easingQuadraticIn:\"cubic-bezier(0.550,0.085,0.680,0.530)\",easingQuadraticOut:\"cubic-bezier(0.250,0.460,0.450,0.940)\",easingQuadraticInOut:\"cubic-bezier(0.455,0.030,0.515,0.955)\",easingCubicIn:\"cubic-bezier(0.55,0.055,0.675,0.19)\",easingCubicOut:\"cubic-bezier(0.215,0.61,0.355,1)\",easingCubicInOut:\"cubic-bezier(0.645,0.045,0.355,1)\",easingQuarticIn:\"cubic-bezier(0.895,0.03,0.685,0.22)\",easingQuarticOut:\"cubic-bezier(0.165,0.84,0.44,1)\",easingQuarticInOut:\"cubic-bezier(0.77,0,0.175,1)\",easingQuinticIn:\"cubic-bezier(0.755,0.05,0.855,0.06)\",easingQuinticOut:\"cubic-bezier(0.23,1,0.32,1)\",easingQuinticInOut:\"cubic-bezier(0.86,0,0.07,1)\",easingExponentialIn:\"cubic-bezier(0.95,0.05,0.795,0.035)\",easingExponentialOut:\"cubic-bezier(0.19,1,0.22,1)\",easingExponentialInOut:\"cubic-bezier(1,0,0,1)\",easingCircularIn:\"cubic-bezier(0.6,0.04,0.98,0.335)\",easingCircularOut:\"cubic-bezier(0.075,0.82,0.165,1)\",easingCircularInOut:\"cubic-bezier(0.785,0.135,0.15,0.86)\",easingBackIn:\"cubic-bezier(0.6,-0.28,0.735,0.045)\",easingBackOut:\"cubic-bezier(0.175,0.885,0.32,1.275)\",easingBackInOut:\"cubic-bezier(0.68,-0.55,0.265,1.55)\"},an=\"offsetHeight\",cn=\"offsetWidth\",un=\"scrollHeight\",ln=\"scrollWidth\",dn=\"tabindex\",mn=navigator.userAgentData,A=mn,{userAgent:En}=navigator,w=En,R=/iPhone|iPad|iPod|Android/i;let I=!1;A?I=A.brands.some(e=>R.test(e.brand)):I=R.test(w);const vn=I,W=/(iPhone|iPod|iPad)/,pn=A?A.brands.some(e=>W.test(e.brand)):W.test(w),gn=w?w.includes(\"Firefox\"):!1,{head:k}=document,fn=[\"webkitPerspective\",\"perspective\"].some(e=>e in k.style),je=(e,t,n,o)=>{const s=o||!1;e.addEventListener(t,n,s)},Qe=(e,t,n,o)=>{const s=o||!1;e.removeEventListener(t,n,s)},qe=(e,t,n,o)=>{const s=a=>{(a.target===e||a.currentTarget===e)&&(n.apply(e,[a]),Qe(e,t,s,o))};je(e,t,s,o)},Ge=()=>{},bn=(()=>{let e=!1;try{const t=Object.defineProperty({},\"passive\",{get:()=>(e=!0,e)});qe(document,x,Ge,t)}catch{}return e})(),yn=[\"webkitTransform\",\"transform\"].some(e=>e in k.style),hn=\"ontouchstart\"in window||\"msMaxTouchPoints\"in navigator,An=[\"webkitAnimation\",\"animation\"].some(e=>e in k.style),wn=[\"webkitTransition\",\"transition\"].some(e=>e in k.style),Ke=(e,t)=>e.getAttribute(t),kn=(e,t,n)=>t.getAttributeNS(e,n),Sn=(e,t)=>e.hasAttribute(t),Dn=(e,t,n)=>t.hasAttributeNS(e,n),Mn=(e,t,n)=>e.setAttribute(t,n),Nn=(e,t,n,o)=>t.setAttributeNS(e,n,o),Tn=(e,t)=>e.removeAttribute(t),Cn=(e,t,n)=>t.removeAttributeNS(e,n),Ln=(e,...t)=>{e.classList.add(...t)},On=(e,...t)=>{e.classList.remove(...t)},In=(e,t)=>e.classList.contains(t),{body:zn}=document,{documentElement:xn}=document,Hn=e=>Array.from(e),E=e=>e!=null&&typeof e==\"object\"||!1,c=e=>E(e)&&typeof e.nodeType==\"number\"&&[1,2,3,4,5,6,7,8,9,10,11].some(t=>e.nodeType===t)||!1,u=e=>c(e)&&e.nodeType===1||!1,y=new Map,L={set:(e,t,n)=>{if(!u(e))return;y.has(t)||y.set(t,new Map),y.get(t).set(e,n)},getAllFor:e=>y.get(e)||null,get:(e,t)=>{if(!u(e)||!t)return null;const n=L.getAllFor(t);return e&&n&&n.get(e)||null},remove:(e,t)=>{const n=L.getAllFor(t);!n||!u(e)||(n.delete(e),n.size===0&&y.delete(t))}},Bn=(e,t)=>L.get(e,t),S=e=>typeof e==\"string\"||!1,V=e=>E(e)&&e.constructor.name===\"Window\"||!1,P=e=>c(e)&&e.nodeType===9||!1,d=e=>V(e)?e.document:P(e)?e:c(e)?e.ownerDocument:window.document,D=(e,...t)=>Object.assign(e,...t),Je=e=>{if(!e)return;if(S(e))return d().createElement(e);const{tagName:t}=e,n=Je(t);if(!n)return;const o={...e};return delete o.tagName,D(n,o)},Xe=(e,t)=>{if(!e||!t)return;if(S(t))return d().createElementNS(e,t);const{tagName:n}=t,o=Xe(e,n);if(!o)return;const s={...t};return delete s.tagName,D(o,s)},F=(e,t)=>e.dispatchEvent(t),Vn=(e,t,n)=>n.indexOf(e)===t,m=(e,t)=>{const n=getComputedStyle(e),o=t.replace(\"webkit\",\"Webkit\").replace(/([A-Z])/g,\"-$1\").toLowerCase();return n.getPropertyValue(o)},Ye=e=>{const t=m(e,H),n=m(e,Re),o=n.includes(\"ms\")?1:1e3,s=t&&t!==\"none\"?parseFloat(n)*o:0;return Number.isNaN(s)?0:s},Ze=e=>{const t=m(e,H),n=m(e,Fe),o=n.includes(\"ms\")?1:1e3,s=t&&t!==\"none\"?parseFloat(n)*o:0;return Number.isNaN(s)?0:s},Pn=(e,t)=>{let n=0;const o=new Event(T),s=Ze(e),a=Ye(e);if(s){const i=l=>{l.target===e&&(t.apply(e,[l]),e.removeEventListener(T,i),n=1)};e.addEventListener(T,i),setTimeout(()=>{n||F(e,o)},s+a+17)}else t.apply(e,[o])},$e=e=>{const t=m(e,B),n=m(e,Ue),o=n.includes(\"ms\")?1:1e3,s=t&&t!==\"none\"?parseFloat(n)*o:0;return Number.isNaN(s)?0:s},_e=e=>{const t=m(e,B),n=m(e,We),o=n.includes(\"ms\")?1:1e3,s=t&&t!==\"none\"?parseFloat(n)*o:0;return Number.isNaN(s)?0:s},Fn=(e,t)=>{let n=0;const o=new Event(C),s=_e(e),a=$e(e);if(s){const i=l=>{l.target===e&&(t.apply(e,[l]),e.removeEventListener(C,i),n=1)};e.addEventListener(C,i),setTimeout(()=>{n||F(e,o)},s+a+17)}else t.apply(e,[o])},Rn=e=>Float32Array.from(Array.from(e)),Wn=e=>Float64Array.from(Array.from(e)),Un=(e,t)=>e.focus(t),z=e=>[\"true\",!0].includes(e)?!0:[\"false\",!1].includes(e)?!1:[\"null\",\"\",null,void 0].includes(e)?null:e!==\"\"&&!Number.isNaN(+e)?+e:e,h=e=>Object.entries(e),et=e=>e.toLowerCase(),jn=(e,t,n,o)=>{const s={...n},a={...e.dataset},i={...t},l={},v=\"title\";return h(a).forEach(([r,p])=>{const N=o&&typeof r==\"string\"&&r.includes(o)?r.replace(o,\"\").replace(/[A-Z]/g,ut=>et(ut)):r;l[N]=z(p)}),h(s).forEach(([r,p])=>{s[r]=z(p)}),h(t).forEach(([r,p])=>{r in s?i[r]=s[r]:r in l?i[r]=l[r]:i[r]=r===v?Ke(e,v):p}),i},Qn=(e,t)=>E(e)&&(Object.hasOwn(e,t)||t in e),qn=e=>Object.keys(e),Gn=e=>Object.values(e),Kn=(e,t)=>{const n=new CustomEvent(e,{cancelable:!0,bubbles:!0});return E(t)&&D(n,t),n},Jn={passive:!0},Xn=e=>e.offsetHeight,Yn=(e,t)=>{h(t).forEach(([n,o])=>{if(o&&S(n)&&n.includes(\"--\"))e.style.setProperty(n,o);else{const s={};s[n]=o,D(e.style,s)}})},O=e=>E(e)&&e.constructor.name===\"Map\"||!1,tt=e=>typeof e==\"number\"||!1,g=new Map,Zn={set:(e,t,n,o)=>{u(e)&&(o&&o.length?(g.has(e)||g.set(e,new Map),g.get(e).set(o,setTimeout(t,n))):g.set(e,setTimeout(t,n)))},get:(e,t)=>{if(!u(e))return null;const n=g.get(e);return t&&n&&O(n)?n.get(t)||null:tt(n)?n:null},clear:(e,t)=>{if(!u(e))return;const n=g.get(e);t&&t.length&&O(n)?(clearTimeout(n.get(t)),n.delete(t),n.size===0&&g.delete(e)):(clearTimeout(n),g.delete(e))}},$n=e=>e.toUpperCase(),b=(e,t)=>{const{width:n,height:o,top:s,right:a,bottom:i,left:l}=e.getBoundingClientRect();let v=1,r=1;if(t&&u(e)){const{offsetWidth:p,offsetHeight:N}=e;v=p>0?Math.round(n)/p:1,r=N>0?Math.round(o)/N:1}return{width:n/v,height:o/r,top:s/r,right:a/v,bottom:i/r,left:l/v,x:l/v,y:s/r}},_n=e=>d(e).body,M=e=>d(e).documentElement,eo=e=>d(e).head,to=e=>{const t=V(e),n=t?e.scrollX:e.scrollLeft,o=t?e.scrollY:e.scrollTop;return{x:n,y:o}},nt=e=>c(e)&&e.constructor.name===\"ShadowRoot\"||!1,no=e=>e.nodeName===\"HTML\"?e:u(e)&&e.assignedSlot||c(e)&&e.parentNode||nt(e)&&e.host||M(e),ot=e=>{if(!u(e))return!1;const{width:t,height:n}=b(e),{offsetWidth:o,offsetHeight:s}=e;return Math.round(t)!==o||Math.round(n)!==s},oo=(e,t,n)=>{const o=u(t),s=b(e,o&&ot(t)),a={x:0,y:0};if(o){const i=b(t,!0);a.x=i.x+t.clientLeft,a.y=i.y+t.clientTop}return{x:s.left+n.x-a.x,y:s.top+n.y-a.y,width:s.width,height:s.height}};let U=0,j=0;const f=new Map,st=(e,t)=>{let n=t?U:j;if(t){const o=st(e),s=f.get(o)||new Map;f.has(o)||f.set(o,s),O(s)&&!s.has(t)?(s.set(t,n),U+=1):n=s.get(t)}else{const o=e.id||e;f.has(o)?n=f.get(o):(f.set(o,n),j+=1)}return n},so=e=>e?P(e)?e.defaultView:c(e)?e?.ownerDocument?.defaultView:e:window,rt=e=>Array.isArray(e)||!1,ro=e=>c(e)&&e.nodeName===\"CANVAS\"||!1,at=e=>u(e)&&!!e.shadowRoot||!1,ao=e=>c(e)&&[1,2,3,4,5,6,7,8].some(t=>e.nodeType===t)||!1,co=e=>{if(!c(e))return!1;const{top:t,bottom:n}=b(e),{clientHeight:o}=M(e);return t<=o&&n>=0},io=e=>{if(!c(e))return!1;const{clientWidth:t,clientHeight:n}=M(e),{top:o,left:s,bottom:a,right:i}=b(e,!0);return o>=0&&s>=0&&a<=n&&i<=t},uo=e=>rt(e)&&e.every(u)||!1,lo=e=>typeof e==\"function\"||!1,mo=e=>E(e)&&e.constructor.name===\"HTMLCollection\"||!1,Eo=e=>u(e)&&e.tagName===\"IMG\"||!1,vo=e=>{if(!S(e))return!1;try{JSON.parse(e)}catch{return!1}return!0},po=e=>E(e)&&e.constructor.name===\"WeakMap\"||!1,go=e=>c(e)&&[\"SVG\",\"Image\",\"Video\",\"Canvas\"].some(t=>e.constructor.name.includes(t))||!1,fo=e=>E(e)&&e.constructor.name===\"NodeList\"||!1,bo=e=>M(e).dir===\"rtl\",yo=e=>c(e)&&e.constructor.name.includes(\"SVG\")||!1,ho=e=>c(e)&&[\"TABLE\",\"TD\",\"TH\"].includes(e.nodeName)||!1,ct=(e,t)=>e?e.closest(t)||ct(e.getRootNode().host,t):null,Ao=(e,t)=>u(e)?e:(c(t)?t:d()).querySelector(e),it=(e,t)=>(c(t)?t:d()).getElementsByTagName(e),wo=e=>[...it(\"*\",e)].filter(at),ko=(e,t)=>d(t).getElementById(e)||null,So=(e,t)=>(c(t)?t:d()).querySelectorAll(e),Do=(e,t)=>(t&&c(t)?t:d()).getElementsByClassName(e),Mo=(e,t)=>e.matches(t),No=\"2.0.0alpha12\";exports.ArrayFrom=Hn;exports.DOMContentLoadedEvent=x;exports.DOMMouseScrollEvent=X;exports.Data=L;exports.Float32ArrayFrom=Rn;exports.Float64ArrayFrom=Wn;exports.ObjectAssign=D;exports.ObjectEntries=h;exports.ObjectHasOwn=Qn;exports.ObjectKeys=qn;exports.ObjectValues=Gn;exports.Timer=Zn;exports.abortEvent=Q;exports.addClass=Ln;exports.addEventListener=on;exports.animationDelay=Re;exports.animationDuration=Fe;exports.animationEndEvent=T;exports.animationName=H;exports.ariaChecked=lt;exports.ariaDescribedBy=mt;exports.ariaDescription=dt;exports.ariaExpanded=Et;exports.ariaHasPopup=vt;exports.ariaHidden=pt;exports.ariaLabel=gt;exports.ariaLabelledBy=ft;exports.ariaModal=bt;exports.ariaPressed=yt;exports.ariaSelected=ht;exports.ariaValueMax=wt;exports.ariaValueMin=At;exports.ariaValueNow=kt;exports.ariaValueText=St;exports.beforeunloadEvent=q;exports.bezierEasings=rn;exports.blurEvent=G;exports.changeEvent=K;exports.closest=ct;exports.contextmenuEvent=J;exports.createCustomEvent=Kn;exports.createElement=Je;exports.createElementNS=Xe;exports.dispatchEvent=F;exports.distinct=Vn;exports.documentBody=zn;exports.documentElement=xn;exports.documentHead=k;exports.dragEvent=Mt;exports.dragendEvent=Ot;exports.dragenterEvent=Tt;exports.dragleaveEvent=Ct;exports.dragoverEvent=Lt;exports.dragstartEvent=Nt;exports.emulateAnimationEnd=Pn;exports.emulateTransitionEnd=Fn;exports.errorEvent=Y;exports.focus=Un;exports.focusEvent=Z;exports.focusEvents=Vt;exports.focusinEvent=$;exports.focusoutEvent=_;exports.gesturechangeEvent=ee;exports.gestureendEvent=te;exports.gesturestartEvent=ne;exports.getAttribute=Ke;exports.getAttributeNS=kn;exports.getBoundingClientRect=b;exports.getCustomElements=wo;exports.getDocument=d;exports.getDocumentBody=_n;exports.getDocumentElement=M;exports.getDocumentHead=eo;exports.getElementAnimationDelay=Ye;exports.getElementAnimationDuration=Ze;exports.getElementById=ko;exports.getElementStyle=m;exports.getElementTransitionDelay=$e;exports.getElementTransitionDuration=_e;exports.getElementsByClassName=Do;exports.getElementsByTagName=it;exports.getInstance=Bn;exports.getNodeScroll=to;exports.getParentNode=no;exports.getRectRelativeToOffsetParent=oo;exports.getUID=st;exports.getWindow=so;exports.hasAttribute=Sn;exports.hasAttributeNS=Dn;exports.hasClass=In;exports.isApple=pn;exports.isArray=rt;exports.isCanvas=ro;exports.isCustomElement=at;exports.isDocument=P;exports.isElement=ao;exports.isElementInScrollRange=co;exports.isElementInViewport=io;exports.isElementsArray=uo;exports.isFirefox=gn;exports.isFunction=lo;exports.isHTMLCollection=mo;exports.isHTMLElement=u;exports.isHTMLImageElement=Eo;exports.isJSON=vo;exports.isMap=O;exports.isMedia=go;exports.isMobile=vn;exports.isNode=c;exports.isNodeList=fo;exports.isNumber=tt;exports.isObject=E;exports.isRTL=bo;exports.isSVGElement=yo;exports.isScaledElement=ot;exports.isShadowRoot=nt;exports.isString=S;exports.isTableElement=ho;exports.isWeakMap=po;exports.isWindow=V;exports.keyAlt=Ft;exports.keyArrowDown=Rt;exports.keyArrowLeft=Ut;exports.keyArrowRight=jt;exports.keyArrowUp=Wt;exports.keyBackspace=Qt;exports.keyCapsLock=qt;exports.keyControl=Gt;exports.keyDelete=Kt;exports.keyEnter=Jt;exports.keyEscape=Xt;exports.keyInsert=Yt;exports.keyMeta=Zt;exports.keyPause=$t;exports.keyScrollLock=_t;exports.keyShift=en;exports.keySpace=tn;exports.keyTab=nn;exports.keyboardEventKeys=Pt;exports.keydownEvent=oe;exports.keypressEvent=se;exports.keyupEvent=re;exports.loadEvent=ae;exports.loadstartEvent=It;exports.matches=Mo;exports.mouseClickEvents=xt;exports.mouseHoverEvents=Ht;exports.mouseSwipeEvents=zt;exports.mouseclickEvent=ce;exports.mousedblclickEvent=ie;exports.mousedownEvent=ue;exports.mouseenterEvent=me;exports.mousehoverEvent=de;exports.mouseinEvent=ve;exports.mouseleaveEvent=Ee;exports.mousemoveEvent=fe;exports.mouseoutEvent=pe;exports.mouseoverEvent=ge;exports.mouseupEvent=le;exports.mousewheelEvent=be;exports.moveEvent=ye;exports.nativeEvents=Dt;exports.noop=Ge;exports.normalizeOptions=jn;exports.normalizeValue=z;exports.off=Qe;exports.offsetHeight=an;exports.offsetWidth=cn;exports.on=je;exports.one=qe;exports.orientationchangeEvent=he;exports.passiveHandler=Jn;exports.pointercancelEvent=Ae;exports.pointerdownEvent=we;exports.pointerleaveEvent=ke;exports.pointermoveEvent=Se;exports.pointerupEvent=De;exports.querySelector=Ao;exports.querySelectorAll=So;exports.readystatechangeEvent=Me;exports.reflow=Xn;exports.removeAttribute=Tn;exports.removeAttributeNS=Cn;exports.removeClass=On;exports.removeEventListener=sn;exports.resetEvent=Ne;exports.resizeEvent=Te;exports.scrollEvent=Ie;exports.scrollHeight=un;exports.scrollWidth=ln;exports.selectEvent=Ce;exports.selectendEvent=Le;exports.selectstartEvent=Oe;exports.setAttribute=Mn;exports.setAttributeNS=Nn;exports.setElementStyle=Yn;exports.submitEvent=ze;exports.support3DTransform=fn;exports.supportAnimation=An;exports.supportPassive=bn;exports.supportTouch=hn;exports.supportTransform=yn;exports.supportTransition=wn;exports.tabindex=dn;exports.toLowerCase=et;exports.toUpperCase=$n;exports.touchEvents=Bt;exports.touchcancelEvent=Be;exports.touchendEvent=Ve;exports.touchmoveEvent=He;exports.touchstartEvent=xe;exports.transitionDelay=Ue;exports.transitionDuration=We;exports.transitionEndEvent=C;exports.transitionProperty=B;exports.unloadEvent=Pe;exports.userAgent=w;exports.userAgentData=A;exports.version=No;\n//# sourceMappingURL=shorty.cjs.map\n","/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = 'fade';\nexport default fadeClass;\n","/**\n * Global namespace for most components `show` class.\n */\nconst showClass = 'show';\nexport default showClass;\n","/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = 'data-bs-dismiss';\nexport default dataBsDismiss;\n","/** @type {string} */\nconst alertString = 'alert';\nexport default alertString;\n","/** @type {string} */\nconst alertComponent = 'Alert';\nexport default alertComponent;\n","import { version } from '../package.json';\n\nconst Version = version;\n\nexport default Version;\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport { querySelector, normalizeOptions, Data, ObjectKeys, isString } from '@thednp/shorty';\n\nimport type { BaseOptions } from '../interface/baseComponent';\nimport Version from '../version';\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  element: HTMLElement;\n  options?: BaseOptions;\n\n  /**\n   * @param target `HTMLElement` or selector string\n   * @param config component instance options\n   */\n  constructor(target: HTMLElement | string, config?: BaseOptions) {\n    const element = querySelector(target);\n\n    if (!element) {\n      if (isString(target)) {\n        throw Error(`${this.name} Error: \"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`${this.name} Error: your target is not an instance of HTMLElement.`);\n      }\n    }\n\n    const prevInstance = Data.get<this>(element, this.name);\n    if (prevInstance) prevInstance.dispose();\n\n    this.element = element;\n\n    /* istanbul ignore else */\n    if (this.defaults && ObjectKeys(this.defaults).length) {\n      this.options = normalizeOptions(element, this.defaults, config || {}, 'bs');\n    }\n\n    Data.set(element, this.name, this);\n  }\n\n  /* istanbul ignore next */\n  get version() {\n    return Version;\n  }\n\n  /* istanbul ignore next */\n  get name() {\n    return 'BaseComponent';\n  }\n\n  /* istanbul ignore next */\n  get defaults() {\n    return {};\n  }\n\n  /**\n   * Removes component from target element;\n   */\n  dispose() {\n    Data.remove(this.element, this.name);\n    ObjectKeys(this).forEach(prop => {\n      delete this[prop];\n    });\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\nimport {\n  emulateTransitionEnd,\n  mouseclickEvent,\n  getInstance,\n  querySelector,\n  // closest,\n  // ObjectAssign,\n  hasClass,\n  removeClass,\n  dispatchEvent,\n  createCustomEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport alertString from '../strings/alertString';\nimport alertComponent from '../strings/alertComponent';\nimport type { AlertEvent } from '../interface/alert';\n\nimport BaseComponent from './base-component';\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n *\n */\nconst getAlertInstance = (element: HTMLElement) => getInstance<Alert>(element, alertComponent);\n\n/**\n * An `Alert` initialization callback.\n */\nconst alertInitCallback = <T>(element: HTMLElement) => new Alert(element) as T;\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = createCustomEvent<AlertEvent>(`close.bs.${alertString}`);\nconst closedAlertEvent = createCustomEvent<AlertEvent>(`closed.bs.${alertString}`);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n *\n * @param that target Alert instance\n */\nconst alertTransitionEnd = (that: Alert) => {\n  const { element } = that;\n  toggleAlertHandler(that);\n\n  dispatchEvent(element, closedAlertEvent);\n\n  that.dispose();\n  element.remove();\n};\n\n// ALERT PRIVATE METHOD\n// ====================\n/**\n * Toggle on / off the `click` event listener.\n *\n * @param that the target alert instance\n * @param add when `true`, event listener is added\n */\nconst toggleAlertHandler = (that: Alert, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { dismiss, close } = that;\n  /* istanbul ignore else */\n  if (dismiss) action(dismiss, mouseclickEvent, close);\n};\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nexport default class Alert extends BaseComponent {\n  static selector = alertSelector;\n  static init = alertInitCallback;\n  static getInstance = getAlertInstance;\n  dismiss: HTMLElement | null;\n\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // the dismiss button\n    this.dismiss = querySelector(alertDismissSelector, this.element);\n\n    // add event listener\n    toggleAlertHandler(this, true);\n  }\n\n  /** Returns component name string. */\n  get name() {\n    return alertComponent;\n  }\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   */\n  close = () => {\n    const { element } = this;\n\n    /* istanbul ignore else */\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n      if (closeAlertEvent.defaultPrevented) return;\n\n      removeClass(element, showClass);\n\n      if (hasClass(element, fadeClass)) {\n        emulateTransitionEnd(element, () => alertTransitionEnd(this));\n      } else alertTransitionEnd(this);\n    }\n  };\n\n  /** Remove the component from target element. */\n  dispose() {\n    toggleAlertHandler(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components active class.\n */\nconst activeClass = 'active';\nexport default activeClass;\n","/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = 'data-bs-toggle';\nexport default dataBsToggle;\n","/** @type {string} */\nconst buttonString = 'button';\nexport default buttonString;\n","/** @type {string} */\nconst buttonComponent = 'Button';\nexport default buttonComponent;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  getInstance,\n  removeClass,\n  hasClass,\n  addClass,\n  setAttribute,\n  mouseclickEvent,\n  ariaPressed,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport buttonString from '../strings/buttonString';\nimport buttonComponent from '../strings/buttonComponent';\n\nimport BaseComponent from './base-component';\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: HTMLElement) => getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: HTMLElement) => new Button(element);\n\n// BUTTON PRIVATE METHOD\n// =====================\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Button` instance\n * @param add when `true`, event listener is added\n */\nconst toggleButtonHandler = (self: Button, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, self.toggle);\n};\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  isActive = false;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    toggleButtonHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle = (e: Event) => {\n    if (e) e.preventDefault();\n\n    const { element, isActive } = this;\n    if (hasClass(element, 'disabled')) return;\n\n    const action = isActive ? removeClass : addClass;\n    action(element, activeClass);\n    setAttribute(element, ariaPressed, isActive ? 'false' : 'true');\n    this.isActive = hasClass(element, activeClass);\n  };\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    toggleButtonHandler(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = 'data-bs-target';\nexport default dataBsTarget;\n","/** @type {string} */\nconst carouselString = 'carousel';\nexport default carouselString;\n","/** @type {string} */\nconst carouselComponent = 'Carousel';\nexport default carouselComponent;\n","/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = 'data-bs-parent';\nexport default dataBsParent;\n","/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = 'data-bs-container';\nexport default dataBsContainer;\n","import { getDocument, getAttribute, closest, querySelector } from '@thednp/shorty';\n\nimport dataBsTarget from '../strings/dataBsTarget';\nimport dataBsParent from '../strings/dataBsParent';\nimport dataBsContainer from '../strings/dataBsContainer';\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst getTargetElement = (element: HTMLElement) => {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, 'href'];\n  const doc = getDocument(element);\n\n  return targetAttr\n    .map(att => {\n      const attValue = getAttribute(element, att);\n      if (attValue) {\n        return att === dataBsParent ? closest(element, attValue) : querySelector(attValue, doc);\n      }\n      return null;\n    })\n    .filter(x => x)[0];\n};\n\nexport default getTargetElement;\n","/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\nimport {\n  createCustomEvent,\n  getInstance,\n  dispatchEvent,\n  ObjectAssign,\n  emulateTransitionEnd,\n  passiveHandler,\n  reflow,\n  Timer,\n  getAttribute,\n  getElementsByClassName,\n  querySelectorAll,\n  querySelector,\n  closest,\n  isHTMLElement,\n  isRTL,\n  isElementInScrollRange,\n  getElementTransitionDuration,\n  getDocument,\n  pointerupEvent,\n  pointermoveEvent,\n  pointerdownEvent,\n  keyArrowRight,\n  keyArrowLeft,\n  keydownEvent,\n  mouseclickEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  touchstartEvent,\n  dragstartEvent,\n  addClass,\n  hasClass,\n  removeClass,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsTarget from '../strings/dataBsTarget';\nimport carouselString from '../strings/carouselString';\nimport carouselComponent from '../strings/carouselComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CarouselEvent, CarouselOptions } from '../interface/carousel';\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = 'data-bs-slide-to';\nconst dataBsSlide = 'data-bs-slide';\nconst pausedClass = 'paused';\n\nconst carouselDefaults: CarouselOptions = {\n  pause: 'hover',\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n */\nconst getCarouselInstance = (element: HTMLElement) => getInstance<Carousel>(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n */\nconst carouselInitCallback = (element: HTMLElement) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = createCustomEvent<CarouselEvent>(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = createCustomEvent<CarouselEvent>(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n *\n * @param self the `Carousel` instance\n */\nconst carouselTransitionEndHandler = (self: Carousel) => {\n  const { index, direction, element, slides, options } = self;\n\n  // discontinue disposed instances\n  /* istanbul ignore else */\n  if (self.isAnimating && getCarouselInstance(element)) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // check for element, might have been disposed\n    if (!getDocument(element).hidden && options.interval && !self.isPaused) {\n      self.cycle();\n    }\n  }\n};\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselPauseHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && !self.isPaused && !Timer.get(this, pausedClass)) {\n    addClass(this, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n *\n */\nfunction carouselResumeHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && self.isPaused && !Timer.get(this, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @param e the `Event` object\n */\nfunction carouselIndicatorHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  // const indicator = this;\n  const element = (closest(this, carouselSelector) || getTargetElement(this)) as HTMLElement;\n  const self = getCarouselInstance(element);\n\n  if (!self || self.isAnimating) return;\n\n  const newIndex = +(getAttribute(this, dataBsSlideTo) || /* istanbul ignore next */ 0);\n\n  if (\n    this &&\n    !hasClass(this, activeClass) && // event target is not active\n    !Number.isNaN(newIndex)\n  ) {\n    // AND has the specific attribute\n    self.to(newIndex); // do the slide\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @param e the `Event` object\n */\nfunction carouselControlsHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  // const control = this;\n  const element = closest(this, carouselSelector) || (getTargetElement(this) as HTMLElement);\n  const self = getCarouselInstance(element);\n\n  if (!self || self.isAnimating) return;\n  const orientation = getAttribute(this, dataBsSlide);\n\n  /* istanbul ignore else */\n  if (orientation === 'next') {\n    self.next();\n  } else if (orientation === 'prev') {\n    self.prev();\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param e the `Event` object\n */\nconst carouselKeyHandler = ({ code, target }: KeyboardEvent & { target: Node }) => {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll(carouselSelector, doc)].filter(x => isElementInScrollRange(x));\n  const self = getCarouselInstance(element);\n\n  /* istanbul ignore next */\n  if (!self || self.isAnimating || /textarea|input/i.test(target.nodeName)) return;\n  const RTL = isRTL(element);\n  const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n  const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n  /* istanbul ignore else */\n  if (code === arrowKeyPrev) self.prev();\n  else if (code === arrowKeyNext) self.next();\n};\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Prevents the `touchstart` and `dragstart` events for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselDragHandler(this: HTMLElement, e: DragEvent | TouchEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  /* istanbul ignore next */\n  if (\n    self &&\n    self.isTouch &&\n    ((self.indicator && !self.indicator.contains(target as Node)) || !self.controls.includes(target as HTMLElement))\n  ) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    e.preventDefault();\n  }\n}\n\n// CAROUSEL POINTER HANDLERS\n// =========================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselPointerDownHandler(this: HTMLElement, e: PointerEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  if (!self || self.isAnimating || self.isTouch) {\n    return;\n  }\n\n  // filter pointer event on controls & indicators\n  const { controls, indicators } = self;\n  if ([...controls, ...indicators].some(el => el === target || el.contains(target as Node))) {\n    return;\n  }\n\n  startX = e.pageX;\n\n  /* istanbul ignore else */\n  if (this.contains(target as Node)) {\n    self.isTouch = true;\n    toggleCarouselTouchHandlers(self, true);\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerMoveHandler = (e: PointerEvent) => {\n  currentX = e.pageX;\n};\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerUpHandler = (e: PointerEvent) => {\n  const { target } = e;\n  const doc = getDocument(target as Node);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map(c => getCarouselInstance(c) as Carousel)\n    .find(i => i.isTouch) as Carousel;\n\n  // impossible to satisfy\n  /* istanbul ignore next */\n  if (!self) {\n    return;\n  }\n\n  const { element, index } = self;\n  const RTL = isRTL(element);\n\n  self.isTouch = false;\n  toggleCarouselTouchHandlers(self);\n\n  if (doc.getSelection()?.toString().length) {\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n    return;\n  }\n\n  endX = e.pageX;\n\n  // the event target is outside the carousel context\n  // OR swipe distance is less than 120px\n  /* istanbul ignore else */\n  if (!element.contains(target as HTMLElement) || Math.abs(startX - endX) < 120) {\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n    return;\n  }\n  // OR determine next index to slide to\n  /* istanbul ignore else */\n  if (currentX < startX) {\n    self.to(index + (RTL ? -1 : 1));\n  } else if (currentX > startX) {\n    self.to(index + (RTL ? 1 : -1));\n  }\n  // reset pointer position\n  startX = 0;\n  currentX = 0;\n  endX = 0;\n};\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param pageIndex the index of the new active indicator\n */\nconst activateCarouselIndicator = (self: Carousel, pageIndex: number) => {\n  const { indicators } = self;\n  [...indicators].forEach(x => removeClass(x, activeClass));\n\n  /* istanbul ignore else */\n  if (self.indicators[pageIndex]) addClass(indicators[pageIndex], activeClass);\n};\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselTouchHandlers = (self: Carousel, add?: boolean) => {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(getDocument(element), pointermoveEvent, carouselPointerMoveHandler as EventListener, passiveHandler);\n  action(getDocument(element), pointerupEvent, carouselPointerUpHandler as EventListener, passiveHandler);\n};\n\n/**\n * Toggles all event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselHandlers = (self: Carousel, add?: boolean) => {\n  const { element, options, slides, controls, indicators } = self;\n  const { touch, pause, interval, keyboard } = options;\n  const action = add ? addListener : removeListener;\n\n  if (pause && interval) {\n    action(element, mouseenterEvent, carouselPauseHandler);\n    action(element, mouseleaveEvent, carouselResumeHandler);\n  }\n\n  if (touch && slides.length > 2) {\n    action(element, pointerdownEvent, carouselPointerDownHandler as EventListener, passiveHandler);\n    action(element, touchstartEvent, carouselDragHandler as unknown as EventListener, { passive: false });\n    action(element, dragstartEvent, carouselDragHandler as unknown as EventListener, { passive: false });\n  }\n\n  /* istanbul ignore else */\n  if (controls.length) {\n    controls.forEach(arrow => {\n      /* istanbul ignore else */\n      if (arrow) action(arrow, mouseclickEvent, carouselControlsHandler as EventListener);\n    });\n  }\n\n  /* istanbul ignore else */\n  if (indicators.length) {\n    indicators.forEach(indicator => {\n      action(indicator, mouseclickEvent, carouselIndicatorHandler as EventListener);\n    });\n  }\n\n  if (keyboard) action(getDocument(element), keydownEvent, carouselKeyHandler as EventListener);\n};\n\n/**\n * Returns the index of the current active item.\n *\n * @param self the `Carousel` instance\n * @returns the query result\n */\nconst getActiveIndex = (self: Carousel) => {\n  const { slides, element } = self;\n  const activeItem = querySelector(`.${carouselItem}.${activeClass}`, element);\n  return isHTMLElement(activeItem) ? [...slides].indexOf(activeItem) : -1;\n};\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nexport default class Carousel extends BaseComponent {\n  static selector = carouselSelector;\n  static init = carouselInitCallback;\n  static getInstance = getCarouselInstance;\n  declare options: CarouselOptions;\n  declare direction: 'right' | 'left';\n  declare index: number;\n  declare isTouch: boolean;\n  declare slides: HTMLCollectionOf<HTMLElement>;\n  declare controls: HTMLElement[];\n  declare indicator: HTMLElement | null;\n  declare indicators: HTMLElement[];\n\n  /**\n   * @param target mostly a `.carousel` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CarouselOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element } = this;\n\n    // additional properties\n    this.direction = isRTL(element) ? 'right' : 'left';\n    this.index = 0;\n    this.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    this.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = this;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length < 2) {\n      return;\n    }\n    // external controls must be within same document context\n    const doc = getDocument(element);\n\n    this.controls = [\n      ...querySelectorAll(`[${dataBsSlide}]`, element),\n      ...querySelectorAll(`[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n    ];\n\n    this.indicator = querySelector(`.${carouselString}-indicators`, element);\n\n    // a LIVE collection is prefferable\n    this.indicators = [\n      ...(this.indicator ? querySelectorAll(`[${dataBsSlideTo}]`, this.indicator) : []),\n      ...querySelectorAll(`[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n    ];\n\n    // set JavaScript and DATA API options\n    const { options } = this;\n\n    // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n    this.options.interval = options.interval === true ? carouselDefaults.interval : options.interval;\n\n    // set first slide active if none\n    /* istanbul ignore else */\n    if (getActiveIndex(this) < 0) {\n      addClass(slides[0], activeClass);\n      /* istanbul ignore else */\n      if (this.indicators.length) activateCarouselIndicator(this, 0);\n    }\n\n    // attach event handlers\n    toggleCarouselHandlers(this, true);\n\n    // start to cycle if interval is set\n    if (options.interval) this.cycle();\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return carouselComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return carouselDefaults;\n  }\n\n  /**\n   * Check if instance is paused.\n   */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   */\n  get isAnimating() {\n    return querySelector(`.${carouselItem}-next,.${carouselItem}-prev`, this.element) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const { element, options, isPaused, index } = this;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(\n      element,\n      () => {\n        // it's very important to check self.element\n        // where instance might have been disposed\n        /* istanbul ignore else */\n        if (this.element && !this.isPaused && !this.isTouch && isElementInScrollRange(element)) {\n          this.to(index + 1);\n        }\n      },\n      options.interval as number,\n      carouselString,\n    );\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const { element, options } = this;\n    /* istanbul ignore else */\n    if (!this.isPaused && options.interval) {\n      addClass(element, pausedClass);\n      Timer.set(\n        element,\n        () => {\n          /* ESLint is now happy */\n        },\n        1,\n        pausedClass,\n      );\n    }\n  }\n\n  /** Slide to the next item. */\n  next() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index + 1);\n    }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index - 1);\n    }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   *\n   * @param idx the index of the item to jump to\n   */\n  to(idx: number) {\n    const { element, slides, options } = this;\n    const activeItem = getActiveIndex(this);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (this.isAnimating || activeItem === next || Timer.get(element, dataBsSlide)) return;\n\n    // determine transition direction\n    /* istanbul ignore else */\n    if (activeItem < next || (activeItem === 0 && next === slides.length - 1)) {\n      this.direction = RTL ? 'right' : 'left'; // next\n    } else if (activeItem > next || (activeItem === slides.length - 1 && next === 0)) {\n      this.direction = RTL ? 'left' : 'right'; // prev\n    }\n    const { direction } = this;\n\n    // find the right next index\n    if (next < 0) {\n      next = slides.length - 1;\n    } else if (next >= slides.length) {\n      next = 0;\n    }\n\n    // orientation, class name, eventProperties\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    const eventProperties = {\n      relatedTarget: slides[next],\n      from: activeItem,\n      to: next,\n      direction,\n    };\n\n    // update event properties\n    ObjectAssign(carouselSlideEvent, eventProperties);\n    ObjectAssign(carouselSlidEvent, eventProperties);\n\n    // discontinue when prevented\n    dispatchEvent(element, carouselSlideEvent);\n    if (carouselSlideEvent.defaultPrevented) return;\n\n    // update index\n    this.index = next;\n    activateCarouselIndicator(this, next);\n\n    if (getElementTransitionDuration(slides[next]) && hasClass(element, 'slide')) {\n      Timer.set(\n        element,\n        () => {\n          addClass(slides[next], `${carouselItem}-${orientation}`);\n          reflow(slides[next]);\n          addClass(slides[next], `${carouselItem}-${directionClass}`);\n          addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n          emulateTransitionEnd(slides[next], () => carouselTransitionEndHandler(this));\n        },\n        0,\n        dataBsSlide,\n      );\n    } else {\n      addClass(slides[next], activeClass);\n      removeClass(slides[activeItem], activeClass);\n\n      Timer.set(\n        element,\n        () => {\n          Timer.clear(element, dataBsSlide);\n          // check for element, might have been disposed\n          /* istanbul ignore else */\n          if (element && options.interval && !this.isPaused) {\n            this.cycle();\n          }\n\n          dispatchEvent(element, carouselSlidEvent);\n        },\n        0,\n        dataBsSlide,\n      );\n    }\n  }\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const { slides } = this;\n    const itemClasses = ['start', 'end', 'prev', 'next'];\n\n    [...slides].forEach((slide, idx) => {\n      if (hasClass(slide, activeClass)) activateCarouselIndicator(this, idx);\n      itemClasses.forEach(c => removeClass(slide, `${carouselItem}-${c}`));\n    });\n\n    toggleCarouselHandlers(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = 'collapsing';\nexport default collapsingClass;\n","/** @type {string} */\nconst collapseString = 'collapse';\nexport default collapseString;\n","/** @type {string} */\nconst collapseComponent = 'Collapse';\nexport default collapseComponent;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  getInstance,\n  setAttribute,\n  getDocument,\n  closest,\n  querySelector,\n  querySelectorAll,\n  addClass,\n  hasClass,\n  removeClass,\n  mouseclickEvent,\n  ariaExpanded,\n  emulateTransitionEnd,\n  reflow,\n  dispatchEvent,\n  setElementStyle,\n  Timer,\n  createCustomEvent,\n  noop,\n  isHTMLElement,\n  isString,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport collapsingClass from '../strings/collapsingClass';\nimport showClass from '../strings/showClass';\nimport collapseString from '../strings/collapseString';\nimport collapseComponent from '../strings/collapseComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CollapseEvent, CollapseOptions } from '../interface/collapse';\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: HTMLElement) => getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: HTMLElement) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<CollapseEvent>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<CollapseEvent>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<CollapseEvent>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<CollapseEvent>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (showCollapseEvent.defaultPrevented) return;\n\n  Timer.set(element, noop, 17);\n  if (parent) Timer.set(parent, noop, 17);\n\n  addClass(element, collapsingClass);\n  removeClass(element, collapseString);\n\n  setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n  emulateTransitionEnd(element, () => {\n    Timer.clear(element);\n    if (parent) Timer.clear(parent);\n\n    triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'true'));\n\n    removeClass(element, collapsingClass);\n    addClass(element, collapseString);\n    addClass(element, showClass);\n\n    setElementStyle(element, { height: '' });\n\n    dispatchEvent(element, shownCollapseEvent);\n  });\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (hideCollapseEvent.defaultPrevented) return;\n\n  Timer.set(element, noop, 17);\n  if (parent) Timer.set(parent, noop, 17);\n\n  setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n  removeClass(element, collapseString);\n  removeClass(element, showClass);\n  addClass(element, collapsingClass);\n\n  reflow(element);\n  setElementStyle(element, { height: '0px' });\n\n  emulateTransitionEnd(element, () => {\n    Timer.clear(element);\n    /* istanbul ignore else */\n    if (parent) Timer.clear(parent);\n\n    triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'false'));\n\n    removeClass(element, collapsingClass);\n    addClass(element, collapseString);\n\n    setElementStyle(element, { height: '' });\n\n    dispatchEvent(element, hiddenCollapseEvent);\n  });\n};\n\n/**\n * Toggles on/off the event listener(s) of the `Collapse` instance.\n *\n * @param self the `Collapse` instance\n * @param add when `true`, the event listener is added\n */\nconst toggleCollapseHandler = (self: Collapse, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, collapseClickHandler as EventListener));\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target && closest(target as HTMLElement, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  /* istanbul ignore else */\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare options: CollapseOptions;\n  declare parent: HTMLElement | null;\n  declare triggers: HTMLElement[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(btn => getTargetElement(btn) === element);\n\n    // set parent accordion\n    this.parent = isHTMLElement(options.parent)\n      ? options.parent\n      : isString(options.parent)\n      ? getTargetElement(element) || querySelector(options.parent as string, doc)\n      : null;\n\n    // add event listeners\n    toggleCollapseHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    if (Timer.get(element)) return;\n\n    collapseContent(this);\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach(btn => addClass(btn, `${collapseString}d`));\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [...querySelectorAll(`.${collapseString}.${showClass}`, parent)].find(i =>\n        getCollapseInstance(i),\n      );\n      activeCollapseInstance = activeCollapse && getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach(btn => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    toggleCollapseHandler(this);\n\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = ['dropdown', 'dropup', 'dropstart', 'dropend'];\nexport default dropdownMenuClasses;\n","/** @type {string} */\nconst dropdownComponent = 'Dropdown';\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = 'dropdown-menu';\nexport default dropdownMenuClass;\n","import { hasAttribute, closest } from '@thednp/shorty';\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, 'A');\n  return (\n    (element.tagName === 'A' &&\n      // anchor href starts with #\n      hasAttribute(element, 'href') &&\n      (element as HTMLAnchorElement).href.slice(-1) === '#') ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor && hasAttribute(parentAnchor, 'href') && (parentAnchor as HTMLAnchorElement).href.slice(-1) === '#')\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  ariaExpanded,\n  focusEvent,\n  keydownEvent,\n  setAttribute,\n  keyEscape,\n  keyArrowDown,\n  keyArrowUp,\n  mouseclickEvent,\n  resizeEvent,\n  scrollEvent,\n  keyupEvent,\n  dispatchEvent,\n  setElementStyle,\n  getInstance,\n  ObjectAssign,\n  passiveHandler,\n  getElementsByClassName,\n  querySelector,\n  closest,\n  getAttribute,\n  getDocument,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  createCustomEvent,\n  focus,\n  getWindow,\n  CSS4Declaration,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport showClass from '../strings/showClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dropdownComponent from '../strings/dropdownComponent';\nimport dropdownMenuClass from '../strings/dropdownMenuClass';\n\nimport isEmptyAnchor from '../util/isEmptyAnchor';\nimport BaseComponent from './base-component';\nimport type { DropdownEvent, DropdownOptions } from '../interface/dropdown';\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] = dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"],[${dataBsToggle}=\"${dropupString}\"],[${dataBsToggle}=\"${dropendString}\"],[${dataBsToggle}=\"${dropstartString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) => getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = ['A', 'BUTTON'];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: 'dynamic', // [dynamic|static]\n};\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEvent>(`show.bs.${dropdownString}`);\nconst shownDropdownEvent = createCustomEvent<DropdownEvent>(`shown.bs.${dropdownString}`);\nconst hideDropdownEvent = createCustomEvent<DropdownEvent>(`hide.bs.${dropdownString}`);\nconst hiddenDropdownEvent = createCustomEvent<DropdownEvent>(`hidden.bs.${dropdownString}`);\nconst updatedDropdownEvent = createCustomEvent<DropdownEvent>(`updated.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  /* istanbul ignore next: this test requires a navbar */\n  if (getElementStyle(menu, 'position') === 'static') return;\n\n  const RTL = isRTL(element);\n  // const menuStart = hasClass(menu, dropdownMenuStartClass);\n  const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n  // reset menu offset and position\n  const resetProps = ['margin', 'top', 'bottom', 'left', 'right'];\n  resetProps.forEach(p => {\n    // menu.style[p] = '';\n    const style: { [key: string]: string } = {};\n    style[p] = '';\n    setElementStyle(menu, style);\n  });\n\n  // set initial position class\n  // take into account .btn-group parent as .dropdown\n  // this requires navbar/btn-group/input-group\n  let positionClass =\n    dropdownClasses.find(c => hasClass(parentElement, c)) ||\n    /* istanbul ignore next: fallback position */ dropdownString;\n\n  const dropdownMargin: { [key: string]: number[] } = {\n    dropdown: [offset, 0, 0],\n    dropup: [0, 0, offset],\n    dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n    dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n  };\n\n  const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n    dropdown: { top: '100%' },\n    dropup: { top: 'auto', bottom: '100%' },\n    dropstart: RTL ? { left: '100%', right: 'auto' } : { left: 'auto', right: '100%' },\n    dropend: RTL ? { left: 'auto', right: '100%' } : { left: '100%', right: 'auto' },\n    menuStart: RTL ? { right: '0', left: 'auto' } : { right: 'auto', left: '0' },\n    menuEnd: RTL ? { right: 'auto', left: '0' } : { right: '0', left: 'auto' },\n  };\n\n  const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n  const { clientWidth, clientHeight } = getDocumentElement(element);\n  const { left: targetLeft, top: targetTop, width: targetWidth, height: targetHeight } = getBoundingClientRect(element);\n\n  // dropstart | dropend\n  const leftFullExceed = targetLeft - menuWidth - offset < 0;\n  // dropend\n  const rightFullExceed = targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n  // dropstart | dropend\n  const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n  // dropdown\n  const bottomFullExceed = targetTop + menuHeight + targetHeight + offset >= clientHeight;\n  // dropup\n  const topExceed = targetTop - menuHeight - offset < 0;\n  // dropdown / dropup\n  const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) && targetLeft + targetWidth - menuWidth < 0;\n  const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) && targetLeft + menuWidth >= clientWidth;\n\n  // recompute position\n  // handle RTL as well\n  if (horizontalClass.includes(positionClass) && leftFullExceed && rightFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropstartString && (!RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropendString;\n  }\n  if (positionClass === dropendString && (RTL ? leftFullExceed : rightFullExceed)) {\n    positionClass = dropstartString;\n  }\n  if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n    positionClass = dropdownString;\n  }\n  if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n    positionClass = dropupString;\n  }\n\n  // override position for horizontal classes\n  if (horizontalClass.includes(positionClass) && bottomExceed) {\n    ObjectAssign(dropdownPosition[positionClass], {\n      top: 'auto',\n      bottom: 0,\n    });\n  }\n\n  // override position for vertical classes\n  if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n    // don't realign when menu is wider than window\n    // in both RTL and non-RTL readability is KING\n    let posAjust: { left: 'auto' | number; right: 'auto' | number } | undefined = { left: 'auto', right: 'auto' };\n    if (!leftExceed && rightExceed && !RTL) posAjust = { left: 'auto', right: 0 };\n    if (leftExceed && !rightExceed && RTL) posAjust = { left: 0, right: 'auto' };\n    if (posAjust) ObjectAssign(dropdownPosition[positionClass], posAjust);\n  }\n\n  const margins: number[] = dropdownMargin[positionClass];\n  setElementStyle(menu, {\n    ...dropdownPosition[positionClass],\n    margin: `${margins.map(x => (x ? `${x}px` : x)).join(' ')}`,\n  });\n\n  // override dropdown-menu-start | dropdown-menu-end\n  if (verticalClass.includes(positionClass) && menuEnd) {\n    /* istanbul ignore else */\n    if (menuEnd) {\n      const endAdjust =\n        (!RTL && leftExceed) || (RTL && rightExceed) ? 'menuStart' : /* istanbul ignore next */ 'menuEnd';\n      setElementStyle(menu, dropdownPosition[endAdjust]);\n    }\n  }\n  // trigger updated event\n  dispatchEvent(parentElement, updatedDropdownEvent);\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map(c => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (firstElementChild && menuFocusTags.includes(firstElementChild.tagName)) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter(c => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler as EventListener);\n  action(doc, focusEvent, dropdownDismissHandler as EventListener);\n  action(doc, keydownEvent, dropdownPreventScroll as EventListener);\n  action(doc, keyupEvent, dropdownKeyHandler as EventListener);\n\n  /* istanbul ignore else */\n  if (options.display === 'dynamic') {\n    [scrollEvent, resizeEvent].forEach(ev => {\n      action(getWindow(element), ev, dropdownLayoutHandler, passiveHandler);\n    });\n  }\n};\n\n/**\n * Toggles on/off the `click` event listener of the `Dropdown`.\n *\n * @param self the `Dropdown` instance\n * @param add when `true`, it will add the event listener\n */\nconst toggleDropdownHandler = (self: Dropdown, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, dropdownClickHandler as EventListener);\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (element: HTMLElement): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, 'btn-group', 'input-group']\n    .map(c => getElementsByClassName(`${c} ${showClass}`, getDocument(element)))\n    .find(x => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)].find(x =>\n      dropdownClasses.some(c => c === getAttribute(x, dataBsToggle)),\n    );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  /* istanbul ignore next: impossible to satisfy */\n  if (!target || !(target as HTMLElement).closest) return; // some weird FF bug #409\n\n  const element = getCurrentOpenDropdown(target as HTMLElement);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore next */\n  if (!self) return;\n\n  const { parentElement, menu } = self;\n\n  const hasData = closest(target as HTMLElement, dropdownSelector) !== null;\n  const isForm =\n    parentElement &&\n    parentElement.contains(target as HTMLElement) &&\n    ((target as HTMLElement).tagName === 'form' || closest(target as HTMLElement, 'form') !== null);\n\n  if (type === mouseclickEvent && isEmptyAnchor(target as HTMLElement)) {\n    e.preventDefault();\n  }\n  if (type === focusEvent && (target === element || target === menu || menu.contains(target as HTMLElement))) {\n    return;\n  }\n\n  /* istanbul ignore next */\n  if (isForm || hasData) {\n    // smile to ESLint\n  } else if (self) {\n    self.hide();\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.stopImmediatePropagation();\n    self.toggle();\n    /* istanbul ignore else */\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  /* istanbul ignore else */\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n  /* istanbul ignore next: impossible to satisfy */\n  if (!self || !activeElement) return;\n  const { menu, open } = self;\n  const menuItems = getMenuItems(menu);\n\n  // arrow up & down\n  if (menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)) {\n    let idx = menuItems.indexOf(activeElement);\n    /* istanbul ignore else */\n    if (activeElement === element) {\n      idx = 0;\n    } else if (code === keyArrowUp) {\n      idx = idx > 1 ? idx - 1 : 0;\n    } else if (code === keyArrowDown) {\n      idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n    }\n    /* istanbul ignore else */\n    if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n  }\n\n  if (keyEscape === code && open) {\n    self.toggle();\n    focus(element);\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownLayoutHandler(this: HTMLElement) {\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n    const menu = querySelector(`.${dropdownMenuClass}`, parentElement as ParentNode);\n\n    // invalidate when dropdown-menu is missing\n    if (!menu) return;\n\n    // set targets\n    this.parentElement = parentElement as HTMLElement;\n    this.menu = menu;\n\n    // add event listener\n    toggleDropdownHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore next */\n    if (open) return;\n\n    const currentElement = getCurrentOpenDropdown(element);\n    const currentInstance = currentElement && getDropdownInstance(currentElement);\n    if (currentInstance) currentInstance.hide();\n\n    // dispatch event\n    [showDropdownEvent, shownDropdownEvent, updatedDropdownEvent].forEach(e => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, showDropdownEvent);\n    if (showDropdownEvent.defaultPrevented) return;\n\n    addClass(menu, showClass);\n    addClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'true');\n\n    // change menu position\n    styleDropdown(this);\n\n    this.open = !open;\n\n    focus(element); // focus the element\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, shownDropdownEvent);\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore next */\n    if (!open) return;\n\n    [hideDropdownEvent, hiddenDropdownEvent].forEach(e => {\n      e.relatedTarget = element;\n    });\n    dispatchEvent(parentElement, hideDropdownEvent);\n    if (hideDropdownEvent.defaultPrevented) return;\n\n    removeClass(menu, showClass);\n    removeClass(parentElement, showClass);\n    setAttribute(element, ariaExpanded, 'false');\n\n    this.open = !open;\n    // only re-attach handler if the instance is not disposed\n    toggleDropdownDismiss(this);\n    dispatchEvent(parentElement, hiddenDropdownEvent);\n  }\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    toggleDropdownHandler(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst modalString = 'modal';\nexport default modalString;\n","/** @type {string} */\nconst modalComponent = 'Modal';\nexport default modalComponent;\n","/** @type {string} */\nconst offcanvasComponent = 'Offcanvas';\nexport default offcanvasComponent;\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = 'fixed-top';\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = 'fixed-bottom';\nexport default fixedBottomClass;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = 'sticky-top';\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = 'position-sticky';\nexport default positionStickyClass;\n","import {\n  getWindow,\n  getDocumentElement,\n  getElementStyle,\n  getDocumentBody,\n  hasClass,\n  setElementStyle,\n  getElementsByClassName,\n} from '@thednp/shorty';\n\nimport fixedTopClass from '../strings/fixedTopClass';\nimport fixedBottomClass from '../strings/fixedBottomClass';\nimport stickyTopClass from '../strings/stickyTopClass';\nimport positionStickyClass from '../strings/positionStickyClass';\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName(fixedTopClass, parent),\n  ...getElementsByClassName(fixedBottomClass, parent),\n  ...getElementsByClassName(stickyTopClass, parent),\n  ...getElementsByClassName(positionStickyClass, parent),\n  ...getElementsByClassName('is-fixed', parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: HTMLElement) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: '',\n    overflow: '',\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  if (fixedItems.length) {\n    fixedItems.forEach(fixed => {\n      setElementStyle(fixed, {\n        paddingRight: '',\n        marginRight: '',\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: HTMLElement) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: HTMLElement, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, 'paddingRight'), 10);\n  const isOpen = getElementStyle(bd, 'overflow') === 'hidden';\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  /* istanbul ignore else */\n  if (overflow) {\n    setElementStyle(bd, {\n      overflow: 'hidden',\n      paddingRight: `${bodyPad + sbWidth}px`,\n    });\n\n    /* istanbul ignore else */\n    if (fixedItems.length) {\n      fixedItems.forEach(fixed => {\n        const itemPadValue = getElementStyle(fixed, 'paddingRight');\n        fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n        /* istanbul ignore else */\n        if ([stickyTopClass, positionStickyClass].some(c => hasClass(fixed, c))) {\n          const itemMValue = getElementStyle(fixed, 'marginRight');\n          fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n        }\n      });\n    }\n  }\n};\n","/** @type {string} */\nconst offcanvasString = 'offcanvas';\nexport default offcanvasString;\n","import { getDocumentBody, isNode, createElement } from '@thednp/shorty';\n\n// the default container for Modal, Offcanvas, Popover and Tooltip\nconst popupContainer = createElement({ tagName: 'div', className: 'popup-container' }) as HTMLElement;\n\nconst appendPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n  const BODY = containerIsBody ? customContainer : getDocumentBody(target);\n\n  if (isNode(target)) {\n    if (lookup === popupContainer) {\n      BODY.append(popupContainer);\n    }\n    lookup.append(target);\n  }\n};\n\nconst removePopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n\n  if (isNode(target)) {\n    target.remove();\n\n    if (lookup === popupContainer && !popupContainer.children.length) {\n      popupContainer.remove();\n    }\n  }\n};\n\nconst hasPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const lookup = isNode(customContainer) && customContainer.nodeName !== 'BODY' ? customContainer : popupContainer;\n  return isNode(target) && lookup.contains(target);\n};\n\nexport { popupContainer, appendPopup, removePopup, hasPopup };\n","import {\n  createElement,\n  getDocument,\n  reflow,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getDocumentBody,\n} from '@thednp/shorty';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\nimport { resetScrollbar } from './scrollbar';\nimport { appendPopup, removePopup } from './popupContainer';\n\nconst backdropString = 'backdrop';\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement('div') as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: HTMLElement): HTMLElement | null => {\n  return querySelector(`${modalActiveSelector},${offcanvasActiveSelector}`, getDocument(element));\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach(c => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param element\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (element: HTMLElement, hasFade: boolean, isModal?: boolean) => {\n  toggleOverlayType(isModal);\n  appendPopup(overlay, getDocumentBody(element));\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param element\n */\nconst removeOverlay = (element?: HTMLElement): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    removePopup(overlay, getDocumentBody(element));\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  overlay,\n  offcanvasBackdropClass,\n  modalBackdropClass,\n  modalActiveSelector,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n};\n","import { isHTMLElement, getElementStyle } from '@thednp/shorty';\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) && getElementStyle(element, 'visibility') !== 'hidden' && element.offsetParent !== null;\n};\nexport default isVisible;\n","/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\nimport {\n  keyEscape,\n  getElementTransitionDuration,\n  removeAttribute,\n  setAttribute,\n  keydownEvent,\n  mouseclickEvent,\n  resizeEvent,\n  ariaModal,\n  ariaHidden,\n  getInstance,\n  isHTMLElement,\n  isRTL,\n  isFunction,\n  removeClass,\n  hasClass,\n  addClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  getDocumentElement,\n  getDocumentBody,\n  getDocument,\n  getWindow,\n  CSS4Declaration,\n  setElementStyle,\n  createCustomEvent,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  focus,\n  Timer,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport modalComponent from '../strings/modalComponent';\nimport offcanvasComponent from '../strings/offcanvasComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport { setScrollbar, measureScrollbar } from '../util/scrollbar';\nimport {\n  overlay,\n  modalActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport isVisible from '../util/isVisible';\nimport BaseComponent from './base-component';\nimport { ModalOptions, ModalEvent } from '../interface/modal';\nimport { hasPopup } from '../util/popupContainer';\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true,\n  keyboard: true,\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n */\nconst getModalInstance = (element: HTMLElement) => getInstance<Modal>(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n */\nconst modalInitCallback = (element: HTMLElement) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = createCustomEvent<ModalEvent>(`show.bs.${modalString}`);\nconst shownModalEvent = createCustomEvent<ModalEvent>(`shown.bs.${modalString}`);\nconst hideModalEvent = createCustomEvent<ModalEvent>(`hide.bs.${modalString}`);\nconst hiddenModalEvent = createCustomEvent<ModalEvent>(`hidden.bs.${modalString}`);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst setModalScrollbar = (self: Modal) => {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } = element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  /* istanbul ignore else */\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element) ? 'paddingRight' : /* istanbul ignore next */ 'paddingLeft';\n    const padStyle = {} as Partial<CSS4Declaration>;\n    padStyle[pad] = `${scrollbarWidth}px`;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, modalOverflow || clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleModalDismiss = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, update } = self;\n  action(element, mouseclickEvent, modalDismissHandler as EventListener);\n  action(getWindow(element), resizeEvent, update, passiveHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler as EventListener);\n};\n\n/**\n * Toggles on/off the `click` event listener of the `Modal` instance.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listener is added\n */\nconst toggleModalHandler = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, modalClickHandler as EventListener));\n  }\n};\n\n/**\n * Executes after a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n * @param callback the `Modal` instance\n */\nconst afterModalHide = (self: Modal, callback?: () => void) => {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: '', display: '' });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (focusElement) focus(focusElement as HTMLElement);\n\n  /* istanbul ignore else */\n  if (isFunction(callback)) callback();\n\n  hiddenModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, hiddenModalEvent);\n};\n\n/**\n * Executes after a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalShow = (self: Modal) => {\n  const { element, relatedTarget } = self;\n  focus(element);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, shownModalEvent);\n};\n\n/**\n * Executes before a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalShow = (self: Modal) => {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: 'block' });\n\n  setModalScrollbar(self);\n  /* istanbul ignore else */\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n};\n\n/**\n * Executes before a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n * @param callback when `true` skip animation\n */\nconst beforeModalHide = (self: Modal, callback?: () => void) => {\n  const { element, options, hasFade } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (options.backdrop && !callback && hasFade && hasClass(overlay, showClass) && !getCurrentOpen(element)) {\n    // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self, callback);\n  }\n};\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n *\n * @param e the `Event` object\n */\nconst modalClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore next */\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n  self.relatedTarget = trigger;\n  self.toggle();\n};\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst modalKeyHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(modalActiveSelector, getDocument(target as Node));\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore next */\n  if (!self) return;\n\n  const { options } = self;\n  /* istanbul ignore else */\n  if (\n    options.keyboard &&\n    code === keyEscape && // the keyboard option is enabled and the key is 27\n    hasClass(element, showClass)\n  ) {\n    // the modal is not visible\n    self.relatedTarget = null;\n    self.hide();\n  }\n};\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @param e the `Event` object\n */\nfunction modalDismissHandler(this: HTMLElement, e: MouseEvent) {\n  const self = getModalInstance(this);\n\n  // this timer is needed\n  /* istanbul ignore next: must have a filter */\n  if (!self || Timer.get(this)) return;\n\n  const { options, isStatic, modalDialog } = self;\n  const { backdrop } = options;\n  const { target } = e;\n\n  const selectedText = getDocument(this)?.getSelection()?.toString().length;\n  const targetInsideDialog = modalDialog?.contains(target as HTMLElement);\n  const dismiss = target && closest(target as HTMLElement, modalDismissSelector);\n\n  /* istanbul ignore else */\n  if (isStatic && !targetInsideDialog) {\n    Timer.set(\n      this,\n      () => {\n        addClass(this, modalStaticClass);\n        emulateTransitionEnd(modalDialog as HTMLElement, () => staticTransitionEnd(self));\n      },\n      17,\n    );\n  } else if (dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)) {\n    self.relatedTarget = dismiss || null;\n    self.hide();\n    e.preventDefault();\n  }\n}\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param self the `Modal` instance\n */\nconst staticTransitionEnd = (self: Modal) => {\n  const { element, modalDialog } = self;\n  const duration =\n    (isHTMLElement(modalDialog) ? getElementTransitionDuration(modalDialog) : /* istanbul ignore next */ 0) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n};\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nexport default class Modal extends BaseComponent {\n  static selector = modalSelector;\n  static init = modalInitCallback;\n  static getInstance = getModalInstance;\n  declare options: ModalOptions;\n  declare modalDialog: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare isStatic: boolean;\n  declare hasFade: boolean;\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually the `.modal` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ModalOptions>) {\n    super(target, config);\n\n    // the modal\n    const { element } = this;\n\n    // the modal-dialog\n    this.modalDialog = querySelector(`.${modalString}-dialog`, element);\n\n    // modal can have multiple triggering elements\n    this.triggers = [...querySelectorAll(modalToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // additional internals\n    this.isStatic = this.options.backdrop === 'static';\n    this.hasFade = hasClass(element, fadeClass);\n    this.relatedTarget = null;\n\n    // attach event listeners\n    toggleModalHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return modalComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return modalDefaults;\n  }\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const { element, options, hasFade, relatedTarget } = this;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) return;\n\n    showModalEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, showModalEvent);\n    if (showModalEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n\n    if (currentOpen && currentOpen !== element) {\n      const that =\n        getModalInstance(currentOpen) ||\n        /* istanbul ignore next */\n        getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, offcanvasComponent);\n      if (that) that.hide();\n    }\n    if (backdrop) {\n      if (!hasPopup(overlay)) {\n        appendOverlay(element, hasFade, true);\n      } else {\n        toggleOverlayType(true);\n      }\n\n      overlayDelay = getElementTransitionDuration(overlay);\n      showOverlay();\n      setTimeout(() => beforeModalShow(this), overlayDelay);\n    } else {\n      beforeModalShow(this);\n      /* istanbul ignore else */\n      if (currentOpen && hasClass(overlay, showClass)) {\n        hideOverlay();\n      }\n    }\n  }\n\n  /**\n   * Hide the modal from the user.\n   *\n   * @param callback when defined it will skip animation\n   */\n  hide(callback?: () => void) {\n    const { element, hasFade, relatedTarget } = this;\n\n    if (!hasClass(element, showClass)) return;\n\n    hideModalEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, hideModalEvent);\n    if (hideModalEvent.defaultPrevented) return;\n    removeClass(element, showClass);\n    setAttribute(element, ariaHidden, 'true');\n    removeAttribute(element, ariaModal);\n\n    // if (hasFade && callback) {\n    /* istanbul ignore else */\n    if (hasFade) {\n      emulateTransitionEnd(element, () => beforeModalHide(this, callback));\n    } else {\n      beforeModalHide(this, callback);\n    }\n  }\n\n  /**\n   * Updates the modal layout.\n   */\n  update = () => {\n    /* istanbul ignore else */\n    if (hasClass(this.element, showClass)) setModalScrollbar(this);\n  };\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    toggleModalHandler(this);\n    // use callback\n    this.hide(() => super.dispose());\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\nimport {\n  ariaHidden,\n  addClass,\n  hasClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  removeAttribute,\n  isFunction,\n  setAttribute,\n  keyEscape,\n  keydownEvent,\n  mouseclickEvent,\n  ariaModal,\n  emulateTransitionEnd,\n  dispatchEvent,\n  getElementTransitionDuration,\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  removeClass,\n  setElementStyle,\n  createCustomEvent,\n  focus,\n  getInstance,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport showClass from '../strings/showClass';\nimport offcanvasString from '../strings/offcanvasString';\nimport offcanvasComponent from '../strings/offcanvasComponent';\nimport modalComponent from '../strings/modalComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport isVisible from '../util/isVisible';\nimport { setScrollbar } from '../util/scrollbar';\nimport { hasPopup } from '../util/popupContainer';\nimport {\n  overlay,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport BaseComponent from './base-component';\nimport { OffcanvasOptions, OffcanvasEvent } from '../interface/offcanvas';\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n */\nconst getOffcanvasInstance = (element: HTMLElement) => getInstance<Offcanvas>(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n */\nconst offcanvasInitCallback = (element: HTMLElement) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param self the `Offcanvas` instance\n */\nconst setOffCanvasScrollbar = (self: Offcanvas) => {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the `click` event listeners.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true*, listeners are added\n */\nconst toggleOffcanvasEvents = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  self.triggers.forEach(btn => action(btn, mouseclickEvent, offcanvasTriggerHandler as EventListener));\n};\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true* listeners are added\n */\nconst toggleOffCanvasDismiss = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler as EventListener);\n  action(doc, mouseclickEvent, offcanvasDismissHandler as EventListener);\n};\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasShow = (self: Offcanvas) => {\n  const { element, options } = self;\n\n  /* istanbul ignore else */\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: 'visible' });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n};\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param callback the hide callback\n */\nconst beforeOffcanvasHide = (self: Offcanvas, callback?: () => void) => {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  element.blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => hideOffcanvasComplete(self, callback));\n  } else hideOffcanvasComplete(self, callback);\n};\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @param e the `Event` object\n */\nconst offcanvasTriggerHandler = (e: MouseEvent) => {\n  const trigger = closest(e.target as HTMLElement, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    self.relatedTarget = trigger;\n    self.toggle();\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param e the `Event` object\n */\nconst offcanvasDismissHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const offCanvasDismiss = querySelector(offcanvasDismissSelector, element as HTMLElement | undefined);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore next: must have a filter */\n  if (!self) return;\n\n  const { options, triggers } = self;\n  const { backdrop } = options;\n  const trigger = closest(target as HTMLElement, offcanvasToggleSelector);\n  const selection = getDocument(element).getSelection();\n\n  /* istanbul ignore next: a filter is required here */\n  if (overlay.contains(target as HTMLElement) && backdrop === 'static') return;\n\n  /* istanbul ignore else */\n  if (\n    !(selection && selection.toString().length) &&\n    ((!element.contains(target as HTMLElement) &&\n      backdrop &&\n      /* istanbul ignore next */ (!trigger || triggers.includes(target as HTMLElement))) ||\n      (offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement)))\n  ) {\n    self.relatedTarget = offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement) ? offCanvasDismiss : null;\n    self.hide();\n  }\n\n  /* istanbul ignore next */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst offcanvasKeyDismissHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore next: must filter */\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (self.options.keyboard && code === keyEscape) {\n    self.relatedTarget = null;\n    self.hide();\n  }\n};\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst showOffcanvasComplete = (self: Offcanvas) => {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n  setAttribute(element, 'role', 'dialog');\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n};\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param callback the hide callback\n */\nconst hideOffcanvasComplete = (self: Offcanvas, callback?: () => void) => {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, 'true');\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, 'role');\n  setElementStyle(element, { visibility: '' });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (visibleTrigger) focus(visibleTrigger as HTMLElement);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n  // callback\n  if (isFunction(callback)) callback();\n};\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nexport default class Offcanvas extends BaseComponent {\n  static selector = offcanvasSelector;\n  static init = offcanvasInitCallback;\n  static getInstance = getOffcanvasInstance;\n  declare options: OffcanvasOptions;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually an `.offcanvas` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<OffcanvasOptions>) {\n    super(target, config);\n\n    // instance element\n    const { element } = this;\n\n    // all the triggering buttons\n    this.triggers = [...querySelectorAll(offcanvasToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // additional instance property\n    this.relatedTarget = null;\n\n    // attach event listeners\n    toggleOffcanvasEvents(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return offcanvasComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return offcanvasDefaults;\n  }\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const { element, options, relatedTarget } = this;\n    let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) return;\n\n    showOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    shownOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, showOffcanvasEvent);\n    if (showOffcanvasEvent.defaultPrevented) return;\n\n    // we elegantly hide any opened modal/offcanvas\n    const currentOpen = getCurrentOpen(element);\n    if (currentOpen && currentOpen !== element) {\n      const that =\n        getOffcanvasInstance(currentOpen) ||\n        /* istanbul ignore next */\n        getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, modalComponent);\n      if (that) that.hide();\n    }\n\n    if (options.backdrop) {\n      if (!hasPopup(overlay)) {\n        appendOverlay(element, true);\n      } else {\n        toggleOverlayType();\n      }\n\n      overlayDelay = getElementTransitionDuration(overlay);\n      showOverlay();\n\n      setTimeout(() => beforeOffcanvasShow(this), overlayDelay);\n    } else {\n      beforeOffcanvasShow(this);\n      /* istanbul ignore else */\n      if (currentOpen && hasClass(overlay, showClass)) {\n        hideOverlay();\n      }\n    }\n  }\n\n  /**\n   * Hides the offcanvas from the user.\n   *\n   * @param callback when `true` it will skip animation\n   */\n  hide(callback?: () => void) {\n    const { element, relatedTarget } = this;\n\n    if (!hasClass(element, showClass)) return;\n\n    hideOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    hiddenOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n    dispatchEvent(element, hideOffcanvasEvent);\n    if (hideOffcanvasEvent.defaultPrevented) return;\n\n    addClass(element, offcanvasTogglingClass);\n    removeClass(element, showClass);\n\n    if (!callback) {\n      emulateTransitionEnd(element, () => beforeOffcanvasHide(this, callback));\n    } else beforeOffcanvasHide(this, callback);\n  }\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    toggleOffcanvasEvents(this);\n    this.hide(() => super.dispose());\n  }\n}\n","/** @type {string} */\nconst popoverString = 'popover';\nexport default popoverString;\n","/** @type {string} */\nconst popoverComponent = 'Popover';\nexport default popoverComponent;\n","/** @type {string} */\nconst tooltipString = 'tooltip';\nexport default tooltipString;\n","import tooltipString from '../strings/tooltipString';\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param tipType the expected markup type\n * @returns the template markup\n */\nconst getTipTemplate = (tipType: string) => {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : '';\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${header + arrow + body}</div>`;\n};\n\nexport default getTipTemplate;\n","const tipClassPositions = {\n  top: 'top',\n  bottom: 'bottom',\n  left: 'start',\n  right: 'end',\n};\n\nexport default tipClassPositions;\n","import {\n  isHTMLElement,\n  setElementStyle,\n  getDocumentElement,\n  getBoundingClientRect,\n  getElementStyle,\n  isRTL,\n  toLowerCase,\n  createCustomEvent,\n  dispatchEvent,\n} from '@thednp/shorty';\n\nimport popoverComponent from '../strings/popoverComponent';\nimport tipClassPositions from './tipClassPositions';\nimport Tooltip from '../components/tooltip';\nimport type { TooltipEvent } from '../interface/tooltip';\nimport type { PopoverEvent } from '../interface/popover';\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n */\nconst styleTip = <T extends Tooltip>(self: T) => {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const { element, tooltip, container, options, arrow } = self;\n  /* istanbul ignore next */\n  if (!tooltip) return;\n  const tipPositions = { ...tipClassPositions };\n  const RTL = isRTL(element);\n\n  // reset tooltip style (top: 0, left: 0 works best)\n  setElementStyle(tooltip, {\n    // top: '0px', left: '0px', right: '', bottom: '',\n    top: '',\n    left: '',\n    right: '',\n    bottom: '',\n  });\n  const isPopover = self.name === popoverComponent;\n  const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n  const { clientWidth: htmlcw, clientHeight: htmlch, offsetWidth: htmlow } = getDocumentElement(element);\n  let { placement } = options;\n  const { clientWidth: parentCWidth, offsetWidth: parentOWidth } = container as HTMLElement;\n  const parentPosition = getElementStyle(container as HTMLElement, 'position');\n  const fixedParent = parentPosition === 'fixed';\n  const scrollbarWidth = fixedParent ? Math.abs(parentCWidth - parentOWidth) : Math.abs(htmlcw - htmlow);\n  const leftBoundry = RTL && fixedParent ? /* istanbul ignore next */ scrollbarWidth : 0;\n  const rightBoundry = htmlcw - (!RTL ? scrollbarWidth : 0) - 1;\n  const {\n    width: elemWidth,\n    height: elemHeight,\n    left: elemRectLeft,\n    right: elemRectRight,\n    top: elemRectTop,\n  } = getBoundingClientRect(element, true);\n  const { x, y } = {\n    x: elemRectLeft,\n    y: elemRectTop,\n  };\n  // reset arrow style\n  setElementStyle(arrow as HTMLElement, {\n    top: '',\n    left: '',\n    right: '',\n    bottom: '',\n  });\n  let topPosition: number | string = 0;\n  let bottomPosition: number | string = '';\n  let leftPosition: number | string = 0;\n  let rightPosition: number | string = '';\n  let arrowTop: number | string = '';\n  let arrowLeft: number | string = '';\n  let arrowRight: number | string = '';\n\n  const arrowWidth = (arrow as HTMLElement).offsetWidth || 0;\n  const arrowHeight = (arrow as HTMLElement).offsetHeight || 0;\n  const arrowAdjust = arrowWidth / 2;\n\n  // check placement\n  let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n  let bottomExceed = elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n  let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n  let rightExceed = elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n  const horizontals = ['left', 'right'];\n  const verticals = ['top', 'bottom'];\n\n  topExceed = horizontals.includes(placement)\n    ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n    : topExceed;\n  bottomExceed = horizontals.includes(placement)\n    ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n    : bottomExceed;\n  leftExceed = verticals.includes(placement) ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry : leftExceed;\n  rightExceed = verticals.includes(placement)\n    ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n    : rightExceed;\n\n  // first remove side positions if both left and right limits are exceeded\n  // we usually fall back to top|bottom\n  placement = horizontals.includes(placement) && leftExceed && rightExceed ? 'top' : placement;\n  // recompute placement\n  placement = placement === 'top' && topExceed ? 'bottom' : placement;\n  placement = placement === 'bottom' && bottomExceed ? 'top' : placement;\n  placement = placement === 'left' && leftExceed ? 'right' : placement;\n  placement = placement === 'right' && rightExceed ? 'left' : placement;\n\n  // update tooltip/popover class\n  if (!tooltip.className.includes(placement)) {\n    tooltip.className = tooltip.className.replace(tipClasses, tipPositions[placement]);\n  }\n\n  // compute tooltip / popover coordinates\n  /* istanbul ignore else */\n  if (horizontals.includes(placement)) {\n    // secondary|side positions\n    if (placement === 'left') {\n      // LEFT\n      leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n    } else {\n      // RIGHT\n      leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n    }\n\n    // adjust top and arrow\n    if (topExceed && bottomExceed) {\n      topPosition = 0;\n      bottomPosition = 0;\n      arrowTop = elemRectTop + elemHeight / 2 - arrowHeight / 2;\n    } else if (topExceed) {\n      topPosition = y;\n      bottomPosition = '';\n      arrowTop = elemHeight / 2 - arrowWidth;\n    } else if (bottomExceed) {\n      topPosition = y - tipHeight + elemHeight;\n      bottomPosition = '';\n      arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n    } else {\n      topPosition = y - tipHeight / 2 + elemHeight / 2;\n      arrowTop = tipHeight / 2 - arrowHeight / 2;\n    }\n  } else if (verticals.includes(placement)) {\n    if (placement === 'top') {\n      topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n    } else {\n      // BOTTOM\n      topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n    }\n\n    // adjust left | right and also the arrow\n    if (leftExceed) {\n      leftPosition = 0;\n      arrowLeft = x + elemWidth / 2 - arrowAdjust;\n    } else if (rightExceed) {\n      leftPosition = 'auto';\n      rightPosition = 0;\n      arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n    } else {\n      leftPosition = x - tipWidth / 2 + elemWidth / 2;\n      arrowLeft = tipWidth / 2 - arrowAdjust;\n    }\n  }\n\n  // apply style to tooltip/popover\n  setElementStyle(tooltip, {\n    top: `${topPosition}px`,\n    bottom: bottomPosition === '' ? '' : `${bottomPosition}px`,\n    left: leftPosition === 'auto' ? leftPosition : `${leftPosition}px`,\n    right: rightPosition !== '' ? `${rightPosition}px` : '',\n  });\n\n  // update arrow placement\n  /* istanbul ignore else */\n  if (isHTMLElement(arrow)) {\n    if (arrowTop !== '') {\n      arrow.style.top = `${arrowTop}px`;\n    }\n    if (arrowLeft !== '') {\n      arrow.style.left = `${arrowLeft}px`;\n    } else if (arrowRight !== '') {\n      arrow.style.right = `${arrowRight}px`;\n    }\n  }\n  const updatedTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`updated.bs.${toLowerCase(self.name)}`);\n  dispatchEvent(element, updatedTooltipEvent);\n};\n\nexport default styleTip;\n","import getTipTemplate from './getTipTemplate';\nimport tooltipString from '../strings/tooltipString';\nimport { TooltipOptions } from '../interface/tooltip';\n\nconst tooltipDefaults: TooltipOptions = {\n  template: getTipTemplate(tooltipString),\n  title: '',\n  customClass: '',\n  trigger: 'hover focus',\n  placement: 'top',\n  sanitizeFn: undefined,\n  animation: true,\n  delay: 200,\n  container: document.body,\n  content: '',\n  dismissible: false,\n  btnClose: '',\n};\nexport default tooltipDefaults;\n","/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = 'data-original-title';\nexport default dataOriginalTitle;\n","/** @type {string} */\nconst tooltipComponent = 'Tooltip';\nexport default tooltipComponent;\n","import { isNode, isArray, isFunction, isString, isNodeList, isHTMLElement } from '@thednp/shorty';\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param element target\n * @param content the `Element` to append / string\n * @param sanitizeFn a function to sanitize string content\n */\nconst setHtml = (element: Node, content: Node[] | Node | string, sanitizeFn?: (s: string) => string) => {\n  /* istanbul ignore next */\n  if (!isHTMLElement(element) || (isString(content) && !content.length)) return;\n\n  /* istanbul ignore else */\n  if (isString(content)) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    const domParser = new DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, 'text/html');\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (isNodeList(content) || (isArray(content) && content.every(isNode))) {\n    element.append(...[...content]);\n  }\n};\nexport default setHtml;\n","import { createElement, addClass, hasClass, setAttribute, querySelector, isRTL, isHTMLElement } from '@thednp/shorty';\n\nimport tooltipComponent from '../strings/tooltipComponent';\nimport tooltipString from '../strings/tooltipString';\nimport popoverString from '../strings/popoverString';\nimport fadeClass from '../strings/fadeClass';\nimport tipClassPositions from './tipClassPositions';\nimport setHtml from './setHtml';\nimport Tooltip from '../components/tooltip';\nimport Popover from '../components/popover';\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param self the `Tooltip` / `Popover` instance\n */\nconst createTip = (self: Tooltip | Popover) => {\n  const isTooltip = self.name === tooltipComponent;\n\n  const { id, element, options } = self;\n  const { title, placement, template, animation, customClass, sanitizeFn, dismissible, content, btnClose } = options;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts: Node[] = [];\n  let contentParts: Node[] = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  let tooltipTemplate: Node | string;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement('div') as HTMLElement;\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild as HTMLElement;\n  }\n\n  // set popover markup\n  self.tooltip = isHTMLElement(tooltipTemplate)\n    ? (tooltipTemplate.cloneNode(true) as HTMLElement)\n    : /* istanbul ignore next */ undefined;\n\n  const { tooltip } = self;\n  /* istanbul ignore next */\n  if (!tooltip) return;\n\n  // set id and role attributes\n  setAttribute(tooltip, 'id', id);\n  setAttribute(tooltip, 'role', tooltipString);\n\n  const bodyClass = isTooltip ? `${tooltipString}-inner` : `${popoverString}-body`;\n  const tooltipHeader = isTooltip ? null : querySelector(`.${popoverString}-header`, tooltip);\n  const tooltipBody = querySelector(`.${bodyClass}`, tooltip);\n\n  // set arrow and enable access for styleTip\n  self.arrow = querySelector(`.${tipString}-arrow`, tooltip) as HTMLElement;\n  const { arrow } = self;\n\n  if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n  else {\n    const tempTitle = createElement('div') as Node;\n    setHtml(tempTitle, title, sanitizeFn);\n    titleParts = [...[...tempTitle.childNodes]];\n  }\n\n  if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n  else {\n    const tempContent = createElement('div') as Node;\n    setHtml(tempContent, content, sanitizeFn);\n    contentParts = [...[...tempContent.childNodes]];\n  }\n\n  // set dismissible button\n  if (dismissible) {\n    if (title) {\n      if (isHTMLElement(btnClose)) titleParts = [...titleParts, btnClose.cloneNode(true)];\n      else {\n        const tempBtn = createElement('div') as Node;\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        titleParts = [...titleParts, tempBtn.firstChild as Node];\n      }\n    } else {\n      /* istanbul ignore else */\n      if (tooltipHeader) tooltipHeader.remove();\n      if (isHTMLElement(btnClose)) contentParts = [...contentParts, btnClose.cloneNode(true)];\n      else {\n        const tempBtn = createElement('div') as Node;\n        setHtml(tempBtn, btnClose, sanitizeFn);\n        contentParts = [...contentParts, tempBtn.firstChild as Node];\n      }\n    }\n  }\n\n  // fill the template with content from options / data attributes\n  // also sanitize title && content\n  /* istanbul ignore else */\n  if (!isTooltip) {\n    /* istanbul ignore else */\n    if (title && tooltipHeader) setHtml(tooltipHeader, titleParts, sanitizeFn);\n    /* istanbul ignore else */\n    if (content && tooltipBody) setHtml(tooltipBody, contentParts, sanitizeFn);\n    // set btn\n    self.btn = querySelector('.btn-close', tooltip) || undefined;\n  } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n  // Bootstrap 5.2.x\n  // addClass(tooltip, 'position-absolute');\n  addClass(tooltip, 'position-fixed');\n  addClass(arrow, 'position-absolute');\n\n  // set popover animation and placement\n  /* istanbul ignore else */\n  if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n  /* istanbul ignore else */\n  if (animation && !hasClass(tooltip, fadeClass)) addClass(tooltip, fadeClass);\n  /* istanbul ignore else */\n  if (customClass && !hasClass(tooltip, customClass)) {\n    addClass(tooltip, customClass);\n  }\n  /* istanbul ignore else */\n  if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n};\n\nexport default createTip;\n","import { getDocument, isShadowRoot, isTableElement, getParentNode, getElementStyle } from '@thednp/shorty';\n\n/**\n * Returns an `HTMLElement` to be used as default value for *options.container*\n * for `Tooltip` / `Popover` components.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element the target\n * @returns the query result\n */\nconst getElementContainer = (element: HTMLElement): ParentNode => {\n  const majorBlockTags = ['HTML', 'BODY'];\n  const containers: ParentNode[] = [];\n  let { parentNode } = element as Node;\n\n  while (parentNode && !majorBlockTags.includes(parentNode.nodeName)) {\n    parentNode = getParentNode(parentNode) as ParentNode;\n    /* istanbul ignore else */\n    if (!(isShadowRoot(parentNode) || isTableElement(parentNode))) {\n      containers.push(parentNode);\n    }\n  }\n\n  return (\n    containers.find((c, i) => {\n      if (\n        getElementStyle(c as HTMLElement, 'position') !== 'relative' &&\n        containers.slice(i + 1).every(r => getElementStyle(r as HTMLElement, 'position') === 'static')\n      ) {\n        return c;\n      }\n      return null;\n    }) || /* istanbul ignore next: optional guard */ getDocument(element).body\n  );\n};\n\nexport default getElementContainer;\n","/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\nimport {\n  ariaDescribedBy,\n  focusoutEvent,\n  focusinEvent,\n  focusEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  mousedownEvent,\n  mouseclickEvent,\n  closest,\n  getUID,\n  getDocument,\n  getWindow,\n  removeAttribute,\n  getAttribute,\n  setAttribute,\n  hasAttribute,\n  touchstartEvent,\n  resizeEvent,\n  scrollEvent,\n  mousehoverEvent,\n  toLowerCase,\n  focus,\n  Timer,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  isApple,\n  isFunction,\n  getInstance,\n  ObjectAssign,\n  createCustomEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementStyle,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataOriginalTitle from '../strings/dataOriginalTitle';\nimport showClass from '../strings/showClass';\nimport tooltipString from '../strings/tooltipString';\nimport tooltipComponent from '../strings/tooltipComponent';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\n\nimport styleTip from '../util/styleTip';\nimport createTip from '../util/createTip';\nimport { appendPopup, removePopup, hasPopup } from '../util/popupContainer';\nimport getElementContainer from '../util/getElementContainer';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport BaseComponent from './base-component';\nimport { TooltipOptions, TooltipEvent } from '../interface/tooltip';\nimport { PopoverOptions, PopoverEvent } from '../interface/popover';\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector = `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = 'title';\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n *\n */\nlet getTooltipInstance = (element: HTMLElement) => getInstance<Tooltip>(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n */\nconst tooltipInitCallback = (element: HTMLElement) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param self the `Tooltip` instance\n */\nconst removeTooltip = (self: Tooltip) => {\n  const { element, tooltip, container, offsetParent } = self;\n  removeAttribute(element, ariaDescribedBy);\n  removePopup(tooltip as HTMLElement, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param self the `Tooltip` instance\n * @param callback the parent dispose callback\n */\nconst disposeTooltipComplete = (self: Tooltip, callback?: () => void) => {\n  const { element } = self;\n  toggleTooltipHandlers(self);\n\n  /* istanbul ignore else */\n  if (hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent) {\n    toggleTooltipTitle(self);\n  }\n  /* istanbul ignore else */\n  if (callback) callback();\n};\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipAction = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(getDocument(element), touchstartEvent, self.handleTouch as EventListener, passiveHandler);\n\n  [scrollEvent, resizeEvent].forEach(ev => {\n    action(getWindow(element), ev, self.update, passiveHandler);\n  });\n};\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipShownAction = (self: Tooltip) => {\n  const { element } = self;\n  const shownTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`shown.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, 'in');\n};\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipHiddenAction = (self: Tooltip) => {\n  const { element, onHideComplete } = self;\n  const hiddenTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hidden.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n  if (isFunction(onHideComplete)) {\n    onHideComplete();\n    self.onHideComplete = undefined;\n  }\n  Timer.clear(element, 'out');\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  // btn is only for dismissible popover\n  const { element, options, btn } = self;\n  const { trigger } = options;\n  const isPopover = self.name !== tooltipComponent;\n  const dismissible = isPopover && (options as PopoverOptions).dismissible ? true : false;\n\n  if (trigger.includes('manual')) return;\n\n  self.enabled = !!add;\n\n  const triggerOptions = trigger.split(' ');\n\n  triggerOptions.forEach(tr => {\n    /* istanbul ignore else */\n    if (tr === mousehoverEvent) {\n      action(element, mousedownEvent, self.show);\n      action(element, mouseenterEvent, self.show);\n\n      /* istanbul ignore else */\n      if (dismissible && btn) {\n        action(btn, mouseclickEvent, self.hide);\n      } else {\n        action(element, mouseleaveEvent, self.hide);\n        action(getDocument(element), touchstartEvent, self.handleTouch as EventListener, passiveHandler);\n      }\n    } else if (tr === mouseclickEvent) {\n      action(element, tr, !dismissible ? self.toggle : self.show);\n    } else if (tr === focusEvent) {\n      action(element, focusinEvent, self.show);\n      /* istanbul ignore else */\n      if (!dismissible) action(element, focusoutEvent, self.hide);\n      /* istanbul ignore else */\n      if (isApple) {\n        action(element, mouseclickEvent, () => focus(element));\n      }\n    }\n  });\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipOpenHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, container, offsetParent } = self;\n  const { offsetHeight, scrollHeight } = container as HTMLElement;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  /* istanbul ignore else */\n  const win = getWindow(element);\n  const overflow = offsetHeight !== scrollHeight;\n  const scrollTarget = container === offsetParent && overflow ? container : win;\n  action(scrollTarget, resizeEvent, self.update, passiveHandler);\n  action(scrollTarget, scrollEvent, self.update, passiveHandler);\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) action(parentModal, `hide.bs.${modalString}`, self.hide);\n  if (parentOffcanvas) action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.hide);\n};\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param self the `Tooltip` instance\n * @param content when `true`, event listeners are added\n */\nconst toggleTooltipTitle = (self: Tooltip, content?: string) => {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(\n    element,\n    titleAtt[content ? 0 : 1],\n    content || getAttribute(element, titleAtt[0]) || /* istanbul ignore next */ '',\n  );\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n};\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nexport default class Tooltip extends BaseComponent {\n  static selector = tooltipSelector;\n  static init = tooltipInitCallback;\n  static getInstance = getTooltipInstance;\n  static styleTip = styleTip;\n  declare options: TooltipOptions;\n  declare btn?: HTMLElement;\n  declare tooltip?: HTMLElement;\n  declare container: ParentNode;\n  declare arrow?: HTMLElement;\n  declare offsetParent?: HTMLElement;\n  declare enabled: boolean;\n  declare id: string;\n  declare onHideComplete?: () => void;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<TooltipOptions>) {\n    super(target, config);\n\n    const { element } = this;\n    const isTooltip = this.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    /* istanbul ignore next: this is to set Popover too */\n    getTooltipInstance = <T extends Tooltip>(elem: HTMLElement) => getInstance<T>(elem, tipComponent);\n\n    // additional properties\n    this.enabled = true;\n    /** Set unique ID for `aria-describedby`. */\n    this.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = this;\n\n    // invalidate\n    if ((!options.title && isTooltip) || (!isTooltip && !options.content)) {\n      // throw Error(`${this.name} Error: target has no content set.`);\n      return;\n    }\n\n    // reset default options\n    ObjectAssign(tooltipDefaults, { titleAttr: '' });\n\n    // set title attributes and add event listeners\n    /* istanbul ignore else */\n    if (hasAttribute(element, titleAttr) && isTooltip && typeof options.title === 'string') {\n      toggleTooltipTitle(this, options.title);\n    }\n\n    // set containers\n    this.container = getElementContainer(element);\n    this.offsetParent = ['sticky', 'fixed'].some(\n      position => getElementStyle(this.container as HTMLElement, 'position') === position,\n    )\n      ? (this.container as HTMLElement)\n      : getDocument(this.element).body;\n\n    // create tooltip here\n    createTip(this);\n\n    // attach events\n    toggleTooltipHandlers(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tooltipComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return tooltipDefaults;\n  }\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /** Shows the tooltip. */\n  show = () => this._show();\n  _show() {\n    const { options, tooltip, element, container, offsetParent, id } = this;\n    const { animation } = options;\n    const outTimer = Timer.get(element, 'out');\n    const tipContainer = container === offsetParent ? container : offsetParent;\n\n    Timer.clear(element, 'out');\n\n    if (tooltip && !outTimer && !hasPopup(tooltip, tipContainer)) {\n      Timer.set(\n        element,\n        () => {\n          const showTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`show.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, showTooltipEvent);\n          if (showTooltipEvent.defaultPrevented) return;\n\n          // append to container\n          appendPopup(tooltip, tipContainer);\n\n          setAttribute(element, ariaDescribedBy, `#${id}`);\n\n          this.update();\n          toggleTooltipOpenHandlers(this, true);\n\n          /* istanbul ignore else */\n          if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n          /* istanbul ignore else */\n          if (animation) emulateTransitionEnd(tooltip, () => tooltipShownAction(this));\n          else tooltipShownAction(this);\n        },\n        17,\n        'in',\n      );\n    }\n  }\n\n  /** Hides the tooltip. */\n  hide = () => {\n    const { options, tooltip, element, container, offsetParent } = this;\n    const { animation, delay } = options;\n\n    Timer.clear(element, 'in');\n\n    /* istanbul ignore else */\n    if (tooltip && hasPopup(tooltip, container === offsetParent ? container : offsetParent)) {\n      Timer.set(\n        element,\n        () => {\n          const hideTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hide.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, hideTooltipEvent);\n\n          if (hideTooltipEvent.defaultPrevented) return;\n\n          this.update();\n          removeClass(tooltip, showClass);\n          toggleTooltipOpenHandlers(this);\n\n          /* istanbul ignore else */\n          if (animation) emulateTransitionEnd(tooltip, () => tooltipHiddenAction(this));\n          else tooltipHiddenAction(this);\n        },\n        delay + 17,\n        'out',\n      );\n    }\n  };\n\n  /** Updates the tooltip position. */\n  update = () => {\n    styleTip<Tooltip>(this);\n  };\n\n  /** Toggles the tooltip visibility. */\n  toggle = () => {\n    const { tooltip, container, offsetParent } = this;\n\n    if (tooltip && !hasPopup(tooltip, container === offsetParent ? container : offsetParent)) this.show();\n    else this.hide();\n  };\n\n  /** Enables the tooltip. */\n  enable() {\n    const { enabled } = this;\n    /* istanbul ignore else */\n    if (!enabled) {\n      toggleTooltipHandlers(this, true);\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const { tooltip, container, offsetParent, options, enabled } = this;\n    const { animation } = options;\n    /* istanbul ignore else */\n    if (enabled) {\n      if (tooltip && hasPopup(tooltip, container === offsetParent ? container : offsetParent) && animation) {\n        this.onHideComplete = () => toggleTooltipHandlers(this);\n        this.hide();\n      } else {\n        toggleTooltipHandlers(this);\n      }\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    if (!this.enabled) this.enable();\n    else this.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   *\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch = ({ target }: TouchEvent) => {\n    const { tooltip, element } = this;\n\n    /* istanbul ignore next */\n    if (\n      (tooltip && tooltip.contains(target as HTMLElement)) ||\n      target === element ||\n      (target && element.contains(target as HTMLElement))\n    ) {\n      // smile for ESLint\n    } else {\n      this.hide();\n    }\n  };\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const { tooltip, container, offsetParent, options } = this;\n    const callback = () => disposeTooltipComplete(this, () => super.dispose());\n\n    if (options.animation && tooltip && hasPopup(tooltip, container === offsetParent ? container : offsetParent)) {\n      this.options.delay = 0; // reset delay\n      this.onHideComplete = callback;\n      this.hide();\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\nimport { getInstance, ObjectAssign, focus } from '@thednp/shorty';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\n\nimport getTipTemplate from '../util/getTipTemplate';\nimport styleTip from '../util/styleTip';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport Tooltip from './tooltip';\n\nimport type { PopoverOptions /* , PopoverEvent */ } from '../interface/popover';\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector = `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults: PopoverOptions = ObjectAssign({}, tooltipDefaults, {\n  template: getTipTemplate(popoverString),\n  content: '',\n  dismissible: false,\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n});\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n *\n */\nconst getPopoverInstance = (element: HTMLElement) => getInstance<Popover>(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n */\nconst popoverInitCallback = (element: HTMLElement) => new Popover(element);\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nexport default class Popover extends Tooltip {\n  static selector = popoverSelector;\n  static init = popoverInitCallback;\n  static getInstance = getPopoverInstance;\n  static styleTip = styleTip;\n  declare options: PopoverOptions;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<PopoverOptions>) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return popoverComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return popoverDefaults;\n  }\n\n  /* extend original `show()` */\n  show = () => {\n    super._show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    /* istanbul ignore else */\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  };\n}\n","/** @type {string} */\nconst scrollspyString = 'scrollspy';\nexport default scrollspyString;\n","/** @type {string} */\nconst scrollspyComponent = 'ScrollSpy';\nexport default scrollspyComponent;\n","/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\nimport {\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  getWindow,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementsByTagName,\n  getAttribute,\n  querySelector,\n  isHTMLElement,\n  isWindow,\n  createCustomEvent,\n  getInstance,\n  scrollEvent,\n  // ObjectAssign,\n  passiveHandler,\n  dispatchEvent,\n  getBoundingClientRect,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport scrollspyString from '../strings/scrollspyString';\nimport scrollspyComponent from '../strings/scrollspyComponent';\n\nimport BaseComponent from './base-component';\nimport { ScrollSpyOptions, ScrollSpyEvent } from '../interface/scrollspy';\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults: ScrollSpyOptions = {\n  offset: 10,\n  target: null,\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n */\nconst getScrollSpyInstance = (element: HTMLElement) => getInstance<ScrollSpy>(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n */\nconst scrollspyInitCallback = (element: HTMLElement) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = createCustomEvent<ScrollSpyEvent>(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n *\n * @param self the `ScrollSpy` instance\n */\nconst updateSpyTargets = (self: ScrollSpy) => {\n  const { target, scrollTarget, options, itemsLength, scrollHeight, element } = self;\n  const { offset } = options;\n  const isWin = isWindow(scrollTarget as Node | Window);\n\n  const links = target && getElementsByTagName('A', target);\n  const scrollHEIGHT = scrollTarget ? getScrollHeight(scrollTarget) : /* istanbul ignore next */ scrollHeight;\n\n  self.scrollTop = isWin ? (scrollTarget as Window).scrollY : (scrollTarget as HTMLElement).scrollTop;\n\n  // only update items/offsets once or with each mutation\n  /* istanbul ignore else */\n  if (links && (scrollHEIGHT !== scrollHeight || itemsLength !== links.length)) {\n    let href;\n    let targetItem;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    [...links].forEach(link => {\n      href = getAttribute(link, 'href');\n      targetItem =\n        href && href.charAt(0) === '#' && href.slice(-1) !== '#' && querySelector(href, getDocument(element));\n\n      if (targetItem) {\n        self.items.push(link);\n        rect = getBoundingClientRect(targetItem);\n        self.offsets.push((isWin ? rect.top + self.scrollTop : targetItem.offsetTop) - offset);\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n};\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n *\n * @param scrollTarget the `ScrollSpy` instance\n * @return `scrollTarget` height\n */\nconst getScrollHeight = (scrollTarget: Node | Window) => {\n  return isHTMLElement(scrollTarget as Node)\n    ? (scrollTarget as HTMLElement).scrollHeight\n    : getDocumentElement(scrollTarget as Node).scrollHeight;\n};\n\n/**\n * Returns the height property of the scrolling element.\n *\n * @param params the `ScrollSpy` instance\n */\nconst getOffsetHeight = ({ element, scrollTarget }: ScrollSpy) => {\n  return isWindow(scrollTarget as Node) ? (scrollTarget as Window).innerHeight : getBoundingClientRect(element).height;\n};\n\n/**\n * Clear all items of the target.\n *\n * @param target a single item\n */\nconst clear = (target: HTMLElement) => {\n  [...getElementsByTagName('A', target)].forEach(item => {\n    if (hasClass(item, activeClass)) removeClass(item, activeClass);\n  });\n};\n\n/**\n * Activates a new item.\n *\n * @param self the `ScrollSpy` instance\n * @param item a single item\n */\nconst activate = (self: ScrollSpy, item: HTMLElement) => {\n  const { target, element } = self;\n  if (isHTMLElement(target)) clear(target);\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents: HTMLElement[] = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement as HTMLElement;\n    if (hasClass(parentItem, 'nav') || hasClass(parentItem, 'dropdown-menu')) parents.push(parentItem);\n  }\n\n  parents.forEach(menuItem => {\n    const parentLink = menuItem.previousElementSibling as HTMLElement | null;\n\n    /* istanbul ignore else */\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n};\n\n/**\n * Toggles on/off the component event listener.\n *\n * @param self the `ScrollSpy` instance\n * @param add when `true`, listener is added\n */\nconst toggleSpyHandlers = (self: ScrollSpy, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.scrollTarget as EventTarget, scrollEvent, self.refresh, passiveHandler);\n};\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nexport default class ScrollSpy extends BaseComponent {\n  static selector = scrollspySelector;\n  static init = scrollspyInitCallback;\n  static getInstance = getScrollSpyInstance;\n  declare options: ScrollSpyOptions;\n  declare target: HTMLElement | null;\n  declare scrollTarget: HTMLElement | Window;\n  declare scrollTop: number;\n  declare maxScroll: number;\n  declare scrollHeight: number;\n  declare activeItem: HTMLElement | null;\n  declare items: HTMLElement[];\n  declare itemsLength: number;\n  declare offsets: number[];\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ScrollSpyOptions>) {\n    super(target, config);\n\n    // initialization element & options\n    const { element, options } = this;\n\n    // additional properties\n    this.target = querySelector(options.target as HTMLElement | string, getDocument(element));\n\n    // invalidate\n    if (!this.target) return;\n\n    // set initial state\n    this.scrollTarget = element.clientHeight < element.scrollHeight ? element : getWindow(element);\n    this.scrollHeight = getScrollHeight(this.scrollTarget);\n\n    // add event handlers\n    toggleSpyHandlers(this, true);\n\n    this.refresh();\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return scrollspyComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return scrollspyDefaults;\n  }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh = () => {\n    const { target } = this;\n\n    // check if target is visible and invalidate\n    /* istanbul ignore next */\n    if (target?.offsetHeight === 0) return;\n\n    updateSpyTargets(this);\n\n    const { scrollTop, maxScroll, itemsLength, items, activeItem } = this;\n\n    if (scrollTop >= maxScroll) {\n      const newActiveItem = items[itemsLength - 1];\n\n      /* istanbul ignore else */\n      if (activeItem !== newActiveItem) {\n        activate(this, newActiveItem);\n      }\n      return;\n    }\n\n    const { offsets } = this;\n\n    if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n      this.activeItem = null;\n      if (target) clear(target);\n      return;\n    }\n\n    items.forEach((item, i) => {\n      if (\n        activeItem !== item &&\n        scrollTop >= offsets[i] &&\n        (typeof offsets[i + 1] === 'undefined' || scrollTop < offsets[i + 1])\n      ) {\n        activate(this, item);\n      }\n    });\n  };\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    toggleSpyHandlers(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabString = 'tab';\nexport default tabString;\n","/** @type {string} */\nconst tabComponent = 'Tab';\nexport default tabComponent;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  emulateTransitionEnd,\n  dispatchEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getElementsByClassName,\n  closest,\n  setAttribute,\n  mouseclickEvent,\n  createCustomEvent,\n  Timer,\n  getInstance,\n  ariaSelected,\n  // ObjectAssign,\n  reflow,\n  isHTMLElement,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport collapsingClass from '../strings/collapsingClass';\nimport activeClass from '../strings/activeClass';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport tabString from '../strings/tabString';\nimport tabComponent from '../strings/tabComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { /* TabOptions, */ TabEvent } from '../interface/tab';\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: HTMLElement) => getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: HTMLElement) => new Tab(element);\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEvent>(`show.bs.${tabString}`);\nconst shownTabEvent = createCustomEvent<TabEvent>(`shown.bs.${tabString}`);\nconst hideTabEvent = createCustomEvent<TabEvent>(`hide.bs.${tabString}`);\nconst hiddenTabEvent = createCustomEvent<TabEvent>(`hidden.bs.${tabString}`);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = '';\n    removeClass(tabContent, collapsingClass);\n  }\n\n  /* istanbul ignore else */\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null };\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) || /* istanbul ignore next */ {\n      currentHeight: 0,\n      nextHeight: 0,\n    };\n    if (currentHeight === nextHeight) {\n      triggerTabEnd(self);\n    } else {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null, content: null };\n  let currentHeight = 0;\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach(c => {\n      if (isHTMLElement(c)) addClass(c, 'overflow-hidden');\n    });\n    currentHeight = isHTMLElement(content) ? content.scrollHeight : /* istanbul ignore next */ 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n  if (showTabEvent.defaultPrevented) return;\n\n  if (nextContent) addClass(nextContent, activeClass);\n  if (content) removeClass(content, activeClass);\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const nextHeight = nextContent.scrollHeight;\n    tabPrivate.set(element, { currentHeight, nextHeight, tab: null, content: null });\n\n    addClass(tabContent, collapsingClass);\n    tabContent.style.height = `${currentHeight}px`;\n    reflow(tabContent);\n    [content, nextContent].forEach(c => {\n      if (c) removeClass(c, 'overflow-hidden');\n    });\n  }\n\n  if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n    setTimeout(() => {\n      addClass(nextContent, showClass);\n      emulateTransitionEnd(nextContent, () => {\n        triggerTabShow(self);\n      });\n    }, 1);\n  } else {\n    if (nextContent) addClass(nextContent, showClass);\n    triggerTabShow(self);\n  }\n\n  if (tab) dispatchEvent(tab, hiddenTabEvent);\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (self: Tab): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  /* istanbul ignore next */\n  if (!isHTMLElement(nav as HTMLElement | undefined)) return { tab: null, content: null };\n\n  const activeTabs = getElementsByClassName(activeClass, nav as HTMLElement);\n  let tab: HTMLElement | null = null;\n  /* istanbul ignore else */\n  if (activeTabs.length === 1 && !dropdownClasses.some(c => hasClass(activeTabs[0].parentElement as HTMLElement, c))) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab as HTMLElement) ? getTargetElement(tab as HTMLElement) : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement): HTMLElement | null => {\n  /* istanbul ignore next */\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(',.')}`);\n  return dropdown ? querySelector(`.${dropdownClasses[0]}-toggle`, dropdown) : null;\n};\n\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Tab` instance\n * @param add when `true`, event listener is added\n */\nconst toggleTabHandler = (self: Tab, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, tabClickHandler);\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: Event) => {\n  const self = getTabInstance(e.target as HTMLElement);\n  /* istanbul ignore next: must filter */\n  if (!self) return;\n  e.preventDefault();\n\n  self.show();\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    if (!content) return;\n\n    const nav = closest(element, '.nav');\n    const container = closest(content, '.tab-content');\n\n    this.nav = nav;\n    this.content = content;\n    this.tabContent = container;\n\n    // event targets\n    this.dropdown = getParentDropdown(element);\n\n    // show first Tab instance of none is shown\n    // suggested on #432\n    const { tab } = getActiveTab(this);\n    if (nav && !tab) {\n      const firstTab = querySelector(tabSelector, nav);\n      const firstTabContent = firstTab && getTargetElement(firstTab);\n\n      /* istanbul ignore else */\n      if (firstTabContent) {\n        addClass(firstTab, activeClass);\n        addClass(firstTabContent, showClass);\n        addClass(firstTabContent, activeClass);\n        setAttribute(element, ariaSelected, 'true');\n      }\n    }\n\n    // add event listener\n    toggleTabHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    /* istanbul ignore else */\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(this);\n\n      /* istanbul ignore else */\n      if (nav) tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      if (isHTMLElement(tab as Node)) dispatchEvent(tab as EventTarget, hideTabEvent);\n      if (hideTabEvent.defaultPrevented) return;\n\n      addClass(element, activeClass);\n      setAttribute(element, ariaSelected, 'true');\n\n      const activeDropdown = isHTMLElement(tab as HTMLElement) && getParentDropdown(tab as HTMLElement);\n      if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n        removeClass(activeDropdown, activeClass);\n      }\n\n      /* istanbul ignore else */\n      if (nav) {\n        const toggleTab = () => {\n          if (tab) {\n            removeClass(tab, activeClass);\n            setAttribute(tab, ariaSelected, 'false');\n          }\n          if (dropdown && !hasClass(dropdown, activeClass)) addClass(dropdown, activeClass);\n        };\n\n        if (content && (hasClass(content, fadeClass) || (nextContent && hasClass(nextContent, fadeClass)))) {\n          Timer.set(nav, toggleTab, 1);\n        } else toggleTab();\n      }\n\n      if (content) {\n        removeClass(content, showClass);\n        if (hasClass(content, fadeClass)) {\n          emulateTransitionEnd(content, () => triggerTabHide(this));\n        } else {\n          triggerTabHide(this);\n        }\n      }\n    }\n  }\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    toggleTabHandler(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst toastString = 'toast';\nexport default toastString;\n","/** @type {string} */\nconst toastComponent = 'Toast';\nexport default toastComponent;\n","/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\nimport {\n  mouseclickEvent,\n  closest,\n  removeClass,\n  hasClass,\n  addClass,\n  focusoutEvent,\n  focusinEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  createCustomEvent,\n  getDocument,\n  Timer,\n  getInstance,\n  reflow,\n  // ObjectAssign,\n  emulateTransitionEnd,\n  dispatchEvent,\n  querySelectorAll,\n  querySelector,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport toastString from '../strings/toastString';\nimport toastComponent from '../strings/toastComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport { ToastOptions, ToastEvent } from '../interface/toast';\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = 'showing';\n/** @deprecated */\nconst hideClass = 'hide';\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n */\nconst getToastInstance = (element: HTMLElement) => getInstance<Toast>(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n */\nconst toastInitCallback = (element: HTMLElement) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = createCustomEvent<ToastEvent>(`show.bs.${toastString}`);\nconst shownToastEvent = createCustomEvent<ToastEvent>(`shown.bs.${toastString}`);\nconst hideToastEvent = createCustomEvent<ToastEvent>(`hide.bs.${toastString}`);\nconst hiddenToastEvent = createCustomEvent<ToastEvent>(`hidden.bs.${toastString}`);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n *\n * @param self the `Toast` instance\n */\nconst showToastComplete = (self: Toast) => {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  /* istanbul ignore else */\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n};\n\n/**\n * Executes after the toast is hidden to the user.\n *\n * @param self the `Toast` instance\n */\nconst hideToastComplete = (self: Toast) => {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n};\n\n/**\n * Executes before hiding the toast.\n *\n * @param self the `Toast` instance\n */\nconst hideToast = (self: Toast) => {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n};\n\n/**\n * Executes before showing the toast.\n *\n * @param self the `Toast` instance\n */\nconst showToast = (self: Toast) => {\n  const { element, options } = self;\n  Timer.set(\n    element,\n    () => {\n      removeClass(element, hideClass); // B/C\n      reflow(element);\n      addClass(element, showClass);\n      addClass(element, showingClass);\n\n      if (options.animation) {\n        emulateTransitionEnd(element, () => showToastComplete(self));\n      } else {\n        showToastComplete(self);\n      }\n    },\n    17,\n    showingClass,\n  );\n};\n\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Toast` instance\n * @param add when `true`, it will add the listener\n */\nconst toggleToastHandlers = (self: Toast, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, triggers, dismiss, options, hide } = self;\n\n  /* istanbul ignore else */\n  if (dismiss) {\n    action(dismiss, mouseclickEvent, hide);\n  }\n\n  /* istanbul ignore else */\n  if (options.autohide) {\n    [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent].forEach(e =>\n      action(element, e, interactiveToastHandler as EventListener),\n    );\n  }\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, toastClickHandler));\n  }\n};\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Executes after the instance has been disposed.\n *\n * @param {Toast} self the `Toast` instance\n */\nconst completeDisposeToast = (self: Toast) => {\n  Timer.clear(self.element, toastString);\n  toggleToastHandlers(self);\n};\n\n/**\n * Handles the `click` event listener for toast.\n *\n * @param e the `Event` object\n */\nconst toastClickHandler = (e: Event) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n  /* istanbul ignore next */\n  if (!self) return;\n\n  /* istanbul ignore else */\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n  self.relatedTarget = trigger;\n  self.show();\n};\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @param e the `Toast` instance\n */\nconst interactiveToastHandler = (e: MouseEvent) => {\n  const element = e.target as HTMLElement;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  /* istanbul ignore next: a solid filter is required */\n  if (!self || element === relatedTarget || element.contains(relatedTarget as Node)) return;\n\n  if ([mouseenterEvent, focusinEvent].includes(type)) {\n    Timer.clear(element, toastString);\n  } else {\n    Timer.set(element, () => self.hide(), self.options.delay, toastString);\n  }\n};\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nexport default class Toast extends BaseComponent {\n  static selector = toastSelector;\n  static init = toastInitCallback;\n  static getInstance = getToastInstance;\n  declare options: ToastOptions;\n  declare dismiss: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target the target `.toast` element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ToastOptions>) {\n    super(target, config);\n    const { element, options } = this;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) addClass(element, fadeClass);\n    else if (!options.animation && hasClass(element, fadeClass)) removeClass(element, fadeClass);\n\n    // dismiss button\n    this.dismiss = querySelector(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    this.triggers = [...querySelectorAll(toastToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // add event listener\n    toggleToastHandlers(this, true);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return toastComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return toastDefaults;\n  }\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() {\n    return hasClass(this.element, showClass);\n  }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show = () => {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && !isShown) {\n      dispatchEvent(element, showToastEvent);\n      if (showToastEvent.defaultPrevented) return;\n\n      showToast(this);\n    }\n  };\n\n  /** Hides the toast. */\n  hide = () => {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && isShown) {\n      dispatchEvent(element, hideToastEvent);\n      if (hideToastEvent.defaultPrevented) return;\n      hideToast(this);\n    }\n  };\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (isShown) {\n      removeClass(element, showClass);\n    }\n\n    completeDisposeToast(this);\n\n    super.dispose();\n  }\n}\n","import { Data, getElementsByTagName, matches } from '@thednp/shorty';\n\nimport { addListener } from '@thednp/event-listener';\n\nimport Alert from '../components/alert';\nimport Button from '../components/button';\nimport Carousel from '../components/carousel';\nimport Collapse from '../components/collapse';\nimport Dropdown from '../components/dropdown';\nimport Modal from '../components/modal';\nimport Offcanvas from '../components/offcanvas';\nimport Popover from '../components/popover';\nimport ScrollSpy from '../components/scrollspy';\nimport Tab from '../components/tab';\nimport Toast from '../components/toast';\nimport Tooltip from '../components/tooltip';\n\nconst componentsList = new Map<\n  string,\n  | typeof Alert\n  | typeof Button\n  | typeof Carousel\n  | typeof Collapse\n  | typeof Dropdown\n  | typeof Modal\n  | typeof Offcanvas\n  | typeof Popover\n  | typeof ScrollSpy\n  | typeof Tab\n  | typeof Toast\n  | typeof Tooltip\n>();\n\n[Alert, Button, Carousel, Collapse, Dropdown, Modal, Offcanvas, Popover, ScrollSpy, Tab, Toast, Tooltip].forEach(c =>\n  componentsList.set(c.prototype.name, c),\n);\n\n/**\n * Initialize all matched `Element`s for one component.\n *\n * @param callback\n * @param collection\n */\nconst initComponentDataAPI = <T>(\n  callback: (el: HTMLElement, ops?: Record<string, unknown>) => T,\n  collection: HTMLCollectionOf<HTMLElement> | HTMLElement[],\n) => {\n  [...collection].forEach(x => callback(x));\n};\n\n/**\n * Remove one component from a target container element or all in the page.\n *\n * @param component the component name\n * @param context parent `Node`\n */\nconst removeComponentDataAPI = <T>(component: string, context: ParentNode) => {\n  const compData = Data.getAllFor(component) as Map<HTMLElement, T>;\n\n  if (compData) {\n    [...compData].forEach(([element, instance]) => {\n      if (context.contains(element)) (instance as T & { dispose: () => void }).dispose();\n    });\n  }\n};\n\n/**\n * Initialize all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const initCallback = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName('*', lookUp)];\n\n  componentsList.forEach(cs => {\n    const { init, selector } = cs;\n    initComponentDataAPI(\n      init,\n      elemCollection.filter(item => matches(item, selector)),\n    );\n  });\n};\n\n/**\n * Remove all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const removeDataAPI = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n\n  componentsList.forEach(comp => {\n    removeComponentDataAPI(comp.prototype.name, lookUp);\n  });\n};\n\n// Bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, 'DOMContentLoaded', () => initCallback(), { once: true });\n}\n"],"names":["exports","r","a","s","e","c","n","o","t","i","f","d","g","E","L","lt","dt","mt","Et","vt","pt","gt","ft","bt","yt","ht","At","wt","kt","St","Q","q","G","J","x","X","Y","Z","$","_","ee","te","ne","se","re","ae","ce","ie","ue","le","de","me","Ee","ve","pe","ge","fe","be","ye","he","Ae","we","ke","Se","De","Me","Ne","Te","Ce","Le","Oe","Ie","ze","xe","He","Be","Ve","Pe","Dt","Mt","Nt","Tt","Ct","Lt","Ot","It","zt","xt","Ht","Bt","Vt","Pt","Ft","Rt","Wt","Ut","jt","Qt","qt","Gt","Kt","Jt","Xt","Yt","Zt","$t","_t","en","tn","nn","Fe","Re","H","T","We","Ue","C","B","on","sn","rn","an","cn","un","ln","dn","mn","A","En","w","R","I","vn","W","pn","gn","k","fn","je","Qe","qe","Ge","bn","yn","hn","An","wn","Ke","kn","Sn","Dn","Mn","Nn","Tn","Cn","Ln","On","In","zn","xn","Hn","u","y","Bn","S","V","P","D","Je","Xe","F","Vn","m","Ye","Ze","Pn","l","$e","_e","Fn","Rn","Wn","Un","z","h","et","jn","v","p","N","ut","Qn","qn","Gn","Kn","Jn","Xn","Yn","O","tt","Zn","$n","b","_n","M","eo","to","nt","no","ot","oo","U","j","st","so","_a","rt","ro","at","ao","co","io","uo","lo","mo","Eo","vo","po","go","fo","bo","yo","ho","ct","Ao","it","wo","ko","So","Do","Mo","No","fadeClass","showClass","dataBsDismiss","alertString","alertComponent","Version","version","BaseComponent","target","config","__publicField","element","querySelector","isString","prevInstance","Data","ObjectKeys","normalizeOptions","prop","alertSelector","alertDismissSelector","getAlertInstance","getInstance","alertInitCallback","Alert","closeAlertEvent","createCustomEvent","closedAlertEvent","alertTransitionEnd","that","toggleAlertHandler","dispatchEvent","add","action","addListener","removeListener","dismiss","close","mouseclickEvent","hasClass","removeClass","emulateTransitionEnd","activeClass","dataBsToggle","buttonString","buttonComponent","buttonSelector","getButtonInstance","buttonInitCallback","Button","toggleButtonHandler","self","isActive","addClass","setAttribute","ariaPressed","dataBsTarget","carouselString","carouselComponent","dataBsParent","dataBsContainer","getTargetElement","targetAttr","doc","getDocument","att","attValue","getAttribute","closest","carouselSelector","carouselItem","dataBsSlideTo","dataBsSlide","pausedClass","carouselDefaults","getCarouselInstance","carouselInitCallback","Carousel","startX","currentX","endX","carouselSlideEvent","carouselSlidEvent","carouselTransitionEndHandler","index","direction","slides","options","activeItem","getActiveIndex","orientation","directionClass","Timer","carouselPauseHandler","carouselResumeHandler","carouselIndicatorHandler","newIndex","carouselControlsHandler","carouselKeyHandler","code","querySelectorAll","isElementInScrollRange","RTL","isRTL","arrowKeyNext","keyArrowLeft","keyArrowRight","arrowKeyPrev","carouselDragHandler","carouselPointerDownHandler","controls","indicators","el","toggleCarouselTouchHandlers","carouselPointerMoveHandler","carouselPointerUpHandler","activateCarouselIndicator","pageIndex","pointermoveEvent","passiveHandler","pointerupEvent","toggleCarouselHandlers","touch","pause","interval","keyboard","mouseenterEvent","mouseleaveEvent","pointerdownEvent","touchstartEvent","dragstartEvent","arrow","indicator","keydownEvent","isHTMLElement","getElementsByClassName","isPaused","idx","next","eventProperties","ObjectAssign","getElementTransitionDuration","reflow","itemClasses","slide","collapsingClass","collapseString","collapseComponent","collapseSelector","collapseToggleSelector","collapseDefaults","getCollapseInstance","collapseInitCallback","Collapse","showCollapseEvent","shownCollapseEvent","hideCollapseEvent","hiddenCollapseEvent","expandCollapse","parent","triggers","noop","setElementStyle","btn","ariaExpanded","collapseContent","toggleCollapseHandler","collapseClickHandler","trigger","activeCollapse","activeCollapseInstance","dropdownMenuClasses","dropdownComponent","dropdownMenuClass","isEmptyAnchor","parentAnchor","hasAttribute","dropdownString","dropupString","dropstartString","dropendString","dropdownClasses","dropdownSelector","getDropdownInstance","dropdownInitCallback","Dropdown","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","showDropdownEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","updatedDropdownEvent","styleDropdown","menu","parentElement","offset","getElementStyle","menuEnd","style","positionClass","dropdownMargin","dropdownPosition","menuWidth","menuHeight","clientWidth","clientHeight","getDocumentElement","targetLeft","targetTop","targetWidth","targetHeight","getBoundingClientRect","leftFullExceed","rightFullExceed","bottomExceed","bottomFullExceed","topExceed","leftExceed","rightExceed","posAjust","margins","endAdjust","getMenuItems","firstElementChild","toggleDropdownDismiss","dropdownDismissHandler","focusEvent","dropdownPreventScroll","keyupEvent","dropdownKeyHandler","scrollEvent","resizeEvent","ev","getWindow","dropdownLayoutHandler","toggleDropdownHandler","dropdownClickHandler","getCurrentOpenDropdown","currentParent","type","hasData","isForm","keyArrowDown","keyArrowUp","activeElement","open","menuItems","focus","keyEscape","currentElement","currentInstance","modalString","modalComponent","offcanvasComponent","fixedTopClass","fixedBottomClass","stickyTopClass","positionStickyClass","getFixedItems","resetScrollbar","bd","getDocumentBody","fixedItems","fixed","measureScrollbar","innerWidth","setScrollbar","overflow","bodyPad","sbWidth","itemPadValue","itemMValue","offcanvasString","popupContainer","createElement","appendPopup","customContainer","containerIsBody","isNode","lookup","BODY","removePopup","hasPopup","backdropString","modalBackdropClass","offcanvasBackdropClass","modalActiveSelector","offcanvasActiveSelector","overlay","getCurrentOpen","toggleOverlayType","isModal","targetClass","appendOverlay","hasFade","showOverlay","hideOverlay","removeOverlay","isVisible","modalSelector","modalToggleSelector","modalDismissSelector","modalStaticClass","modalDefaults","getModalInstance","modalInitCallback","Modal","showModalEvent","shownModalEvent","hideModalEvent","hiddenModalEvent","setModalScrollbar","scrollbarWidth","scrollHeight","modalHeight","modalScrollHeight","modalOverflow","pad","padStyle","toggleModalDismiss","update","modalDismissHandler","modalKeyHandler","toggleModalHandler","modalClickHandler","afterModalHide","callback","relatedTarget","focusElement","isFunction","afterModalShow","beforeModalShow","removeAttribute","ariaHidden","ariaModal","beforeModalHide","isStatic","modalDialog","backdrop","selectedText","targetInsideDialog","staticTransitionEnd","duration","overlayDelay","currentOpen","offcanvasSelector","offcanvasToggleSelector","offcanvasDismissSelector","offcanvasTogglingClass","offcanvasDefaults","getOffcanvasInstance","offcanvasInitCallback","Offcanvas","showOffcanvasEvent","shownOffcanvasEvent","hideOffcanvasEvent","hiddenOffcanvasEvent","setOffCanvasScrollbar","toggleOffcanvasEvents","offcanvasTriggerHandler","toggleOffCanvasDismiss","offcanvasKeyDismissHandler","offcanvasDismissHandler","beforeOffcanvasShow","showOffcanvasComplete","beforeOffcanvasHide","hideOffcanvasComplete","offCanvasDismiss","selection","visibleTrigger","popoverString","popoverComponent","tooltipString","getTipTemplate","tipType","isTooltip","bodyClass","header","body","tipClassPositions","styleTip","tipClasses","tooltip","container","tipPositions","isPopover","tipWidth","tipHeight","htmlcw","htmlch","htmlow","placement","parentCWidth","parentOWidth","fixedParent","leftBoundry","rightBoundry","elemWidth","elemHeight","elemRectLeft","elemRectRight","elemRectTop","topPosition","bottomPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","horizontals","verticals","updatedTooltipEvent","toLowerCase","tooltipDefaults","dataOriginalTitle","tooltipComponent","setHtml","content","sanitizeFn","dirty","tempDocument","isNodeList","isArray","createTip","id","title","template","animation","customClass","dismissible","btnClose","tipString","titleParts","contentParts","placementClass","tooltipTemplate","htmlMarkup","tooltipHeader","tooltipBody","tempTitle","tempContent","tempBtn","getElementContainer","majorBlockTags","containers","parentNode","getParentNode","isShadowRoot","isTableElement","tooltipSelector","titleAttr","getTooltipInstance","tooltipInitCallback","Tooltip","removeTooltip","offsetParent","ariaDescribedBy","disposeTooltipComplete","toggleTooltipHandlers","toggleTooltipTitle","toggleTooltipAction","tooltipShownAction","shownTooltipEvent","tooltipHiddenAction","onHideComplete","hiddenTooltipEvent","tr","mousehoverEvent","mousedownEvent","focusinEvent","focusoutEvent","isApple","toggleTooltipOpenHandlers","offsetHeight","parentModal","parentOffcanvas","win","scrollTarget","titleAtt","delay","hideTooltipEvent","tipComponent","elem","getUID","position","outTimer","tipContainer","showTooltipEvent","enabled","popoverSelector","popoverDefaults","getPopoverInstance","popoverInitCallback","Popover","scrollspyString","scrollspyComponent","scrollspySelector","scrollspyDefaults","getScrollSpyInstance","scrollspyInitCallback","ScrollSpy","activateScrollSpy","updateSpyTargets","itemsLength","isWin","isWindow","links","getElementsByTagName","scrollHEIGHT","getScrollHeight","href","targetItem","rect","getOffsetHeight","link","clear","item","activate","parents","parentItem","menuItem","parentLink","toggleSpyHandlers","scrollTop","maxScroll","items","newActiveItem","offsets","tabString","tabComponent","tabSelector","getTabInstance","tabInitCallback","Tab","showTabEvent","shownTabEvent","hideTabEvent","hiddenTabEvent","tabPrivate","triggerTabEnd","tabContent","nav","triggerTabShow","nextContent","tab","currentHeight","nextHeight","triggerTabHide","getActiveTab","activeTabs","getParentDropdown","dropdown","toggleTabHandler","tabClickHandler","firstTab","firstTabContent","ariaSelected","activeDropdown","toggleTab","toastString","toastComponent","toastSelector","toastDismissSelector","toastToggleSelector","showingClass","hideClass","toastDefaults","getToastInstance","toastInitCallback","Toast","showToastEvent","shownToastEvent","hideToastEvent","hiddenToastEvent","showToastComplete","hideToastComplete","hideToast","showToast","toggleToastHandlers","hide","interactiveToastHandler","toastClickHandler","completeDisposeToast","isShown","componentsList","initComponentDataAPI","collection","removeComponentDataAPI","component","context","compData","instance","initCallback","lookUp","elemCollection","cs","init","selector","matches","removeDataAPI","comp"],"mappings":"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"}